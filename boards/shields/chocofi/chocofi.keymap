
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE_LAYER 0
#define NAVIGATION_LAYER 1
#define BT_SEL_LAYER 2
#define NUMBER_LAYER 3
#define SHIFTED_LAYER 4
#define UNICODE_LAYER 5


&sk {
//*Sticky key parameters
    release-after-ms = <1600>;
    quick-release;
};
&soft_off {
    hold-time-ms = <3000>; // Only turn off it the key is held for 3 seconds or longer.
};

/ {

    macros {
    //*Not used as of now
        // NAVIGATION MACROS //
        //*Do not put in keymap; these are referred to in the binding sequence of
        // td_seminav in the 'NAVIGATION TAP DANCES AND HOLD TAP' section.
        nav_ctrl: nav_ctrl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo NAVIGATION_LAYER>
                , <&macro_press &kp LCTRL>
                , <&macro_release &kp LCTRL>
                ;
        };
        nav_shift_ctrl: nav_shift_ctrl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo NAVIGATION_LAYER>
                , <&macro_press &kp LSHIFT>
                , <&macro_press &kp LCTRL>
                , <&macro_release &kp LSHIFT>
                , <&macro_release &kp LCTRL>
                ;
        };

    // TEXT EMOTICONS //
        //Happy
        kawaii_happy1: kawaii_happy1 {                                                 // (≧◡≦)
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LPAR>                                 //left side of face
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N2 &kp N2 &kp N6 &kp N7>             //left eye
                , <&macro_tap &kp ENTER>
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N2 &kp N5 &kp E &kp N1>              //mouth
                , <&macro_tap &kp ENTER>
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N2 &kp N2 &kp N6 &kp N6>             //right eye
                , <&macro_tap &kp ENTER>
                , <&macro_tap &kp RPAR>                                //right side of face
                ;
        };
        kawaii_happy2: kawaii_happy2 {                                                 // („• ᴗ •„) 
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LPAR>                                 //left side of face
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N2 &kp N0 &kp N1 &kp E>             //left blush
                , <&macro_tap &kp ENTER>
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N2 &kp N0 &kp N2 &kp N2>             //left eye
                , <&macro_tap &kp ENTER &kp SPACE>
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N1 &kp D &kp N1 &kp N7>              //mouth
                , <&macro_tap &kp ENTER &kp SPACE>
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N2 &kp N0 &kp N2 &kp N2>             //right eye
                , <&macro_tap &kp ENTER>
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N2 &kp N0 &kp N1 &kp E>             //right blush
                , <&macro_tap &kp ENTER>
                , <&macro_tap &kp RPAR>                                //right side of face
                ;
        };
        kawaii_happy3: kawaii_happy3 {                                                 // (๑>◡<๑) 
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LPAR>                                 //left side of face
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N0 &kp E &kp N5 &kp N1>             //left blush
                , <&macro_tap &kp ENTER>
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N0 &kp N0 &kp N3 &kp E>             //left eye
                , <&macro_tap &kp ENTER>
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N2 &kp N5 &kp E &kp N1>              //mouth
                , <&macro_tap &kp ENTER>
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N0 &kp N0 &kp N3 &kp C>             //right eye
                , <&macro_tap &kp ENTER>
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N0 &kp E &kp N5 &kp N1>             //right blush
                , <&macro_tap &kp ENTER>
                , <&macro_tap &kp RPAR>                                //right side of face
                ;
        };
        kawaii_happy4: kawaii_happy4 {                                                 // (ᵔ◡ᵔ) 
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LPAR>                                 //left side of face
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N1 &kp D &kp N5 &kp N4>             //left eye
                , <&macro_tap &kp ENTER>
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N2 &kp N5 &kp E &kp N1>              //mouth
                , <&macro_tap &kp ENTER>
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N1 &kp D &kp N5 &kp N4>             //right eye
                , <&macro_tap &kp ENTER>
                , <&macro_tap &kp RPAR>                                //right side of face
                ;
        };
        kawaii_happy5: kawaii_happy5 {                                                 // ＼(＾▽＾)／
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp F &kp F &kp N3 &kp C>                 //left arm
                , <&macro_tap &kp ENTER>
                , <&macro_tap &kp LPAR>                                 //left side of face
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp F &kp F &kp N3 &kp E>             //left eye
                , <&macro_tap &kp ENTER>
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N2 &kp N5 &kp B &kp D>              //mouth
                , <&macro_tap &kp ENTER>
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp F &kp F &kp N3 &kp E>              //right eye
                , <&macro_tap &kp ENTER>
                , <&macro_tap &kp RPAR>                                //right side of face
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp F &kp F &kp N0 &kp C>                 //right arm
                , <&macro_tap &kp ENTER>
                ;
        };
        //Love
        kawaii_love1 {                                                   // (´ ε ` )♡
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LPAR>                                 //left side of face
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N0 &kp N0 &kp B &kp N4>             //left eye
                , <&macro_tap &kp ENTER>, <&macro_tap &kp SPACE>
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N0 &kp N3 &kp B &kp N5>              //mouth
                , <&macro_tap &kp ENTER>
                , <&macro_tap &kp SPACE>
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>
                , <&macro_tap &kp N0 &kp N0 &kp N6 &kp N0>             //right eye
                , <&macro_tap &kp ENTER>
                , <&macro_tap &kp SPACE>
                , <&macro_tap &kp RPAR>                                //right side of face
                , <&macro_press &kp LSHIFT>, <&macro_press &kp LCTRL>, <&macro_tap &kp U>, <&macro_release &kp LSHIFT>, <&macro_release &kp LCTRL>   
                , <&macro_tap &kp N2 &kp N6 &kp N6 &kp N1>             //heart
                , <&macro_tap &kp ENTER>
                ;
        };
        

    };

    behaviors {
        // SPACE HOLD-TAP
        spaceht: space_numberrow_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <600>;
            bindings  = <&mo>, <&kp>;
        };

        // NAVIGATION TAP DANCE //
        td_navlayer: navigation_layer_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <1000>;
            bindings = <&mo NAVIGATION_LAYER>, <&tog NAVIGATION_LAYER>;
        };
        // MOD TAP DANCES //
         td_lshift: lshft_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LSHFT>, <&kt LSHFT>;
        };
        td_lctrl: lctrl_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LCTRL>, <&kt LCTRL>;
        };
        td_lgui: lgui_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LGUI>, <&kt LGUI>;
        };
        td_lalt: lalt_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LALT>, <&kt LALT>;
        };

        // NUMBER LAYER TAP DANCE //
        td_numlayer: number_layer_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo NUMBER_LAYER>, <&sl 5>;
        };

        // SHIFT KEY TAP DANCE //
        td_shiftthumb: shift_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LSHIFT>, <&sl 4>, <&sl 5>;
        };

        // SPACE KEY TAP DANCE //
        td_space: space_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SPACE>, <&sl 3>;
        };

    };

    combos {
        compatible = "zmk,combos";

        // NAVIGATION COMBOS //
        combo_left {
            timeout-ms = <40>;
            key-positions = <19 15>;
            bindings = <&kp LEFT>;
        };
        combo_down {
            timeout-ms = <40>;
            key-positions = <19 16>;
            bindings = <&kp DOWN>;
        };
        combo_up {
            timeout-ms = <40>;
            key-positions = <19 17>;
            bindings = <&kp UP>;
        };
        combo_right {
            timeout-ms = <40>;
            key-positions = <19 18>;
            bindings = <&kp RIGHT>;
        };
        combo_home {
            timeout-ms = <40>;
            key-positions = <19 25>;
            bindings = <&kp HOME>;
        };
        combo_page_down {
            timeout-ms = <40>;
            key-positions = <19 26>;
            bindings = <&kp PGDN>;
        };
        combo_page_up {
            timeout-ms = <40>;
            key-positions = <19 27>;
            bindings = <&kp PGUP>;
        };
        combo_end {
            timeout-ms = <40>;
            key-positions = <19 28>;
            bindings = <&kp END>;
        };

        // SYMBOL COMBOS //
        combo_singe_quote {
            timeout-ms = <40>;
            key-positions = <8 9>;
            bindings = <&kp SQT>;
        };
        combo_backslash2 {
            timeout-ms = <40>;
            key-positions = <6 7>;
            bindings = <&kp BSLH>;
        };
        combo_left_bracket2 {
            timeout-ms = <40>;
            key-positions = <6 8>;
            bindings = <&kp LBKT>;
        };
        combo_right_bracket2 {
            timeout-ms = <40>;
            key-positions = <6 9>;
            bindings = <&kp RBKT>;
        };
       

        // SPECIAL KEY AND MOD COMBOS //

        // LEFT HAND //
        combo_escape {
            timeout-ms = <40>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_tab {
            timeout-ms = <40>;
        key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        combo_shifttab {
            timeout-ms = <40>;
            key-positions = <10 11 12 13>;
            bindings = <&kp LS(TAB)>;
        };
        combo_sticky_lshift {
            timeout-ms = <40>;
            key-positions = <13 12>;
            bindings = <&td_lshift>;
        };
        combo_sticky_lctrl {
            timeout-ms = <40>;
            key-positions = <12 11>;
            bindings = <&td_lctrl>;
        };
        combo_sticky_lgui {
            timeout-ms = <40>;
            key-positions = <1 2>;
            bindings = <&td_lgui>;
        };
        combo_sticky_lalt {
            timeout-ms = <40>;
            key-positions = <2 3>; 
            bindings = <&td_lalt>;
        };
        combo_sticky_shiftctrl {
            timeout-ms = <40>;
            key-positions = <11 12 13>;
            bindings = <&sk LS(LCTRL)>;
        };
        combo_ctrl_a {
            timeout-ms = <40>;
            key-positions = <10 11 12>;
            bindings = <&kp LC(A)>;
        };

        // RIGHT HAND //
        combo_delete {
            timeout-ms = <40>;
            key-positions = <7 8>;
            bindings = <&kp DEL>;
        };
        combo_lctrldelete {
            timeout-ms = <40>;
            key-positions = <6 7 8>;
            bindings = <&kp LC(DEL)>;
        };
        combo_space {
            timeout-ms = <40>;
            key-positions = <16 17>;
            bindings = <&kp SPACE>;
        };
        combo_backspace {
            timeout-ms = <40>;
            key-positions = <17 18>;
            bindings = <&kp BSPC>;
        };
        combo_lctrlbackspace {
            timeout-ms = <40>;
            key-positions = <16 17 18>;
            bindings = <&kp LC(BSPC)>;
        };
        combo_enter {
            timeout-ms = <40>;
            key-positions = <27 28>;
            bindings = <&kp ENTER>;
        };
        combo_ctrlenter {
            timeout-ms = <40>;
            key-positions = <26 27 28>;
            bindings = <&kp LC(ENTER)>;
        };
        

        // NUMBER COMBOS //
        combo_grave {
            timeout-ms = <40>;
            key-positions = <32 0>;
            bindings = <&kp GRAVE>;
        };
        combo_one {
            timeout-ms = <40>;
            key-positions = <32 10>;
            bindings = <&kp N1>;
        };
        combo_two {
            timeout-ms = <40>;
            key-positions = <32 11>;
            bindings = <&kp N2>;
        };
        combo_three {
            timeout-ms = <40>;
            key-positions = <32 12>;
            bindings = <&kp N3>;
        };
        combo_four {
            timeout-ms = <40>;
            key-positions = <32 13>;
            bindings = <&kp N4>;
        };
        combo_five {
            timeout-ms = <40>;
            key-positions = <32 14>;
            bindings = <&kp N5>;
        };
        combo_six {
            timeout-ms = <40>;
            key-positions = <33 15>;
            bindings = <&kp N6>;
        };
        combo_seven {
            timeout-ms = <40>;
            key-positions = <33 16>;
            bindings = <&kp N7>;
        };
        combo_eight {
            timeout-ms = <40>;
            key-positions = <33 17>;
            bindings = <&kp N8>;
        };
        combo_nine {
            timeout-ms = <40>;
            key-positions = <33 18>;
            bindings = <&kp N9>;
        };
        combo_zero {
            timeout-ms = <40>;
            key-positions = <33 19>;
            bindings = <&kp N0>;
        };
        combo_minus {
            timeout-ms = <40>;
            key-positions = <33 28>;
            bindings = <&kp MINUS>;
        };
        combo_equal {
            timeout-ms = <40>;
            key-positions = <33 29>;
            bindings = <&kp EQUAL>;
        };
        combo_backslash {
            timeout-ms = <40>;
            key-positions = <33 7>;
            bindings = <&kp BSLH>;
        };
        combo_leftbracket {
            timeout-ms = <40>;
            key-positions = <33 8>;
            bindings = <&kp LBKT>;
        };
        combo_rightbracket {
            timeout-ms = <40>;
            key-positions = <33 9>;
            bindings = <&kp RBKT>;
        };

        //MOUSE KEY COMBOS//
        combo_left_click {
            timeout-ms = <40>;
            key-positions = <1 2>;
            bindings = <&mkp LCLK>;
        };
        combo_right_click {
            timeout-ms = <40>;
            key-positions = <2 3>;
            bindings = <&mkp RCLK>;
        };
        combo_middle_click {
            timeout-ms = <40>;
            key-positions = <1 2 3>;
            bindings = <&mkp MCLK>;
        };

        // SOFT OFF COMBO//
       combo_soft_off_left {
            timeout-ms = <40>;
            key-positions = <30 31>;
            bindings = <&soft_off>;
        };
        combo_soft_off_right {
            timeout-ms = <40>;
            key-positions = <34 35>;
            bindings = <&soft_off>;
        };
            

    // To be determined later: output combos (bluetooth or USB). //
        
    };



    

    keymap {
                compatible = "zmk,keymap";

//--------------BASE_LAYER--------------//

                BASE_LAYER {
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//         | LCTRL | GUI | LSHFT |   | SPC | RALT | RCTRL |
                        bindings = <
   &kp Q &kp W  &kp E &kp R &kp T        &kp Y &kp U  &kp I    &kp O   &kp P
   &kp A &kp S  &kp D &kp F &kp G        &kp H &kp J  &kp K     &kp L   &kp SEMICOLON
   &kp Z &kp X  &kp C &kp V &kp B        &kp N &kp M  &kp COMMA &kp DOT &kp FSLH
   &kp LCTRL  &kp LGUI &td_shiftthumb    &spaceht NUMBER_LAYER SPACE  &td_navlayer  &kp RALT
                        >;
                };
//--------------NAVIGATION_LAYER--------------//
                NAVIGATION_LAYER {
                        bindings = <
   &kp F1  &kp F2  &kp F3  &kp F4  &kp F5      &kp K_PLAY_PAUSE  &kp K_VOL_DN  &kp K_VOL_UP  &kp K_MUTE  &kp PRINTSCREEN   
   &kp F6  &kp F7  &kp F8  &kp F9  &kp F10     &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT    &trans 
   &kp F11  &kp F12  &trans  &trans  &trans    &kp HOME  &kp PGDN  &kp PGUP  &kp END &trans    
   &trans  &mo BT_SEL_LAYER  &trans            &trans  &trans  &trans
                        >;
                };
//--------------BT SELECTION LAYER--------------//
                BT_SEL_LAYER {
                        bindings = <
                         &trans  &trans  &trans  &trans  &bt BT_CLR    &trans  &trans  &trans  &trans  &trans
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans
                             &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                             &trans  &trans  &trans    &trans  &trans  &trans  
                        >;
                };

//--------------NUMBER LAYER--------------//
                NUMBER_LAYER {
                    bindings = <
    &kp GRAVE  &trans  &trans  &trans  &trans    &trans  &trans  &kp BSLH  &kp LBKT  &kp RBKT
    &kp N1 &kp N2 &kp N3 &kp N4 &kp N5           &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
    &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &kp MINUS  &kp EQUAL
    &trans  &trans  &trans                       &trans  &trans  &trans
                    >;
                };      
//--------------SHIFTED LAYER--------------//
                SHIFTED_LAYER {
                    bindings = <
    &kp TILDE  &trans  &trans  &trans  &trans      &trans  &trans  &kp PIPE  &kp LBRC  &kp RBRC
    &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT    &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR
    &trans  &trans  &trans  &trans  &trans         &trans  &trans  &trans  &kp UNDER  &kp PLUS
    &trans  &trans  &trans                         &trans  &trans  &trans
                    >;
                };                     
//--------------UNICODE LAYER--------------//
                UNICODE_LAYER {
                    bindings = < 
    &kawaii_happy1  &kawaii_happy2  &kawaii_happy3  &kawaii_happy4  &kawaii_happy5      &trans  &trans  &trans  &trans  &trans
    &kawaii_love1  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans
    &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans
    &trans  &trans  &trans                         &trans  &trans  &trans
                    >;
                };                     
    };

};

