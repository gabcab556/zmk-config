#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE_LAYER 0
#define NAVIGATION_LAYER 1
#define NUMBER_LAYER 2
#define SHIFTED_LAYER 3
#define MEDIA_LAYER 4
#define FN_LAYER 5
#define BT_SEL_LAYER 6

&sk {
//*Sticky key parameters
    release-after-ms = <1600>;
    quick-release;
};
&soft_off {
    hold-time-ms = <3000>; // Only turn off if the key is held for 3 seconds or longer.
};

/ {
    macros {
        nav_ctrl: nav_ctrl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo NAVIGATION_LAYER>
                , <&macro_press &kp LCTRL>
                , <&macro_pause_for_release>
                , <&macro_release &kp LCTRL>
                , <&macro_release &mo NAVIGATION_LAYER>
                ;
        };
        nav_shift_ctrl: nav_shift_ctrl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo NAVIGATION_LAYER>
                , <&macro_press &kp LSHIFT>
                , <&macro_press &kp LCTRL>
                , <&macro_pause_for_release>
                , <&macro_release &kp LSHIFT>
                , <&macro_release &kp LCTRL>
                , <&macro_release &mo NAVIGATION_LAYER>
                ;
        };
        //LCTRL + BSPC
        lctrl_bspc: lctrl_bspc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp BSPC>
                , <&macro_release &kp LCTRL>
                ;
        };
         //LCTRL + DELETE
        lctrl_delete: lctrl_delete {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp DELETE>
                , <&macro_release &kp LCTRL>
                ;
        };
        lshift_lctrl: lshift_lctrl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &sk LSHIFT>
                , <&macro_tap &sk LCTRL>
                ;
        };

    };

    behaviors {
        // SHIFT KEY TAP DANCE //
        td_shiftthumb: shift_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LSHIFT>, <&sl SHIFTED_LAYER>;
        };
        // NUMBER_LAYER TAP DANCE //
        td_numlayer: num_layer_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&mo NUMBER_LAYER>, <&sl SHIFTED_LAYER>; 
        };
        // NAVIGATION TAP DANCE //
        td_navlayer: navigation_layer_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo NAVIGATION_LAYER>, <&nav_ctrl>, <&nav_shift_ctrl>;
        };
        // MOD TAP DANCES //
        td_lshift: lshft_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LSHFT>, <&kt LSHFT>;
        };
        td_lctrl: lctrl_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LCTRL>, <&kt LCTRL>;
        };
        td_lgui: lgui_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LGUI>, <&kt LGUI>;
        };
        td_lalt: lalt_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LALT>, <&kt LALT>;
        };
        // SINGLE QUOTE TAP DANCE // 
        td_sqt: single_quote_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>;
        };
        // BACKSLASH AND BRACKETS TAP DANCES //
        td_bslh:back_slash_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp BACKSLASH>, <&kp PIPE>;
        };
        td_lbkt: left_bracket_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp LEFT_BRACE>;
        };
        td_rbkt: right_bracket_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RIGHT_BRACKET>, <&kp RIGHT_BRACE>;
        };
    };

    combos {
        compatible = "zmk,combos";
        // SOFT OFF COMBO //
        combo_soft_off {
            timeout-ms = <40>;
            key-positions = <30 31>;
            bindings = <&soft_off>;
        };
    };
    keymap {
                compatible = "zmk,keymap";
//--------------BASE_LAYER--------------//
                BASE_LAYER {
                            bindings = <
    &kp Q &kp W  &kp E &kp R &kp T                   &kp Y &kp U  &kp I    &kp O   &kp P
    &kp A &kp S  &kp D &kp F &kp G                   &kp H &kp J  &kp K     &kp L   &kp SEMICOLON
    &kp Z &kp X  &kp C &kp V &kp B                   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH
    &mo MEDIA_LAYER  &td_numlayer  &td_shiftthumb    &kp SPACE  &td_navlayer  &kp RALT
                        >;
                };
//--------------NAVIGATION_LAYER--------------//
                NAVIGATION_LAYER {
                        bindings = <
   &trans  &trans  &trans  &trans  &trans               &kp PRINTSCREEN  &kp DELETE  &lctrl_delete  &lctrl_bspc  &kp BSPC
   &trans  &trans  &trans  &trans  &trans               &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT    &trans 
   &trans  &td_lgui  &td_lctrl  &td_lshift  &td_lalt    &kp HOME  &kp PGDN  &kp PGUP  &kp END  &kp ENTER
   &trans  &trans  &trans                               &trans  &trans  &trans
                        >;
                };
                
//--------------NUMBER LAYER--------------//
                NUMBER_LAYER {
                        bindings = <
    &kp ESC  &kp TAB  &trans  &trans  &trans                &trans  &kp SQT  &kp BSLH  &kp LBKT  &kp RBKT
    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
    &kp GRAVE  &td_lgui  &td_lctrl  &td_lshift  &td_lalt    &trans  &trans  &trans  &kp MINUS  &kp EQUAL
    &trans  &trans  &trans                                  &trans  &mo FN_LAYER  &mo BT_SEL_LAYER
                        >;
                };
//--------------SHIFTED LAYER--------------//
                SHIFTED_LAYER {
                        bindings = <
    &trans   &trans  &trans  &trans  &trans                 &trans  &kp DQT  &kp PIPE  &kp LBRC  &kp RBRC
    &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT             &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR
    &kp TILDE  &td_lgui  &td_lctrl  &td_lshift  &td_lalt    &trans  &trans  &trans  &kp UNDER  &kp PLUS
    &trans  &trans  &trans                                  &trans  &trans  &trans 
                        >;
                };
//--------------MEDIA LAYER--------------//
                MEDIA_LAYER {
                    bindings = <
    &trans  &trans  &trans  &trans  &trans                              &trans  &trans  &trans  &trans  &trans 
    &trans  &kp K_MUTE  &kp K_VOL_UP  &kp K_VOL_DN  &kp K_PLAY_PAUSE    &trans  &trans  &trans  &trans  &trans
    &trans  &trans  &trans  &trans  &trans                              &trans  &trans  &trans  &trans  &trans 
    &trans  &trans  &trans                                              &trans  &trans  &trans
                    >;
                }; 
//--------------FN LAYER--------------//
                FN_LAYER {
                    bindings = <
    &kp ESC  &trans  &trans  &trans  &trans                &trans  &trans  &trans  &trans  &trans 
    &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
    &trans  &td_lgui  &td_lctrl  &td_lshift  &td_lalt    &trans  &trans  &trans  &kp F11  &kp F12 
    &trans  &trans  &trans                                &trans  &trans  &trans
                    >;
                };  
//--------------BT SELECTION LAYER--------------//
                BT_SEL_LAYER {
                        bindings = <
    &out OUT_BLE  &out OUT_USB  &bt BT_CLR  &trans  &trans              &trans  &trans  &trans  &trans  &trans
    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans
    &trans  &trans  &trans  &trans  &trans                              &trans  &trans  &trans  &trans  &trans
    &trans  &trans  &trans                                              &trans  &trans  &trans  
                        >;
                };
    }; 

};
