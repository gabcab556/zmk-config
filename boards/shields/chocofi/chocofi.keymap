
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>


/ {
    combos {
        compatible = "zmk,combos";

        // LEFT SIDE COMBOS //
            // ROW 0 //
        combo_escape {
            timeout-ms = <20>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
         combo_left_click {
            timeout-ms = <20>;
            key-positions = <1 2>;
            bindings = <&mkp LCLK>;
        };
         combo_right_click {
            timeout-ms = <20>;
            key-positions = <2 3>;
            bindings = <&kp RCLK>;
        };
         combo_middle_click {
            timeout-ms = <20>;
            key-positions = <1 2 3>;
            bindings = <&mkp MCLK>;
        };
        combo_grave {
            timeout-ms = <20>;
            key-positions = <3 0>;
            bindings = <&kp GRAVE>;
        };
        

            // ROW 1 //

        combo_tab {
            timeout-ms = <20>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

            // ROW 1 CROSS 0 //

         combo_one {
            timeout-ms = <20>;
            key-positions = <3 10>;
            bindings = <&kp N1>;
        };
         combo_two {
            timeout-ms = <20>;
            key-positions = <3 11>;
            bindings = <&kp N2>;
         };
          combo_three {
            timeout-ms = <20>;
            key-positions = <3 12>;
            bindings = <&kp N3>;
        };
          combo_four {
            timeout-ms = <20>;
            key-positions = <2 13>;
            bindings = <&kp N4>;
        };
          combo_five {
            timeout-ms = <20>;
            key-positions = <2 14>;
            bindings = <&kp N5>;
        };

            // ROW 2 CROSS 1 //

        combo_F1 {
            timeout-ms = <20>;
            key-positions = <13 20>;
            bindings = <&kp F1>;
        };
        combo_F2 {
            timeout-ms = <20>;
            key-positions = <13 21>;
            bindings = <&kp F2>;
        };
        combo_F3 {
            timeout-ms = <20>;
            key-positions = <13 22>;
            bindings = <&kp F3>;
        };
        combo_F4 {
            timeout-ms = <20>;
            key-positions = <12 23>;
            bindings = <&kp F4>;
        };
        combo_F5 {
            timeout-ms = <20>;
            key-positions = <12 24>;
            bindings = <&kp F5>;
        };
        

        // RIGHT SIDE COMBOS //

            // ROW 0 //

        combo_backslash {
            timeout-ms = <20>;
            key-positions = <6 7>;
            bindings = <&kp BSLH>;
        };
        combo_left_bracket {
            timeout-ms = <20>;
            key-positions = <6 8>;
            bindings = <&kp LBKT>;
        };
        combo_right_bracket {
            timeout-ms = <20>;
            key-positions = <6 9>;
            bindings = <&kp RBKT>;
        };
        combo_delete {
            timeout-ms = <20>;
            key-positions = <7 8>;
            bindings = <&kp DEL>;
        };
        combo_enter {
            timeout-ms = <20>;
            key-positions = <8 9>;
            bindings = <&kp ENTER>;
        };
        combo_printscreen {
            timeout-ms = <20>;
            key-positions = <7 8 9>;
            bindings = <&kp PSCRN>;
        };

            // ROW 0 CROSS 1 //

        combo_singe_quote {
            timeout-ms = <20>;
            key-positions = <9 16>;
            bindings = <&kp SQT>;
        };
            // ROW 1 //

        combo_left {
            timeout-ms = <20>;
            key-positions = <19 15>;
            bindings = <&kp LEFT>;
        };
        combo_down {
            timeout-ms = <20>;
            key-positions = <19 16>;
            bindings = <&kp DOWN>;
        };
        combo_up {
            timeout-ms = <20>;
            key-positions = <19 17>;
            bindings = <&kp UP>;
        };
        combo_right {
            timeout-ms = <20>;
            key-positions = <19 18>;
            bindings = <&kp RIGHT>;
        };

            // ROW 1 CROSS 0 //
        
        combo_six {
            timeout-ms = <20>;
            key-positions = <7 15>;
            bindings = <&kp N6>;
        };
        combo_seven {
            timeout-ms = <20>;
            key-positions = <7 16>;
            bindings = <&kp N7>;
        };
        combo_eight {
            timeout-ms = <20>;
            key-positions = <6 17>;
            bindings = <&kp N8>;
        };
        combo_nine {
            timeout-ms = <20>;
            key-positions = <6 18>;
            bindings = <&kp N9>;
        };
        combo_zero {
            timeout-ms = <20>;
            key-positions = <6 19>;
            bindings = <&kp N0>;
        };

            // ROW 2 CROSS 1 //

        combo_home {
            timeout-ms = <20>;
            key-positions = <19 25>;
            bindings = <&kp HOME>;
        };
        combo_page_down {
            timeout-ms = <20>;
            key-positions = <19 26>;
            bindings = <&kp PGDN>;
        };
        combo_page_up {
            timeout-ms = <20>;
            key-positions = <19 27>;
            bindings = <&kp PGUP>;
        };
        combo_end {
            timeout-ms = <20>;
            key-positions = <19 28>;
            bindings = <&kp END>;
        };

        combo_F6 {
            timeout-ms = <20>;
            key-positions = <17 25>;
            bindings = <&kp F6>;
        };
        combo_F7 {
            timeout-ms = <20>;
            key-positions = <17 26>;
            bindings = <&kp F7>;
        };
        combo_F8 {
            timeout-ms = <20>;
            key-positions = <16 27>;
            bindings = <&kp F8>;
        };
        combo_F9 {
            timeout-ms = <20>;
            key-positions = <16 28>;
            bindings = <&kp F9>;
        };
        combo_F10 {
            timeout-ms = <20>;
            key-positions = <16 29>;
            bindings = <&kp F10>;
        };
        combo_F11 {
            timeout-ms = <20>;
            key-positions = <16 27 28>;
            bindings = <&kp F11>;
        };
        combo_F12 {
            timeout-ms = <20>;
            key-positions = <16 28 29>;
            bindings = <&kp F12>;
        };
       
            // ROW 2 //
        
        combo_play_pause {
            timeout-ms = <20>;
            key-positions = <29 25>;
            bindings = <&kp K_PLAY_PAUSE>;
        };
        combo_volume_down {
            timeout-ms = <20>;
            key-positions = <29 26>;
            bindings = <&kp K_VOL_DN>;
        };
        combo_volume_up {
            timeout-ms = <20>;
            key-positions = <29 27>;
            bindings = <&kp K_VOL_UP>;
        };
        combo_mute {
            timeout-ms = <20>;
            key-positions = <29 28>;
            bindings = <&kp K_MUTE>;
        };

        // POWER/OUTPUT/BLUETOOTH CONTROL COMBOS //
        
        combo_external_power_on {
            timeout-ms = <20>;
            key-positions = <31 32>;
            bindings = <&ext_power EP_ON>;
        };
        combo_external_power_off {
            timeout-ms = <20>;
            key-positions = <30 32>;
            bindings = <&ext_power EP_OFF>;
        };
        combo_output_bluetooth {
            timeout-ms = <20>;
            key-positions = <0 4>;
            bindings = <&out OUT_BLE>;
        };
        combo_output_usb {
            timeout-ms = <20>;
            key-positions = <10 14>;
            bindings = <&out OUT_USB>;
        };


        // CONTROLLER RESET COMBOS //

        combo_sys_reset_left {
            timeout-ms = <50>;
            key-positions = <20 25>;
            bindings = <&bootloader>;
        };    
        combo_sys_reset_right {
            timeout-ms = <50>;
            key-positions = <20 25>;
            bindings = <&bootloader>;
        };

        // LAYER COMBOS //

        combo_layer_1 {
            timeout-ms = <50>;
            key-positions = <31 34>;
            bindings = <&mo 2>;
        };
        combo_layer_2 {
            timeout-ms = <50>;
            key-positions = <30 35>;
            bindings = <&mo 2>;
        };


    };

    keymap {
                compatible = "zmk,keymap";

// ---------------------------Default Layer---------------------------------------------------------

                0 {
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//         | LCTRL | GUI | LSHFT |   | SPC | RALT | RCTRL |
                        bindings = <
   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P
   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI
   &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH
     &kp LCTRL &kp GUI &kp LSHFT   &kp SPACE &kp RALT &kp RCTRL
                        >;
                };
// ------------------------------Layer 1--------------------------------------------------

                1 {
                        bindings = <
   &kp GRAVE  &trans  &trans  &trans  &trans    &trans  &trans  &kp BSLH  &kp LBKT  &kp RBKT   
   &kp N1     &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8    &kp N9    &kp N0 
   &trans     &trans  &trans  &trans  &trans    &trans  &trans  &trans    &kp MINUS &kp EQUAL    
                      &trans  &trans  &trans    &trans  &trans  &trans
                        >;
                };
// ------------------------------Layer 2-----------------------------------------------------------

                2 {
                        bindings = <
                         &trans  &trans  &trans  &trans  &bt BT_CLR  &trans  &trans  &trans  &trans  &trans
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans
                             &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                             &trans  &trans  &trans  &trans  &trans  &trans  
                        >;
                };


    };

};

