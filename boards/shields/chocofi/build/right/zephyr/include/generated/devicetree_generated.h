/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/gab/git/zmk/app/boards/shields/chocofi/build/right/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   /home/gab/git/zmk/app/module/dts/bindings, /home/gab/git/zmk/app/dts/bindings, $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /soc
 *   2   /soc/gpio@50000000
 *   3   /EXT_POWER
 *   4   /aliases
 *   5   /chosen
 *   6   /connector
 *   7   /connector_a
 *   8   /entropy_bt_hci
 *   9   /keymap_transform_0
 *   10  /soc/gpio@50000300
 *   11  /kscan
 *   12  /soc/interrupt-controller@e000e100
 *   13  /soc/timer@40009000
 *   14  /sw-pwm
 *   15  /vbatt
 *   16  /behaviors
 *   17  /behaviors/macro_param_1to1
 *   18  /behaviors/macro_param_1to2
 *   19  /behaviors/macro_param_2to1
 *   20  /behaviors/macro_param_2to2
 *   21  /behaviors/macro_pause_for_release
 *   22  /behaviors/macro_press
 *   23  /behaviors/macro_release
 *   24  /behaviors/macro_tap
 *   25  /behaviors/macro_tap_time
 *   26  /behaviors/macro_wait_time
 *   27  /behaviors/rgb_ug
 *   28  /behaviors/sysreset
 *   29  /combos
 *   30  /behaviors/key_press
 *   31  /combos/combo_backslash
 *   32  /combos/combo_backspace
 *   33  /combos/combo_delete
 *   34  /combos/combo_down
 *   35  /combos/combo_eight
 *   36  /combos/combo_end
 *   37  /combos/combo_enter
 *   38  /combos/combo_equal
 *   39  /combos/combo_escape
 *   40  /behaviors/extpower
 *   41  /combos/combo_external_power_off
 *   42  /combos/combo_external_power_on
 *   43  /combos/combo_five
 *   44  /combos/combo_four
 *   45  /combos/combo_grave
 *   46  /combos/combo_home
 *   47  /combos/combo_lctrlbackspace
 *   48  /combos/combo_lctrldelete
 *   49  /combos/combo_left
 *   50  /combos/combo_left_bracket
 *   51  /behaviors/mouse_key_press
 *   52  /combos/combo_left_click
 *   53  /combos/combo_middle_click
 *   54  /combos/combo_minus
 *   55  /combos/combo_nine
 *   56  /combos/combo_one
 *   57  /behaviors/outputs
 *   58  /combos/combo_output_bluetooth
 *   59  /combos/combo_output_usb
 *   60  /combos/combo_page_down
 *   61  /combos/combo_page_up
 *   62  /combos/combo_printscreen
 *   63  /combos/combo_right
 *   64  /combos/combo_right_bracket
 *   65  /combos/combo_right_click
 *   66  /combos/combo_seven
 *   67  /combos/combo_singe_quote
 *   68  /combos/combo_six
 *   69  /behaviors/bootload
 *   70  /combos/combo_sys_reset_left
 *   71  /combos/combo_sys_reset_right
 *   72  /combos/combo_tab
 *   73  /combos/combo_three
 *   74  /combos/combo_two
 *   75  /combos/combo_up
 *   76  /combos/combo_zero
 *   77  /cpus
 *   78  /cpus/cpu@0
 *   79  /cpus/cpu@0/itm@e0000000
 *   80  /keymap
 *   81  /behaviors/momentary_layer
 *   82  /behaviors/e_shifted_tap_dance
 *   83  /behaviors/i_shifted_tap_dance
 *   84  /behaviors/j_shifted_tap_dance
 *   85  /behaviors/toggle_layer
 *   86  /behaviors/navmod_layer_tap_dance
 *   87  /behaviors/r_shifted_tap_dance
 *   88  /behaviors/seminav_tap_dance
 *   89  /behaviors/u_shifted_tap_dance
 *   90  /keymap/0
 *   91  /behaviors/key_toggle
 *   92  /behaviors/sticky_key
 *   93  /behaviors/lalt_tap_dance
 *   94  /behaviors/lctrl_tap_dance
 *   95  /behaviors/lgui_tap_dance
 *   96  /behaviors/lshft_tap_dance
 *   97  /behaviors/transparent
 *   98  /keymap/1
 *   99  /behaviors/bluetooth
 *   100 /keymap/2
 *   101 /keymap/3
 *   102 /keymap/4
 *   103 /keymap/5
 *   104 /keymap/6
 *   105 /leds
 *   106 /leds/led_0
 *   107 /pin-controller
 *   108 /pin-controller/i2c0_default
 *   109 /pin-controller/i2c0_default/group1
 *   110 /pin-controller/i2c0_sleep
 *   111 /pin-controller/i2c0_sleep/group1
 *   112 /pin-controller/uart0_default
 *   113 /pin-controller/uart0_default/group1
 *   114 /pin-controller/uart0_default/group2
 *   115 /pin-controller/uart0_sleep
 *   116 /pin-controller/uart0_sleep/group1
 *   117 /soc/acl@4001e000
 *   118 /soc/adc@40007000
 *   119 /soc/ccm@4000f000
 *   120 /soc/clock@40000000
 *   121 /soc/comparator@40013000
 *   122 /soc/crypto@5002a000
 *   123 /soc/ecb@4000e000
 *   124 /soc/egu@40014000
 *   125 /soc/egu@40015000
 *   126 /soc/egu@40016000
 *   127 /soc/egu@40017000
 *   128 /soc/egu@40018000
 *   129 /soc/egu@40019000
 *   130 /soc/ficr@10000000
 *   131 /soc/gpiote@40006000
 *   132 /soc/i2c@40003000
 *   133 /soc/i2c@40004000
 *   134 /soc/i2s@40025000
 *   135 /soc/memory@20000000
 *   136 /soc/mwu@40020000
 *   137 /soc/nfct@40005000
 *   138 /soc/pdm@4001d000
 *   139 /soc/ppi@4001f000
 *   140 /soc/pwm@4001c000
 *   141 /soc/pwm@40021000
 *   142 /soc/pwm@40022000
 *   143 /soc/pwm@4002d000
 *   144 /soc/qdec@40012000
 *   145 /soc/qspi@40029000
 *   146 /soc/random@4000d000
 *   147 /soc/rtc@4000b000
 *   148 /soc/rtc@40011000
 *   149 /soc/rtc@40024000
 *   150 /soc/spi@40003000
 *   151 /soc/spi@40004000
 *   152 /soc/spi@40023000
 *   153 /soc/spi@4002f000
 *   154 /soc/temp@4000c000
 *   155 /soc/timer@40008000
 *   156 /soc/timer@4000a000
 *   157 /soc/timer@4001a000
 *   158 /soc/timer@4001b000
 *   159 /soc/timer@e000e010
 *   160 /soc/uart@40002000
 *   161 /soc/uart@40028000
 *   162 /soc/uicr@10001000
 *   163 /soc/watchdog@40010000
 *   164 /soc/flash-controller@4001e000
 *   165 /soc/flash-controller@4001e000/flash@0
 *   166 /soc/flash-controller@4001e000/flash@0/partitions
 *   167 /soc/flash-controller@4001e000/flash@0/partitions/partition@0
 *   168 /soc/flash-controller@4001e000/flash@0/partitions/partition@26000
 *   169 /soc/flash-controller@4001e000/flash@0/partitions/partition@ec000
 *   170 /soc/flash-controller@4001e000/flash@0/partitions/partition@f4000
 *   171 /soc/power@40000000
 *   172 /soc/power@40000000/gpregret1@4000051c
 *   173 /soc/power@40000000/gpregret2@40000520
 *   174 /soc/radio@40001000
 *   175 /soc/radio@40001000/ieee802154
 *   176 /soc/usbd@40027000
 *   177 /soc/usbd@40027000/cdc_acm_uart
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"

/* Helper macros for child nodes of this node. */
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_pin_controller) fn(DT_N_S_entropy_bt_hci) fn(DT_N_S_sw_pwm) fn(DT_N_S_cpus) fn(DT_N_S_connector) fn(DT_N_S_connector_a) fn(DT_N_S_leds) fn(DT_N_S_ext_power) fn(DT_N_S_vbatt) fn(DT_N_S_keymap_transform_0) fn(DT_N_S_kscan) fn(DT_N_S_behaviors) fn(DT_N_S_combos) fn(DT_N_S_keymap)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_entropy_bt_hci) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_sw_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector_a) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ext_power) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbatt) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_transform_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_kscan) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) fn(DT_N_S_sw_pwm, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_connector_a, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_ext_power, __VA_ARGS__) fn(DT_N_S_vbatt, __VA_ARGS__) fn(DT_N_S_keymap_transform_0, __VA_ARGS__) fn(DT_N_S_kscan, __VA_ARGS__) fn(DT_N_S_behaviors, __VA_ARGS__) fn(DT_N_S_combos, __VA_ARGS__) fn(DT_N_S_keymap, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_sw_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector_a, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ext_power, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbatt, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_transform_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_kscan, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_pin_controller) fn(DT_N_S_entropy_bt_hci) fn(DT_N_S_cpus) fn(DT_N_S_connector) fn(DT_N_S_connector_a) fn(DT_N_S_leds) fn(DT_N_S_ext_power) fn(DT_N_S_vbatt) fn(DT_N_S_keymap_transform_0) fn(DT_N_S_kscan) fn(DT_N_S_behaviors) fn(DT_N_S_combos) fn(DT_N_S_keymap)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_entropy_bt_hci) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector_a) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ext_power) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbatt) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_transform_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_kscan) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_connector_a, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_ext_power, __VA_ARGS__) fn(DT_N_S_vbatt, __VA_ARGS__) fn(DT_N_S_keymap_transform_0, __VA_ARGS__) fn(DT_N_S_kscan, __VA_ARGS__) fn(DT_N_S_behaviors, __VA_ARGS__) fn(DT_N_S_combos, __VA_ARGS__) fn(DT_N_S_keymap, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector_a, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ext_power, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbatt, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_transform_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_kscan, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /soc */ \
	3, /* /EXT_POWER */ \
	4, /* /aliases */ \
	5, /* /chosen */ \
	6, /* /connector */ \
	7, /* /connector_a */ \
	8, /* /entropy_bt_hci */ \
	9, /* /keymap_transform_0 */ \
	11, /* /kscan */ \
	14, /* /sw-pwm */ \
	15, /* /vbatt */ \
	16, /* /behaviors */ \
	29, /* /combos */ \
	77, /* /cpus */ \
	80, /* /keymap */ \
	105, /* /leds */ \
	107, /* /pin-controller */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_nice_nano DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_nice_nano 1
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"nice,nano"}
#define DT_N_P_compatible_IDX_0 "nice,nano"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED nice,nano
#define DT_N_P_compatible_IDX_0_STRING_TOKEN nice_nano
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN NICE_NANO
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_ficr_10000000) fn(DT_N_S_soc_S_uicr_10001000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_clock_40000000) fn(DT_N_S_soc_S_power_40000000) fn(DT_N_S_soc_S_radio_40001000) fn(DT_N_S_soc_S_uart_40002000) fn(DT_N_S_soc_S_i2c_40003000) fn(DT_N_S_soc_S_spi_40003000) fn(DT_N_S_soc_S_i2c_40004000) fn(DT_N_S_soc_S_spi_40004000) fn(DT_N_S_soc_S_nfct_40005000) fn(DT_N_S_soc_S_gpiote_40006000) fn(DT_N_S_soc_S_adc_40007000) fn(DT_N_S_soc_S_timer_40008000) fn(DT_N_S_soc_S_timer_40009000) fn(DT_N_S_soc_S_timer_4000a000) fn(DT_N_S_soc_S_rtc_4000b000) fn(DT_N_S_soc_S_temp_4000c000) fn(DT_N_S_soc_S_random_4000d000) fn(DT_N_S_soc_S_ecb_4000e000) fn(DT_N_S_soc_S_ccm_4000f000) fn(DT_N_S_soc_S_watchdog_40010000) fn(DT_N_S_soc_S_rtc_40011000) fn(DT_N_S_soc_S_qdec_40012000) fn(DT_N_S_soc_S_comparator_40013000) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000) fn(DT_N_S_soc_S_timer_4001a000) fn(DT_N_S_soc_S_timer_4001b000) fn(DT_N_S_soc_S_pwm_4001c000) fn(DT_N_S_soc_S_pdm_4001d000) fn(DT_N_S_soc_S_acl_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000) fn(DT_N_S_soc_S_ppi_4001f000) fn(DT_N_S_soc_S_mwu_40020000) fn(DT_N_S_soc_S_pwm_40021000) fn(DT_N_S_soc_S_pwm_40022000) fn(DT_N_S_soc_S_spi_40023000) fn(DT_N_S_soc_S_rtc_40024000) fn(DT_N_S_soc_S_i2s_40025000) fn(DT_N_S_soc_S_usbd_40027000) fn(DT_N_S_soc_S_uart_40028000) fn(DT_N_S_soc_S_qspi_40029000) fn(DT_N_S_soc_S_pwm_4002d000) fn(DT_N_S_soc_S_spi_4002f000) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300) fn(DT_N_S_soc_S_crypto_5002a000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ficr_10000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uicr_10001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nfct_40005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpiote_40006000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40007000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40009000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4000a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_4000b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_temp_4000c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_4000d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecb_4000e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_4000f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40011000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qdec_40012000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_comparator_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40015000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40016000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40017000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40018000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40019000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4001a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4001b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_4001c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pdm_4001d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_acl_4001e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ppi_4001f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mwu_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40023000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40024000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40025000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_40027000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qspi_40029000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_4002d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_4002f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000300) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_crypto_5002a000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4000a000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_4000b000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_qdec_40012000, __VA_ARGS__) fn(DT_N_S_soc_S_comparator_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001a000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001b000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4001c000, __VA_ARGS__) fn(DT_N_S_soc_S_pdm_4001d000, __VA_ARGS__) fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40023000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40024000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40025000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_qspi_40029000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4002d000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_4002f000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__) fn(DT_N_S_soc_S_crypto_5002a000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40009000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4000a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_4000b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40011000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qdec_40012000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_comparator_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4001a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4001b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_4001c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pdm_4001d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40023000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40024000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40025000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qspi_40029000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_4002d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_4002f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_crypto_5002a000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_ficr_10000000) fn(DT_N_S_soc_S_uicr_10001000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_clock_40000000) fn(DT_N_S_soc_S_power_40000000) fn(DT_N_S_soc_S_radio_40001000) fn(DT_N_S_soc_S_nfct_40005000) fn(DT_N_S_soc_S_gpiote_40006000) fn(DT_N_S_soc_S_adc_40007000) fn(DT_N_S_soc_S_temp_4000c000) fn(DT_N_S_soc_S_random_4000d000) fn(DT_N_S_soc_S_ecb_4000e000) fn(DT_N_S_soc_S_ccm_4000f000) fn(DT_N_S_soc_S_watchdog_40010000) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000) fn(DT_N_S_soc_S_acl_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000) fn(DT_N_S_soc_S_ppi_4001f000) fn(DT_N_S_soc_S_mwu_40020000) fn(DT_N_S_soc_S_usbd_40027000) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ficr_10000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uicr_10001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nfct_40005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpiote_40006000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40007000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_temp_4000c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_4000d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecb_4000e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_4000f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40015000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40016000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40017000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40018000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40019000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_acl_4001e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ppi_4001f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mwu_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_40027000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000300)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 1
#define DT_N_S_soc_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	2, /* /soc/gpio@50000000 */ \
	10, /* /soc/gpio@50000300 */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	13, /* /soc/timer@40009000 */ \
	117, /* /soc/acl@4001e000 */ \
	118, /* /soc/adc@40007000 */ \
	119, /* /soc/ccm@4000f000 */ \
	120, /* /soc/clock@40000000 */ \
	121, /* /soc/comparator@40013000 */ \
	122, /* /soc/crypto@5002a000 */ \
	123, /* /soc/ecb@4000e000 */ \
	124, /* /soc/egu@40014000 */ \
	125, /* /soc/egu@40015000 */ \
	126, /* /soc/egu@40016000 */ \
	127, /* /soc/egu@40017000 */ \
	128, /* /soc/egu@40018000 */ \
	129, /* /soc/egu@40019000 */ \
	130, /* /soc/ficr@10000000 */ \
	131, /* /soc/gpiote@40006000 */ \
	132, /* /soc/i2c@40003000 */ \
	133, /* /soc/i2c@40004000 */ \
	134, /* /soc/i2s@40025000 */ \
	135, /* /soc/memory@20000000 */ \
	136, /* /soc/mwu@40020000 */ \
	137, /* /soc/nfct@40005000 */ \
	138, /* /soc/pdm@4001d000 */ \
	139, /* /soc/ppi@4001f000 */ \
	140, /* /soc/pwm@4001c000 */ \
	141, /* /soc/pwm@40021000 */ \
	142, /* /soc/pwm@40022000 */ \
	143, /* /soc/pwm@4002d000 */ \
	144, /* /soc/qdec@40012000 */ \
	145, /* /soc/qspi@40029000 */ \
	146, /* /soc/random@4000d000 */ \
	147, /* /soc/rtc@4000b000 */ \
	148, /* /soc/rtc@40011000 */ \
	149, /* /soc/rtc@40024000 */ \
	150, /* /soc/spi@40003000 */ \
	151, /* /soc/spi@40004000 */ \
	152, /* /soc/spi@40023000 */ \
	153, /* /soc/spi@4002f000 */ \
	154, /* /soc/temp@4000c000 */ \
	155, /* /soc/timer@40008000 */ \
	156, /* /soc/timer@4000a000 */ \
	157, /* /soc/timer@4001a000 */ \
	158, /* /soc/timer@4001b000 */ \
	159, /* /soc/timer@e000e010 */ \
	160, /* /soc/uart@40002000 */ \
	161, /* /soc/uart@40028000 */ \
	162, /* /soc/uicr@10001000 */ \
	163, /* /soc/watchdog@40010000 */ \
	164, /* /soc/flash-controller@4001e000 */ \
	171, /* /soc/power@40000000 */ \
	174, /* /soc/radio@40001000 */ \
	176, /* /soc/usbd@40027000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_nordic_nrf52840_qiaa DT_N_S_soc
#define DT_N_INST_0_nordic_nrf52840      DT_N_S_soc
#define DT_N_INST_0_nordic_nrf52         DT_N_S_soc
#define DT_N_INST_0_simple_bus           DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf52840_qiaa 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_0 "nrf52840-qiaa"
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf52840 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_1 "nrf52840"
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf52 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_2 "Nordic Semiconductor"
#define DT_N_S_soc_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_2 "nrf52"
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"nordic,nrf52840-qiaa", "nordic,nrf52840", "nordic,nrf52", "simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "nordic,nrf52840-qiaa"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf52840-qiaa
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN nordic_nrf52840_qiaa
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF52840_QIAA
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_1 "nordic,nrf52840"
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf52840
#define DT_N_S_soc_P_compatible_IDX_1_STRING_TOKEN nordic_nrf52840
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF52840
#define DT_N_S_soc_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_2 "nordic,nrf52"
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UNQUOTED nordic,nrf52
#define DT_N_S_soc_P_compatible_IDX_2_STRING_TOKEN nordic_nrf52
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UPPER_TOKEN NORDIC_NRF52
#define DT_N_S_soc_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_3 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_3_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_3_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_3_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_IDX_3_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0) \
	fn(DT_N_S_soc, compatible, 1) \
	fn(DT_N_S_soc, compatible, 2) \
	fn(DT_N_S_soc, compatible, 3)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 3)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 3, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 3, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 4
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/gpio@50000000
 *
 * Node identifier: DT_N_S_soc_S_gpio_50000000
 *
 * Binding (compatible = nordic,nrf-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_50000000_PATH "/soc/gpio@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_50000000_FULL_NAME "gpio@50000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_50000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_50000000_CHILD_IDX 52

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_50000000_ORD 2
#define DT_N_S_soc_S_gpio_50000000_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_50000000_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_50000000_SUPPORTS_ORDS \
	3, /* /EXT_POWER */ \
	11, /* /kscan */ \
	106, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_50000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpio DT_N_S_soc_S_gpio_50000000
#define DT_N_NODELABEL_gpio0        DT_N_S_soc_S_gpio_50000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_50000000_REG_NUM 2
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_1_VAL_ADDRESS 1342178560 /* 0x50000500 */
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_1_VAL_SIZE 768 /* 0x300 */
#define DT_N_S_soc_S_gpio_50000000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_50000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_50000000_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_50000000_COMPAT_MATCHES_nordic_nrf_gpio 1
#define DT_N_S_soc_S_gpio_50000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_gpio_50000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_COMPAT_MODEL_IDX_0 "nrf-gpio"
#define DT_N_S_soc_S_gpio_50000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_50000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_50000000_P_reg {1342177280 /* 0x50000000 */, 512 /* 0x200 */, 1342178560 /* 0x50000500 */, 768 /* 0x300 */}
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_1 512
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_2 1342178560
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_3 768
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_port 0
#define DT_N_S_soc_S_gpio_50000000_P_port_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_50000000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_ngpios 32
#define DT_N_S_soc_S_gpio_50000000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_status "okay"
#define DT_N_S_soc_S_gpio_50000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_50000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_50000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_50000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000000, status, 0)
#define DT_N_S_soc_S_gpio_50000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_50000000, status, 0)
#define DT_N_S_soc_S_gpio_50000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_50000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000000_P_status_LEN 1
#define DT_N_S_soc_S_gpio_50000000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_compatible {"nordic,nrf-gpio"}
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0 "nordic,nrf-gpio"
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpio
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpio
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPIO
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000000, compatible, 0)
#define DT_N_S_soc_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_50000000, compatible, 0)
#define DT_N_S_soc_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_50000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_50000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_50000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /EXT_POWER
 *
 * Node identifier: DT_N_S_ext_power
 *
 * Binding (compatible = zmk,ext-power-generic):
 *   /home/gab/git/zmk/app/dts/bindings/zmk,ext-power-generic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_ext_power_PATH "/EXT_POWER"

/* Node's name with unit-address: */
#define DT_N_S_ext_power_FULL_NAME "EXT_POWER"

/* Node parent (/) identifier: */
#define DT_N_S_ext_power_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_ext_power_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_ext_power_FOREACH_CHILD(fn) 
#define DT_N_S_ext_power_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_ext_power_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_ext_power_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_ext_power_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_ext_power_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_ext_power_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_ext_power_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_ext_power_ORD 3
#define DT_N_S_ext_power_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ext_power_REQUIRES_ORDS \
	0, /* / */ \
	2, /* /soc/gpio@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ext_power_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_ext_power_EXISTS 1
#define DT_N_INST_0_zmk_ext_power_generic DT_N_S_ext_power

/* Macros for properties that are special in the specification: */
#define DT_N_S_ext_power_REG_NUM 0
#define DT_N_S_ext_power_RANGES_NUM 0
#define DT_N_S_ext_power_FOREACH_RANGE(fn) 
#define DT_N_S_ext_power_IRQ_NUM 0
#define DT_N_S_ext_power_COMPAT_MATCHES_zmk_ext_power_generic 1
#define DT_N_S_ext_power_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_ext_power_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_ext_power_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_ext_power_COMPAT_MODEL_IDX_0 "ext-power-generic"
#define DT_N_S_ext_power_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_ext_power_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_ext_power_P_control_gpios_IDX_0_EXISTS 1
#define DT_N_S_ext_power_P_control_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ext_power_P_control_gpios_IDX_0_VAL_pin 13
#define DT_N_S_ext_power_P_control_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ext_power_P_control_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ext_power_P_control_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ext_power_P_control_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ext_power, control_gpios, 0)
#define DT_N_S_ext_power_P_control_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ext_power, control_gpios, 0)
#define DT_N_S_ext_power_P_control_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ext_power, control_gpios, 0, __VA_ARGS__)
#define DT_N_S_ext_power_P_control_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ext_power, control_gpios, 0, __VA_ARGS__)
#define DT_N_S_ext_power_P_control_gpios_LEN 1
#define DT_N_S_ext_power_P_control_gpios_EXISTS 1
#define DT_N_S_ext_power_P_init_delay_ms 50
#define DT_N_S_ext_power_P_init_delay_ms_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 4
#define DT_N_S_aliases_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 5
#define DT_N_S_chosen_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /connector
 *
 * Node identifier: DT_N_S_connector
 */

/* Node's full path: */
#define DT_N_S_connector_PATH "/connector"

/* Node's name with unit-address: */
#define DT_N_S_connector_FULL_NAME "connector"

/* Node parent (/) identifier: */
#define DT_N_S_connector_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_connector_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_connector_FOREACH_CHILD(fn) 
#define DT_N_S_connector_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_connector_ORD 6
#define DT_N_S_connector_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_EXISTS 1
#define DT_N_INST_0_arduino_pro_micro DT_N_S_connector
#define DT_N_NODELABEL_pro_micro      DT_N_S_connector
#define DT_N_NODELABEL_pro_micro_d    DT_N_S_connector

/* Macros for properties that are special in the specification: */
#define DT_N_S_connector_REG_NUM 0
#define DT_N_S_connector_RANGES_NUM 0
#define DT_N_S_connector_FOREACH_RANGE(fn) 
#define DT_N_S_connector_IRQ_NUM 0
#define DT_N_S_connector_COMPAT_MATCHES_arduino_pro_micro 1
#define DT_N_S_connector_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_connector_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_connector_P_compatible {"arduino-pro-micro"}
#define DT_N_S_connector_P_compatible_IDX_0 "arduino-pro-micro"
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UNQUOTED arduino-pro-micro
#define DT_N_S_connector_P_compatible_IDX_0_STRING_TOKEN arduino_pro_micro
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UPPER_TOKEN ARDUINO_PRO_MICRO
#define DT_N_S_connector_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_LEN 1
#define DT_N_S_connector_P_compatible_EXISTS 1

/*
 * Devicetree node: /connector_a
 *
 * Node identifier: DT_N_S_connector_a
 */

/* Node's full path: */
#define DT_N_S_connector_a_PATH "/connector_a"

/* Node's name with unit-address: */
#define DT_N_S_connector_a_FULL_NAME "connector_a"

/* Node parent (/) identifier: */
#define DT_N_S_connector_a_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_connector_a_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_connector_a_FOREACH_CHILD(fn) 
#define DT_N_S_connector_a_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_connector_a_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_connector_a_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_connector_a_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_connector_a_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_connector_a_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_connector_a_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_connector_a_ORD 7
#define DT_N_S_connector_a_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_a_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_a_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_a_EXISTS 1
#define DT_N_INST_1_arduino_pro_micro DT_N_S_connector_a
#define DT_N_NODELABEL_pro_micro_a    DT_N_S_connector_a

/* Macros for properties that are special in the specification: */
#define DT_N_S_connector_a_REG_NUM 0
#define DT_N_S_connector_a_RANGES_NUM 0
#define DT_N_S_connector_a_FOREACH_RANGE(fn) 
#define DT_N_S_connector_a_IRQ_NUM 0
#define DT_N_S_connector_a_COMPAT_MATCHES_arduino_pro_micro 1
#define DT_N_S_connector_a_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_connector_a_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_connector_a_P_compatible {"arduino-pro-micro"}
#define DT_N_S_connector_a_P_compatible_IDX_0 "arduino-pro-micro"
#define DT_N_S_connector_a_P_compatible_IDX_0_STRING_UNQUOTED arduino-pro-micro
#define DT_N_S_connector_a_P_compatible_IDX_0_STRING_TOKEN arduino_pro_micro
#define DT_N_S_connector_a_P_compatible_IDX_0_STRING_UPPER_TOKEN ARDUINO_PRO_MICRO
#define DT_N_S_connector_a_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_a_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_connector_a, compatible, 0)
#define DT_N_S_connector_a_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_connector_a, compatible, 0)
#define DT_N_S_connector_a_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_connector_a, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_a_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_connector_a, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_a_P_compatible_LEN 1
#define DT_N_S_connector_a_P_compatible_EXISTS 1

/*
 * Devicetree node: /entropy_bt_hci
 *
 * Node identifier: DT_N_S_entropy_bt_hci
 *
 * Binding (compatible = zephyr,bt-hci-entropy):
 *   $ZEPHYR_BASE/dts/bindings/bluetooth/zephyr,bt-hci-entropy.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_entropy_bt_hci_PATH "/entropy_bt_hci"

/* Node's name with unit-address: */
#define DT_N_S_entropy_bt_hci_FULL_NAME "entropy_bt_hci"

/* Node parent (/) identifier: */
#define DT_N_S_entropy_bt_hci_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_entropy_bt_hci_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD(fn) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_entropy_bt_hci_ORD 8
#define DT_N_S_entropy_bt_hci_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_entropy_bt_hci_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_entropy_bt_hci_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_entropy_bt_hci_EXISTS 1
#define DT_N_INST_0_zephyr_bt_hci_entropy DT_N_S_entropy_bt_hci
#define DT_N_NODELABEL_rng_hci            DT_N_S_entropy_bt_hci

/* Macros for properties that are special in the specification: */
#define DT_N_S_entropy_bt_hci_REG_NUM 0
#define DT_N_S_entropy_bt_hci_RANGES_NUM 0
#define DT_N_S_entropy_bt_hci_FOREACH_RANGE(fn) 
#define DT_N_S_entropy_bt_hci_IRQ_NUM 0
#define DT_N_S_entropy_bt_hci_COMPAT_MATCHES_zephyr_bt_hci_entropy 1
#define DT_N_S_entropy_bt_hci_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_entropy_bt_hci_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_entropy_bt_hci_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_entropy_bt_hci_COMPAT_MODEL_IDX_0 "bt-hci-entropy"
#define DT_N_S_entropy_bt_hci_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_entropy_bt_hci_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_entropy_bt_hci_P_status "okay"
#define DT_N_S_entropy_bt_hci_P_status_STRING_UNQUOTED okay
#define DT_N_S_entropy_bt_hci_P_status_STRING_TOKEN okay
#define DT_N_S_entropy_bt_hci_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_entropy_bt_hci_P_status_IDX_0 "okay"
#define DT_N_S_entropy_bt_hci_P_status_IDX_0_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_status_ENUM_IDX 1
#define DT_N_S_entropy_bt_hci_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_status_ENUM_TOKEN okay
#define DT_N_S_entropy_bt_hci_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_entropy_bt_hci_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_entropy_bt_hci, status, 0)
#define DT_N_S_entropy_bt_hci_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_entropy_bt_hci, status, 0)
#define DT_N_S_entropy_bt_hci_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_entropy_bt_hci, status, 0, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_entropy_bt_hci, status, 0, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_P_status_LEN 1
#define DT_N_S_entropy_bt_hci_P_status_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_compatible {"zephyr,bt-hci-entropy"}
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0 "zephyr,bt-hci-entropy"
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0_STRING_UNQUOTED zephyr,bt-hci-entropy
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0_STRING_TOKEN zephyr_bt_hci_entropy
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_BT_HCI_ENTROPY
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_entropy_bt_hci, compatible, 0)
#define DT_N_S_entropy_bt_hci_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_entropy_bt_hci, compatible, 0)
#define DT_N_S_entropy_bt_hci_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_entropy_bt_hci, compatible, 0, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_entropy_bt_hci, compatible, 0, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_P_compatible_LEN 1
#define DT_N_S_entropy_bt_hci_P_compatible_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_wakeup_source 0
#define DT_N_S_entropy_bt_hci_P_wakeup_source_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_entropy_bt_hci_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /keymap_transform_0
 *
 * Node identifier: DT_N_S_keymap_transform_0
 *
 * Binding (compatible = zmk,matrix-transform):
 *   /home/gab/git/zmk/app/dts/bindings/zmk,matrix-transform.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_transform_0_PATH "/keymap_transform_0"

/* Node's name with unit-address: */
#define DT_N_S_keymap_transform_0_FULL_NAME "keymap_transform_0"

/* Node parent (/) identifier: */
#define DT_N_S_keymap_transform_0_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_transform_0_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_transform_0_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_transform_0_ORD 9
#define DT_N_S_keymap_transform_0_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_transform_0_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_transform_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_transform_0_EXISTS 1
#define DT_N_INST_0_zmk_matrix_transform DT_N_S_keymap_transform_0
#define DT_N_NODELABEL_default_transform DT_N_S_keymap_transform_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_transform_0_REG_NUM 0
#define DT_N_S_keymap_transform_0_RANGES_NUM 0
#define DT_N_S_keymap_transform_0_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_transform_0_IRQ_NUM 0
#define DT_N_S_keymap_transform_0_COMPAT_MATCHES_zmk_matrix_transform 1
#define DT_N_S_keymap_transform_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_keymap_transform_0_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_keymap_transform_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_keymap_transform_0_COMPAT_MODEL_IDX_0 "matrix-transform"
#define DT_N_S_keymap_transform_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_transform_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_transform_0_P_columns 10
#define DT_N_S_keymap_transform_0_P_columns_EXISTS 1
#define DT_N_S_keymap_transform_0_P_rows 4
#define DT_N_S_keymap_transform_0_P_rows_EXISTS 1
#define DT_N_S_keymap_transform_0_P_col_offset 5
#define DT_N_S_keymap_transform_0_P_col_offset_EXISTS 1
#define DT_N_S_keymap_transform_0_P_row_offset 0
#define DT_N_S_keymap_transform_0_P_row_offset_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map {0 /* 0x0 */, 1 /* 0x1 */, 2 /* 0x2 */, 3 /* 0x3 */, 4 /* 0x4 */, 5 /* 0x5 */, 6 /* 0x6 */, 7 /* 0x7 */, 8 /* 0x8 */, 9 /* 0x9 */, 256 /* 0x100 */, 257 /* 0x101 */, 258 /* 0x102 */, 259 /* 0x103 */, 260 /* 0x104 */, 261 /* 0x105 */, 262 /* 0x106 */, 263 /* 0x107 */, 264 /* 0x108 */, 265 /* 0x109 */, 512 /* 0x200 */, 513 /* 0x201 */, 514 /* 0x202 */, 515 /* 0x203 */, 516 /* 0x204 */, 517 /* 0x205 */, 518 /* 0x206 */, 519 /* 0x207 */, 520 /* 0x208 */, 521 /* 0x209 */, 771 /* 0x303 */, 772 /* 0x304 */, 773 /* 0x305 */, 774 /* 0x306 */, 775 /* 0x307 */, 776 /* 0x308 */}
#define DT_N_S_keymap_transform_0_P_map_IDX_0 0
#define DT_N_S_keymap_transform_0_P_map_IDX_0_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_1 1
#define DT_N_S_keymap_transform_0_P_map_IDX_1_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_2 2
#define DT_N_S_keymap_transform_0_P_map_IDX_2_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_3 3
#define DT_N_S_keymap_transform_0_P_map_IDX_3_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_4 4
#define DT_N_S_keymap_transform_0_P_map_IDX_4_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_5 5
#define DT_N_S_keymap_transform_0_P_map_IDX_5_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_6 6
#define DT_N_S_keymap_transform_0_P_map_IDX_6_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_7 7
#define DT_N_S_keymap_transform_0_P_map_IDX_7_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_8 8
#define DT_N_S_keymap_transform_0_P_map_IDX_8_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_9 9
#define DT_N_S_keymap_transform_0_P_map_IDX_9_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_10 256
#define DT_N_S_keymap_transform_0_P_map_IDX_10_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_11 257
#define DT_N_S_keymap_transform_0_P_map_IDX_11_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_12 258
#define DT_N_S_keymap_transform_0_P_map_IDX_12_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_13 259
#define DT_N_S_keymap_transform_0_P_map_IDX_13_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_14 260
#define DT_N_S_keymap_transform_0_P_map_IDX_14_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_15 261
#define DT_N_S_keymap_transform_0_P_map_IDX_15_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_16 262
#define DT_N_S_keymap_transform_0_P_map_IDX_16_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_17 263
#define DT_N_S_keymap_transform_0_P_map_IDX_17_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_18 264
#define DT_N_S_keymap_transform_0_P_map_IDX_18_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_19 265
#define DT_N_S_keymap_transform_0_P_map_IDX_19_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_20 512
#define DT_N_S_keymap_transform_0_P_map_IDX_20_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_21 513
#define DT_N_S_keymap_transform_0_P_map_IDX_21_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_22 514
#define DT_N_S_keymap_transform_0_P_map_IDX_22_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_23 515
#define DT_N_S_keymap_transform_0_P_map_IDX_23_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_24 516
#define DT_N_S_keymap_transform_0_P_map_IDX_24_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_25 517
#define DT_N_S_keymap_transform_0_P_map_IDX_25_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_26 518
#define DT_N_S_keymap_transform_0_P_map_IDX_26_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_27 519
#define DT_N_S_keymap_transform_0_P_map_IDX_27_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_28 520
#define DT_N_S_keymap_transform_0_P_map_IDX_28_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_29 521
#define DT_N_S_keymap_transform_0_P_map_IDX_29_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_30 771
#define DT_N_S_keymap_transform_0_P_map_IDX_30_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_31 772
#define DT_N_S_keymap_transform_0_P_map_IDX_31_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_32 773
#define DT_N_S_keymap_transform_0_P_map_IDX_32_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_33 774
#define DT_N_S_keymap_transform_0_P_map_IDX_33_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_34 775
#define DT_N_S_keymap_transform_0_P_map_IDX_34_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_35 776
#define DT_N_S_keymap_transform_0_P_map_IDX_35_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_transform_0, map, 0) \
	fn(DT_N_S_keymap_transform_0, map, 1) \
	fn(DT_N_S_keymap_transform_0, map, 2) \
	fn(DT_N_S_keymap_transform_0, map, 3) \
	fn(DT_N_S_keymap_transform_0, map, 4) \
	fn(DT_N_S_keymap_transform_0, map, 5) \
	fn(DT_N_S_keymap_transform_0, map, 6) \
	fn(DT_N_S_keymap_transform_0, map, 7) \
	fn(DT_N_S_keymap_transform_0, map, 8) \
	fn(DT_N_S_keymap_transform_0, map, 9) \
	fn(DT_N_S_keymap_transform_0, map, 10) \
	fn(DT_N_S_keymap_transform_0, map, 11) \
	fn(DT_N_S_keymap_transform_0, map, 12) \
	fn(DT_N_S_keymap_transform_0, map, 13) \
	fn(DT_N_S_keymap_transform_0, map, 14) \
	fn(DT_N_S_keymap_transform_0, map, 15) \
	fn(DT_N_S_keymap_transform_0, map, 16) \
	fn(DT_N_S_keymap_transform_0, map, 17) \
	fn(DT_N_S_keymap_transform_0, map, 18) \
	fn(DT_N_S_keymap_transform_0, map, 19) \
	fn(DT_N_S_keymap_transform_0, map, 20) \
	fn(DT_N_S_keymap_transform_0, map, 21) \
	fn(DT_N_S_keymap_transform_0, map, 22) \
	fn(DT_N_S_keymap_transform_0, map, 23) \
	fn(DT_N_S_keymap_transform_0, map, 24) \
	fn(DT_N_S_keymap_transform_0, map, 25) \
	fn(DT_N_S_keymap_transform_0, map, 26) \
	fn(DT_N_S_keymap_transform_0, map, 27) \
	fn(DT_N_S_keymap_transform_0, map, 28) \
	fn(DT_N_S_keymap_transform_0, map, 29) \
	fn(DT_N_S_keymap_transform_0, map, 30) \
	fn(DT_N_S_keymap_transform_0, map, 31) \
	fn(DT_N_S_keymap_transform_0, map, 32) \
	fn(DT_N_S_keymap_transform_0, map, 33) \
	fn(DT_N_S_keymap_transform_0, map, 34) \
	fn(DT_N_S_keymap_transform_0, map, 35)
#define DT_N_S_keymap_transform_0_P_map_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_transform_0, map, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 35)
#define DT_N_S_keymap_transform_0_P_map_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_transform_0, map, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 35, __VA_ARGS__)
#define DT_N_S_keymap_transform_0_P_map_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_transform_0, map, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 35, __VA_ARGS__)
#define DT_N_S_keymap_transform_0_P_map_LEN 36
#define DT_N_S_keymap_transform_0_P_map_EXISTS 1

/*
 * Devicetree node: /soc/gpio@50000300
 *
 * Node identifier: DT_N_S_soc_S_gpio_50000300
 *
 * Binding (compatible = nordic,nrf-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_50000300_PATH "/soc/gpio@50000300"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_50000300_FULL_NAME "gpio@50000300"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_50000300_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_50000300_CHILD_IDX 53

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_50000300_ORD 10
#define DT_N_S_soc_S_gpio_50000300_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_50000300_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_50000300_SUPPORTS_ORDS \
	11, /* /kscan */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_50000300_EXISTS 1
#define DT_N_INST_1_nordic_nrf_gpio DT_N_S_soc_S_gpio_50000300
#define DT_N_NODELABEL_gpio1        DT_N_S_soc_S_gpio_50000300

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_50000300_REG_NUM 2
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_0_VAL_ADDRESS 1342178048 /* 0x50000300 */
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_1_VAL_ADDRESS 1342179328 /* 0x50000800 */
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_1_VAL_SIZE 768 /* 0x300 */
#define DT_N_S_soc_S_gpio_50000300_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_50000300_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_50000300_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_50000300_COMPAT_MATCHES_nordic_nrf_gpio 1
#define DT_N_S_soc_S_gpio_50000300_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_gpio_50000300_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_COMPAT_MODEL_IDX_0 "nrf-gpio"
#define DT_N_S_soc_S_gpio_50000300_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_50000300_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_50000300_P_reg {1342178048 /* 0x50000300 */, 512 /* 0x200 */, 1342179328 /* 0x50000800 */, 768 /* 0x300 */}
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_0 1342178048
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_1 512
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_2 1342179328
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_3 768
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_port 1
#define DT_N_S_soc_S_gpio_50000300_P_port_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_50000300_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_ngpios 16
#define DT_N_S_soc_S_gpio_50000300_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_status "okay"
#define DT_N_S_soc_S_gpio_50000300_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_50000300_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_50000300_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000300_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_50000300_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000300_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000300, status, 0)
#define DT_N_S_soc_S_gpio_50000300_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_50000300, status, 0)
#define DT_N_S_soc_S_gpio_50000300_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000300, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000300_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_50000300, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000300_P_status_LEN 1
#define DT_N_S_soc_S_gpio_50000300_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_compatible {"nordic,nrf-gpio"}
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0 "nordic,nrf-gpio"
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpio
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpio
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPIO
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000300, compatible, 0)
#define DT_N_S_soc_S_gpio_50000300_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_50000300, compatible, 0)
#define DT_N_S_soc_S_gpio_50000300_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000300, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000300_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_50000300, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000300_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_50000300_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_50000300_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_50000300_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /kscan
 *
 * Node identifier: DT_N_S_kscan
 *
 * Binding (compatible = zmk,kscan-gpio-matrix):
 *   /home/gab/git/zmk/app/module/dts/bindings/kscan/zmk,kscan-gpio-matrix.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_kscan_PATH "/kscan"

/* Node's name with unit-address: */
#define DT_N_S_kscan_FULL_NAME "kscan"

/* Node parent (/) identifier: */
#define DT_N_S_kscan_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_kscan_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_kscan_FOREACH_CHILD(fn) 
#define DT_N_S_kscan_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_kscan_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_kscan_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_kscan_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_kscan_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_kscan_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_kscan_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_kscan_ORD 11
#define DT_N_S_kscan_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_kscan_REQUIRES_ORDS \
	0, /* / */ \
	2, /* /soc/gpio@50000000 */ \
	10, /* /soc/gpio@50000300 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_kscan_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_kscan_EXISTS 1
#define DT_N_INST_0_zmk_kscan_gpio_matrix DT_N_S_kscan
#define DT_N_NODELABEL_kscan0             DT_N_S_kscan

/* Macros for properties that are special in the specification: */
#define DT_N_S_kscan_REG_NUM 0
#define DT_N_S_kscan_RANGES_NUM 0
#define DT_N_S_kscan_FOREACH_RANGE(fn) 
#define DT_N_S_kscan_IRQ_NUM 0
#define DT_N_S_kscan_COMPAT_MATCHES_zmk_kscan_gpio_matrix 1
#define DT_N_S_kscan_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_kscan_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_kscan_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_kscan_COMPAT_MODEL_IDX_0 "kscan-gpio-matrix"
#define DT_N_S_kscan_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_kscan_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_kscan_P_row_gpios_IDX_0_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_P_row_gpios_IDX_0_VAL_pin 22
#define DT_N_S_kscan_P_row_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_0_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_1_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_1_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_P_row_gpios_IDX_1_VAL_pin 24
#define DT_N_S_kscan_P_row_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_1_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_2_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_2_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_P_row_gpios_IDX_2_VAL_pin 0
#define DT_N_S_kscan_P_row_gpios_IDX_2_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_2_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_3_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_3_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_P_row_gpios_IDX_3_VAL_pin 11
#define DT_N_S_kscan_P_row_gpios_IDX_3_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_3_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_kscan, row_gpios, 0) \
	fn(DT_N_S_kscan, row_gpios, 1) \
	fn(DT_N_S_kscan, row_gpios, 2) \
	fn(DT_N_S_kscan, row_gpios, 3)
#define DT_N_S_kscan_P_row_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_kscan, row_gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan, row_gpios, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan, row_gpios, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan, row_gpios, 3)
#define DT_N_S_kscan_P_row_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_kscan, row_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_kscan, row_gpios, 1, __VA_ARGS__) \
	fn(DT_N_S_kscan, row_gpios, 2, __VA_ARGS__) \
	fn(DT_N_S_kscan, row_gpios, 3, __VA_ARGS__)
#define DT_N_S_kscan_P_row_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_kscan, row_gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan, row_gpios, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan, row_gpios, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan, row_gpios, 3, __VA_ARGS__)
#define DT_N_S_kscan_P_row_gpios_LEN 4
#define DT_N_S_kscan_P_row_gpios_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_0_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_P_col_gpios_IDX_0_VAL_pin 11
#define DT_N_S_kscan_P_col_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_0_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_1_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_1_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_P_col_gpios_IDX_1_VAL_pin 13
#define DT_N_S_kscan_P_col_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_1_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_2_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_2_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_P_col_gpios_IDX_2_VAL_pin 15
#define DT_N_S_kscan_P_col_gpios_IDX_2_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_2_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_3_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_3_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_P_col_gpios_IDX_3_VAL_pin 2
#define DT_N_S_kscan_P_col_gpios_IDX_3_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_3_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_4_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_4_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_P_col_gpios_IDX_4_VAL_pin 29
#define DT_N_S_kscan_P_col_gpios_IDX_4_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_4_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_kscan, col_gpios, 0) \
	fn(DT_N_S_kscan, col_gpios, 1) \
	fn(DT_N_S_kscan, col_gpios, 2) \
	fn(DT_N_S_kscan, col_gpios, 3) \
	fn(DT_N_S_kscan, col_gpios, 4)
#define DT_N_S_kscan_P_col_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_kscan, col_gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan, col_gpios, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan, col_gpios, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan, col_gpios, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan, col_gpios, 4)
#define DT_N_S_kscan_P_col_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_kscan, col_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_kscan, col_gpios, 1, __VA_ARGS__) \
	fn(DT_N_S_kscan, col_gpios, 2, __VA_ARGS__) \
	fn(DT_N_S_kscan, col_gpios, 3, __VA_ARGS__) \
	fn(DT_N_S_kscan, col_gpios, 4, __VA_ARGS__)
#define DT_N_S_kscan_P_col_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_kscan, col_gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan, col_gpios, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan, col_gpios, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan, col_gpios, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan, col_gpios, 4, __VA_ARGS__)
#define DT_N_S_kscan_P_col_gpios_LEN 5
#define DT_N_S_kscan_P_col_gpios_EXISTS 1
#define DT_N_S_kscan_P_debounce_press_ms 5
#define DT_N_S_kscan_P_debounce_press_ms_EXISTS 1
#define DT_N_S_kscan_P_debounce_release_ms 5
#define DT_N_S_kscan_P_debounce_release_ms_EXISTS 1
#define DT_N_S_kscan_P_debounce_scan_period_ms 1
#define DT_N_S_kscan_P_debounce_scan_period_ms_EXISTS 1
#define DT_N_S_kscan_P_poll_period_ms 10
#define DT_N_S_kscan_P_poll_period_ms_EXISTS 1
#define DT_N_S_kscan_P_diode_direction "col2row"
#define DT_N_S_kscan_P_diode_direction_STRING_UNQUOTED col2row
#define DT_N_S_kscan_P_diode_direction_STRING_TOKEN col2row
#define DT_N_S_kscan_P_diode_direction_STRING_UPPER_TOKEN COL2ROW
#define DT_N_S_kscan_P_diode_direction_IDX_0 "col2row"
#define DT_N_S_kscan_P_diode_direction_IDX_0_EXISTS 1
#define DT_N_S_kscan_P_diode_direction_ENUM_IDX 1
#define DT_N_S_kscan_P_diode_direction_ENUM_VAL_col2row_EXISTS 1
#define DT_N_S_kscan_P_diode_direction_ENUM_TOKEN col2row
#define DT_N_S_kscan_P_diode_direction_ENUM_UPPER_TOKEN COL2ROW
#define DT_N_S_kscan_P_diode_direction_FOREACH_PROP_ELEM(fn) fn(DT_N_S_kscan, diode_direction, 0)
#define DT_N_S_kscan_P_diode_direction_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_kscan, diode_direction, 0)
#define DT_N_S_kscan_P_diode_direction_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_kscan, diode_direction, 0, __VA_ARGS__)
#define DT_N_S_kscan_P_diode_direction_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_kscan, diode_direction, 0, __VA_ARGS__)
#define DT_N_S_kscan_P_diode_direction_LEN 1
#define DT_N_S_kscan_P_diode_direction_EXISTS 1
#define DT_N_S_kscan_P_compatible {"zmk,kscan-gpio-matrix"}
#define DT_N_S_kscan_P_compatible_IDX_0 "zmk,kscan-gpio-matrix"
#define DT_N_S_kscan_P_compatible_IDX_0_STRING_UNQUOTED zmk,kscan-gpio-matrix
#define DT_N_S_kscan_P_compatible_IDX_0_STRING_TOKEN zmk_kscan_gpio_matrix
#define DT_N_S_kscan_P_compatible_IDX_0_STRING_UPPER_TOKEN ZMK_KSCAN_GPIO_MATRIX
#define DT_N_S_kscan_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_kscan_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_kscan, compatible, 0)
#define DT_N_S_kscan_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_kscan, compatible, 0)
#define DT_N_S_kscan_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_kscan, compatible, 0, __VA_ARGS__)
#define DT_N_S_kscan_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_kscan, compatible, 0, __VA_ARGS__)
#define DT_N_S_kscan_P_compatible_LEN 1
#define DT_N_S_kscan_P_compatible_EXISTS 1
#define DT_N_S_kscan_P_wakeup_source 0
#define DT_N_S_kscan_P_wakeup_source_EXISTS 1
#define DT_N_S_kscan_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_kscan_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 12
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	13, /* /soc/timer@40009000 */ \
	118, /* /soc/adc@40007000 */ \
	119, /* /soc/ccm@4000f000 */ \
	120, /* /soc/clock@40000000 */ \
	121, /* /soc/comparator@40013000 */ \
	122, /* /soc/crypto@5002a000 */ \
	123, /* /soc/ecb@4000e000 */ \
	124, /* /soc/egu@40014000 */ \
	125, /* /soc/egu@40015000 */ \
	126, /* /soc/egu@40016000 */ \
	127, /* /soc/egu@40017000 */ \
	128, /* /soc/egu@40018000 */ \
	129, /* /soc/egu@40019000 */ \
	131, /* /soc/gpiote@40006000 */ \
	132, /* /soc/i2c@40003000 */ \
	133, /* /soc/i2c@40004000 */ \
	134, /* /soc/i2s@40025000 */ \
	137, /* /soc/nfct@40005000 */ \
	138, /* /soc/pdm@4001d000 */ \
	140, /* /soc/pwm@4001c000 */ \
	141, /* /soc/pwm@40021000 */ \
	142, /* /soc/pwm@40022000 */ \
	143, /* /soc/pwm@4002d000 */ \
	144, /* /soc/qdec@40012000 */ \
	145, /* /soc/qspi@40029000 */ \
	146, /* /soc/random@4000d000 */ \
	147, /* /soc/rtc@4000b000 */ \
	148, /* /soc/rtc@40011000 */ \
	149, /* /soc/rtc@40024000 */ \
	150, /* /soc/spi@40003000 */ \
	151, /* /soc/spi@40004000 */ \
	152, /* /soc/spi@40023000 */ \
	153, /* /soc/spi@4002f000 */ \
	154, /* /soc/temp@4000c000 */ \
	155, /* /soc/timer@40008000 */ \
	156, /* /soc/timer@4000a000 */ \
	157, /* /soc/timer@4001a000 */ \
	158, /* /soc/timer@4001b000 */ \
	160, /* /soc/uart@40002000 */ \
	161, /* /soc/uart@40028000 */ \
	163, /* /soc/watchdog@40010000 */ \
	171, /* /soc/power@40000000 */ \
	174, /* /soc/radio@40001000 */ \
	176, /* /soc/usbd@40027000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v7m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v7m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V7M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40009000
 *
 * Node identifier: DT_N_S_soc_S_timer_40009000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40009000_PATH "/soc/timer@40009000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40009000_FULL_NAME "timer@40009000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40009000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40009000_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40009000_ORD 13
#define DT_N_S_soc_S_timer_40009000_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40009000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40009000_SUPPORTS_ORDS \
	14, /* /sw-pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40009000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_timer DT_N_S_soc_S_timer_40009000
#define DT_N_NODELABEL_timer1        DT_N_S_soc_S_timer_40009000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40009000_REG_NUM 1
#define DT_N_S_soc_S_timer_40009000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_REG_IDX_0_VAL_ADDRESS 1073778688 /* 0x40009000 */
#define DT_N_S_soc_S_timer_40009000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_40009000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40009000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40009000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_irq 9
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_40009000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_40009000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_40009000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40009000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40009000_P_reg {1073778688 /* 0x40009000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_0 1073778688
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_cc_num 4
#define DT_N_S_soc_S_timer_40009000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_40009000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts {9 /* 0x9 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_0 9
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_prescaler 0
#define DT_N_S_soc_S_timer_40009000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_zli 0
#define DT_N_S_soc_S_timer_40009000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_status "disabled"
#define DT_N_S_soc_S_timer_40009000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40009000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40009000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40009000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40009000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40009000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40009000, status, 0)
#define DT_N_S_soc_S_timer_40009000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40009000, status, 0)
#define DT_N_S_soc_S_timer_40009000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40009000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40009000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_status_LEN 1
#define DT_N_S_soc_S_timer_40009000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40009000, compatible, 0)
#define DT_N_S_soc_S_timer_40009000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40009000, compatible, 0)
#define DT_N_S_soc_S_timer_40009000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40009000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40009000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40009000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40009000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40009000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /sw-pwm
 *
 * Node identifier: DT_N_S_sw_pwm
 *
 * Binding (compatible = nordic,nrf-sw-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-sw-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_sw_pwm_PATH "/sw-pwm"

/* Node's name with unit-address: */
#define DT_N_S_sw_pwm_FULL_NAME "sw-pwm"

/* Node parent (/) identifier: */
#define DT_N_S_sw_pwm_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_sw_pwm_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_sw_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_sw_pwm_ORD 14
#define DT_N_S_sw_pwm_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sw_pwm_REQUIRES_ORDS \
	0, /* / */ \
	13, /* /soc/timer@40009000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sw_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_sw_pwm_EXISTS 1
#define DT_N_INST_0_nordic_nrf_sw_pwm DT_N_S_sw_pwm
#define DT_N_NODELABEL_sw_pwm         DT_N_S_sw_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_sw_pwm_REG_NUM 0
#define DT_N_S_sw_pwm_RANGES_NUM 0
#define DT_N_S_sw_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_sw_pwm_IRQ_NUM 0
#define DT_N_S_sw_pwm_COMPAT_MATCHES_nordic_nrf_sw_pwm 1
#define DT_N_S_sw_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_sw_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_COMPAT_MODEL_IDX_0 "nrf-sw-pwm"
#define DT_N_S_sw_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_sw_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_sw_pwm_P_generator DT_N_S_soc_S_timer_40009000
#define DT_N_S_sw_pwm_P_generator_IDX_0 DT_N_S_soc_S_timer_40009000
#define DT_N_S_sw_pwm_P_generator_IDX_0_PH DT_N_S_soc_S_timer_40009000
#define DT_N_S_sw_pwm_P_generator_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_P_generator_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sw_pwm, generator, 0)
#define DT_N_S_sw_pwm_P_generator_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sw_pwm, generator, 0)
#define DT_N_S_sw_pwm_P_generator_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sw_pwm, generator, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_generator_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sw_pwm, generator, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_generator_LEN 1
#define DT_N_S_sw_pwm_P_generator_EXISTS 1
#define DT_N_S_sw_pwm_P_clock_prescaler 0
#define DT_N_S_sw_pwm_P_clock_prescaler_EXISTS 1
#define DT_N_S_sw_pwm_P_status "disabled"
#define DT_N_S_sw_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_sw_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_sw_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_sw_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_sw_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_P_status_ENUM_IDX 2
#define DT_N_S_sw_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_sw_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_sw_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sw_pwm, status, 0)
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sw_pwm, status, 0)
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sw_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sw_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_status_LEN 1
#define DT_N_S_sw_pwm_P_status_EXISTS 1
#define DT_N_S_sw_pwm_P_compatible {"nordic,nrf-sw-pwm"}
#define DT_N_S_sw_pwm_P_compatible_IDX_0 "nordic,nrf-sw-pwm"
#define DT_N_S_sw_pwm_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-sw-pwm
#define DT_N_S_sw_pwm_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_sw_pwm
#define DT_N_S_sw_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SW_PWM
#define DT_N_S_sw_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sw_pwm, compatible, 0)
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sw_pwm, compatible, 0)
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sw_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sw_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_compatible_LEN 1
#define DT_N_S_sw_pwm_P_compatible_EXISTS 1
#define DT_N_S_sw_pwm_P_wakeup_source 0
#define DT_N_S_sw_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_sw_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_sw_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /vbatt
 *
 * Node identifier: DT_N_S_vbatt
 *
 * Binding (compatible = zmk,battery-nrf-vddh):
 *   /home/gab/git/zmk/app/module/dts/bindings/sensor/zmk,battery-nrf-vddh.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vbatt_PATH "/vbatt"

/* Node's name with unit-address: */
#define DT_N_S_vbatt_FULL_NAME "vbatt"

/* Node parent (/) identifier: */
#define DT_N_S_vbatt_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_vbatt_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_vbatt_FOREACH_CHILD(fn) 
#define DT_N_S_vbatt_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_vbatt_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vbatt_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_vbatt_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vbatt_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_vbatt_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_vbatt_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_vbatt_ORD 15
#define DT_N_S_vbatt_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vbatt_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vbatt_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vbatt_EXISTS 1
#define DT_N_INST_0_zmk_battery_nrf_vddh DT_N_S_vbatt
#define DT_N_NODELABEL_vbatt             DT_N_S_vbatt

/* Macros for properties that are special in the specification: */
#define DT_N_S_vbatt_REG_NUM 0
#define DT_N_S_vbatt_RANGES_NUM 0
#define DT_N_S_vbatt_FOREACH_RANGE(fn) 
#define DT_N_S_vbatt_IRQ_NUM 0
#define DT_N_S_vbatt_COMPAT_MATCHES_zmk_battery_nrf_vddh 1
#define DT_N_S_vbatt_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_vbatt_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_vbatt_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_vbatt_COMPAT_MODEL_IDX_0 "battery-nrf-vddh"
#define DT_N_S_vbatt_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vbatt_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vbatt_P_compatible {"zmk,battery-nrf-vddh"}
#define DT_N_S_vbatt_P_compatible_IDX_0 "zmk,battery-nrf-vddh"
#define DT_N_S_vbatt_P_compatible_IDX_0_STRING_UNQUOTED zmk,battery-nrf-vddh
#define DT_N_S_vbatt_P_compatible_IDX_0_STRING_TOKEN zmk_battery_nrf_vddh
#define DT_N_S_vbatt_P_compatible_IDX_0_STRING_UPPER_TOKEN ZMK_BATTERY_NRF_VDDH
#define DT_N_S_vbatt_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_vbatt_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbatt, compatible, 0)
#define DT_N_S_vbatt_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbatt, compatible, 0)
#define DT_N_S_vbatt_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbatt, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbatt_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbatt, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbatt_P_compatible_LEN 1
#define DT_N_S_vbatt_P_compatible_EXISTS 1

/*
 * Devicetree node: /behaviors
 *
 * Node identifier: DT_N_S_behaviors
 */

/* Node's full path: */
#define DT_N_S_behaviors_PATH "/behaviors"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_FULL_NAME "behaviors"

/* Node parent (/) identifier: */
#define DT_N_S_behaviors_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_FOREACH_CHILD(fn) fn(DT_N_S_behaviors_S_key_press) fn(DT_N_S_behaviors_S_key_toggle) fn(DT_N_S_behaviors_S_transparent) fn(DT_N_S_behaviors_S_sticky_key) fn(DT_N_S_behaviors_S_momentary_layer) fn(DT_N_S_behaviors_S_toggle_layer) fn(DT_N_S_behaviors_S_sysreset) fn(DT_N_S_behaviors_S_bootload) fn(DT_N_S_behaviors_S_rgb_ug) fn(DT_N_S_behaviors_S_bluetooth) fn(DT_N_S_behaviors_S_extpower) fn(DT_N_S_behaviors_S_outputs) fn(DT_N_S_behaviors_S_macro_tap) fn(DT_N_S_behaviors_S_macro_press) fn(DT_N_S_behaviors_S_macro_release) fn(DT_N_S_behaviors_S_macro_tap_time) fn(DT_N_S_behaviors_S_macro_wait_time) fn(DT_N_S_behaviors_S_macro_pause_for_release) fn(DT_N_S_behaviors_S_macro_param_1to1) fn(DT_N_S_behaviors_S_macro_param_1to2) fn(DT_N_S_behaviors_S_macro_param_2to1) fn(DT_N_S_behaviors_S_macro_param_2to2) fn(DT_N_S_behaviors_S_mouse_key_press) fn(DT_N_S_behaviors_S_lshft_tap_dance) fn(DT_N_S_behaviors_S_lctrl_tap_dance) fn(DT_N_S_behaviors_S_lgui_tap_dance) fn(DT_N_S_behaviors_S_lalt_tap_dance) fn(DT_N_S_behaviors_S_navmod_layer_tap_dance) fn(DT_N_S_behaviors_S_seminav_tap_dance) fn(DT_N_S_behaviors_S_r_shifted_tap_dance) fn(DT_N_S_behaviors_S_e_shifted_tap_dance) fn(DT_N_S_behaviors_S_i_shifted_tap_dance) fn(DT_N_S_behaviors_S_u_shifted_tap_dance) fn(DT_N_S_behaviors_S_j_shifted_tap_dance)
#define DT_N_S_behaviors_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_behaviors_S_key_press) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_key_toggle) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_transparent) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sticky_key) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_momentary_layer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_toggle_layer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sysreset) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bootload) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_rgb_ug) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bluetooth) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_extpower) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_outputs) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_tap) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_press) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_release) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_tap_time) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_wait_time) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_pause_for_release) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_1to1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_1to2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_2to1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_2to2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_mouse_key_press) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lshft_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lctrl_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lgui_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lalt_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_navmod_layer_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_seminav_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_r_shifted_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_e_shifted_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_i_shifted_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_u_shifted_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_j_shifted_tap_dance)
#define DT_N_S_behaviors_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_behaviors_S_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_key_toggle, __VA_ARGS__) fn(DT_N_S_behaviors_S_transparent, __VA_ARGS__) fn(DT_N_S_behaviors_S_sticky_key, __VA_ARGS__) fn(DT_N_S_behaviors_S_momentary_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_toggle_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_sysreset, __VA_ARGS__) fn(DT_N_S_behaviors_S_bootload, __VA_ARGS__) fn(DT_N_S_behaviors_S_rgb_ug, __VA_ARGS__) fn(DT_N_S_behaviors_S_bluetooth, __VA_ARGS__) fn(DT_N_S_behaviors_S_extpower, __VA_ARGS__) fn(DT_N_S_behaviors_S_outputs, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_tap, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_tap_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_wait_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_1to1, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_1to2, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_2to1, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_2to2, __VA_ARGS__) fn(DT_N_S_behaviors_S_mouse_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_lshft_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_lctrl_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_lgui_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_lalt_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_navmod_layer_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_seminav_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_r_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_e_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_i_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_j_shifted_tap_dance, __VA_ARGS__)
#define DT_N_S_behaviors_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_key_press, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_key_toggle, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_transparent, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sticky_key, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_momentary_layer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_toggle_layer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sysreset, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bootload, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_rgb_ug, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bluetooth, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_extpower, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_outputs, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_tap, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_press, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_release, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_tap_time, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_wait_time, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_1to1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_1to2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_2to1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_2to2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_mouse_key_press, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lshft_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lctrl_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lgui_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lalt_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_navmod_layer_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_seminav_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_r_shifted_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_e_shifted_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_i_shifted_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_u_shifted_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_j_shifted_tap_dance, __VA_ARGS__)
#define DT_N_S_behaviors_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_behaviors_S_key_press) fn(DT_N_S_behaviors_S_key_toggle) fn(DT_N_S_behaviors_S_transparent) fn(DT_N_S_behaviors_S_sticky_key) fn(DT_N_S_behaviors_S_momentary_layer) fn(DT_N_S_behaviors_S_toggle_layer) fn(DT_N_S_behaviors_S_sysreset) fn(DT_N_S_behaviors_S_bootload) fn(DT_N_S_behaviors_S_rgb_ug) fn(DT_N_S_behaviors_S_bluetooth) fn(DT_N_S_behaviors_S_extpower) fn(DT_N_S_behaviors_S_outputs) fn(DT_N_S_behaviors_S_macro_tap) fn(DT_N_S_behaviors_S_macro_press) fn(DT_N_S_behaviors_S_macro_release) fn(DT_N_S_behaviors_S_macro_tap_time) fn(DT_N_S_behaviors_S_macro_wait_time) fn(DT_N_S_behaviors_S_macro_pause_for_release) fn(DT_N_S_behaviors_S_macro_param_1to1) fn(DT_N_S_behaviors_S_macro_param_1to2) fn(DT_N_S_behaviors_S_macro_param_2to1) fn(DT_N_S_behaviors_S_macro_param_2to2) fn(DT_N_S_behaviors_S_mouse_key_press) fn(DT_N_S_behaviors_S_lshft_tap_dance) fn(DT_N_S_behaviors_S_lctrl_tap_dance) fn(DT_N_S_behaviors_S_lgui_tap_dance) fn(DT_N_S_behaviors_S_lalt_tap_dance) fn(DT_N_S_behaviors_S_navmod_layer_tap_dance) fn(DT_N_S_behaviors_S_seminav_tap_dance) fn(DT_N_S_behaviors_S_r_shifted_tap_dance) fn(DT_N_S_behaviors_S_e_shifted_tap_dance) fn(DT_N_S_behaviors_S_i_shifted_tap_dance) fn(DT_N_S_behaviors_S_u_shifted_tap_dance) fn(DT_N_S_behaviors_S_j_shifted_tap_dance)
#define DT_N_S_behaviors_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_behaviors_S_key_press) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_key_toggle) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_transparent) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sticky_key) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_momentary_layer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_toggle_layer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sysreset) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bootload) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_rgb_ug) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bluetooth) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_extpower) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_outputs) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_tap) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_press) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_release) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_tap_time) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_wait_time) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_pause_for_release) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_1to1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_1to2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_2to1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_2to2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_mouse_key_press) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lshft_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lctrl_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lgui_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lalt_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_navmod_layer_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_seminav_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_r_shifted_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_e_shifted_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_i_shifted_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_u_shifted_tap_dance) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_j_shifted_tap_dance)
#define DT_N_S_behaviors_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_behaviors_S_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_key_toggle, __VA_ARGS__) fn(DT_N_S_behaviors_S_transparent, __VA_ARGS__) fn(DT_N_S_behaviors_S_sticky_key, __VA_ARGS__) fn(DT_N_S_behaviors_S_momentary_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_toggle_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_sysreset, __VA_ARGS__) fn(DT_N_S_behaviors_S_bootload, __VA_ARGS__) fn(DT_N_S_behaviors_S_rgb_ug, __VA_ARGS__) fn(DT_N_S_behaviors_S_bluetooth, __VA_ARGS__) fn(DT_N_S_behaviors_S_extpower, __VA_ARGS__) fn(DT_N_S_behaviors_S_outputs, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_tap, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_tap_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_wait_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_1to1, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_1to2, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_2to1, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_2to2, __VA_ARGS__) fn(DT_N_S_behaviors_S_mouse_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_lshft_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_lctrl_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_lgui_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_lalt_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_navmod_layer_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_seminav_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_r_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_e_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_i_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_j_shifted_tap_dance, __VA_ARGS__)
#define DT_N_S_behaviors_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_key_press, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_key_toggle, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_transparent, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sticky_key, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_momentary_layer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_toggle_layer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sysreset, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bootload, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_rgb_ug, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bluetooth, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_extpower, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_outputs, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_tap, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_press, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_release, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_tap_time, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_wait_time, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_1to1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_1to2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_2to1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_2to2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_mouse_key_press, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lshft_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lctrl_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lgui_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lalt_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_navmod_layer_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_seminav_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_r_shifted_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_e_shifted_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_i_shifted_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_u_shifted_tap_dance, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_j_shifted_tap_dance, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_ORD 16
#define DT_N_S_behaviors_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_SUPPORTS_ORDS \
	17, /* /behaviors/macro_param_1to1 */ \
	18, /* /behaviors/macro_param_1to2 */ \
	19, /* /behaviors/macro_param_2to1 */ \
	20, /* /behaviors/macro_param_2to2 */ \
	21, /* /behaviors/macro_pause_for_release */ \
	22, /* /behaviors/macro_press */ \
	23, /* /behaviors/macro_release */ \
	24, /* /behaviors/macro_tap */ \
	25, /* /behaviors/macro_tap_time */ \
	26, /* /behaviors/macro_wait_time */ \
	27, /* /behaviors/rgb_ug */ \
	28, /* /behaviors/sysreset */ \
	30, /* /behaviors/key_press */ \
	40, /* /behaviors/extpower */ \
	51, /* /behaviors/mouse_key_press */ \
	57, /* /behaviors/outputs */ \
	69, /* /behaviors/bootload */ \
	81, /* /behaviors/momentary_layer */ \
	82, /* /behaviors/e_shifted_tap_dance */ \
	83, /* /behaviors/i_shifted_tap_dance */ \
	84, /* /behaviors/j_shifted_tap_dance */ \
	85, /* /behaviors/toggle_layer */ \
	86, /* /behaviors/navmod_layer_tap_dance */ \
	87, /* /behaviors/r_shifted_tap_dance */ \
	88, /* /behaviors/seminav_tap_dance */ \
	89, /* /behaviors/u_shifted_tap_dance */ \
	91, /* /behaviors/key_toggle */ \
	92, /* /behaviors/sticky_key */ \
	93, /* /behaviors/lalt_tap_dance */ \
	94, /* /behaviors/lctrl_tap_dance */ \
	95, /* /behaviors/lgui_tap_dance */ \
	96, /* /behaviors/lshft_tap_dance */ \
	97, /* /behaviors/transparent */ \
	99, /* /behaviors/bluetooth */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_REG_NUM 0
#define DT_N_S_behaviors_RANGES_NUM 0
#define DT_N_S_behaviors_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_IRQ_NUM 0
#define DT_N_S_behaviors_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/macro_param_1to1
 *
 * Node identifier: DT_N_S_behaviors_S_macro_param_1to1
 *
 * Binding (compatible = zmk,macro-param-1to1):
 *   /home/gab/git/zmk/app/dts/bindings/macros/zmk,macro-param-1to1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_param_1to1_PATH "/behaviors/macro_param_1to1"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_param_1to1_FULL_NAME "macro_param_1to1"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_param_1to1_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_param_1to1_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_param_1to1_ORD 17
#define DT_N_S_behaviors_S_macro_param_1to1_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_param_1to1_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_param_1to1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_param_1to1_EXISTS 1
#define DT_N_INST_0_zmk_macro_param_1to1 DT_N_S_behaviors_S_macro_param_1to1
#define DT_N_NODELABEL_macro_param_1to1  DT_N_S_behaviors_S_macro_param_1to1

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_param_1to1_REG_NUM 0
#define DT_N_S_behaviors_S_macro_param_1to1_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_param_1to1_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_param_1to1_COMPAT_MATCHES_zmk_macro_param_1to1 1
#define DT_N_S_behaviors_S_macro_param_1to1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_param_1to1_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_param_1to1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_param_1to1_COMPAT_MODEL_IDX_0 "macro-param-1to1"
#define DT_N_S_behaviors_S_macro_param_1to1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_param_1to1_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/macro_param_1to2
 *
 * Node identifier: DT_N_S_behaviors_S_macro_param_1to2
 *
 * Binding (compatible = zmk,macro-param-1to2):
 *   /home/gab/git/zmk/app/dts/bindings/macros/zmk,macro-param-1to2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_param_1to2_PATH "/behaviors/macro_param_1to2"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_param_1to2_FULL_NAME "macro_param_1to2"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_param_1to2_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_param_1to2_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_param_1to2_ORD 18
#define DT_N_S_behaviors_S_macro_param_1to2_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_param_1to2_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_param_1to2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_param_1to2_EXISTS 1
#define DT_N_INST_0_zmk_macro_param_1to2 DT_N_S_behaviors_S_macro_param_1to2
#define DT_N_NODELABEL_macro_param_1to2  DT_N_S_behaviors_S_macro_param_1to2

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_param_1to2_REG_NUM 0
#define DT_N_S_behaviors_S_macro_param_1to2_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_param_1to2_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_param_1to2_COMPAT_MATCHES_zmk_macro_param_1to2 1
#define DT_N_S_behaviors_S_macro_param_1to2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_param_1to2_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_param_1to2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_param_1to2_COMPAT_MODEL_IDX_0 "macro-param-1to2"
#define DT_N_S_behaviors_S_macro_param_1to2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_param_1to2_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/macro_param_2to1
 *
 * Node identifier: DT_N_S_behaviors_S_macro_param_2to1
 *
 * Binding (compatible = zmk,macro-param-2to1):
 *   /home/gab/git/zmk/app/dts/bindings/macros/zmk,macro-param-2to1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_param_2to1_PATH "/behaviors/macro_param_2to1"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_param_2to1_FULL_NAME "macro_param_2to1"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_param_2to1_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_param_2to1_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_param_2to1_ORD 19
#define DT_N_S_behaviors_S_macro_param_2to1_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_param_2to1_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_param_2to1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_param_2to1_EXISTS 1
#define DT_N_INST_0_zmk_macro_param_2to1 DT_N_S_behaviors_S_macro_param_2to1
#define DT_N_NODELABEL_macro_param_2to1  DT_N_S_behaviors_S_macro_param_2to1

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_param_2to1_REG_NUM 0
#define DT_N_S_behaviors_S_macro_param_2to1_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_param_2to1_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_param_2to1_COMPAT_MATCHES_zmk_macro_param_2to1 1
#define DT_N_S_behaviors_S_macro_param_2to1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_param_2to1_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_param_2to1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_param_2to1_COMPAT_MODEL_IDX_0 "macro-param-2to1"
#define DT_N_S_behaviors_S_macro_param_2to1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_param_2to1_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/macro_param_2to2
 *
 * Node identifier: DT_N_S_behaviors_S_macro_param_2to2
 *
 * Binding (compatible = zmk,macro-param-2to2):
 *   /home/gab/git/zmk/app/dts/bindings/macros/zmk,macro-param-2to2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_param_2to2_PATH "/behaviors/macro_param_2to2"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_param_2to2_FULL_NAME "macro_param_2to2"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_param_2to2_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_param_2to2_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_param_2to2_ORD 20
#define DT_N_S_behaviors_S_macro_param_2to2_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_param_2to2_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_param_2to2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_param_2to2_EXISTS 1
#define DT_N_INST_0_zmk_macro_param_2to2 DT_N_S_behaviors_S_macro_param_2to2
#define DT_N_NODELABEL_macro_param_2to2  DT_N_S_behaviors_S_macro_param_2to2

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_param_2to2_REG_NUM 0
#define DT_N_S_behaviors_S_macro_param_2to2_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_param_2to2_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_param_2to2_COMPAT_MATCHES_zmk_macro_param_2to2 1
#define DT_N_S_behaviors_S_macro_param_2to2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_param_2to2_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_param_2to2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_param_2to2_COMPAT_MODEL_IDX_0 "macro-param-2to2"
#define DT_N_S_behaviors_S_macro_param_2to2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_param_2to2_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/macro_pause_for_release
 *
 * Node identifier: DT_N_S_behaviors_S_macro_pause_for_release
 *
 * Binding (compatible = zmk,macro-pause-for-release):
 *   /home/gab/git/zmk/app/dts/bindings/macros/zmk,macro-pause-for-release.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_pause_for_release_PATH "/behaviors/macro_pause_for_release"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_pause_for_release_FULL_NAME "macro_pause_for_release"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_pause_for_release_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_pause_for_release_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_pause_for_release_ORD 21
#define DT_N_S_behaviors_S_macro_pause_for_release_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_pause_for_release_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_pause_for_release_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_pause_for_release_EXISTS 1
#define DT_N_INST_0_zmk_macro_pause_for_release DT_N_S_behaviors_S_macro_pause_for_release
#define DT_N_NODELABEL_macro_pause_for_release  DT_N_S_behaviors_S_macro_pause_for_release

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_pause_for_release_REG_NUM 0
#define DT_N_S_behaviors_S_macro_pause_for_release_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_pause_for_release_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_pause_for_release_COMPAT_MATCHES_zmk_macro_pause_for_release 1
#define DT_N_S_behaviors_S_macro_pause_for_release_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_pause_for_release_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_pause_for_release_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_pause_for_release_COMPAT_MODEL_IDX_0 "macro-pause-for-release"
#define DT_N_S_behaviors_S_macro_pause_for_release_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_pause_for_release_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/macro_press
 *
 * Node identifier: DT_N_S_behaviors_S_macro_press
 *
 * Binding (compatible = zmk,macro-control-mode-press):
 *   /home/gab/git/zmk/app/dts/bindings/macros/zmk,macro-control-mode-press.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_press_PATH "/behaviors/macro_press"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_press_FULL_NAME "macro_press"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_press_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_press_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_press_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_press_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_press_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_press_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_press_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_press_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_press_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_press_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_press_ORD 22
#define DT_N_S_behaviors_S_macro_press_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_press_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_press_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_press_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_mode_press DT_N_S_behaviors_S_macro_press
#define DT_N_NODELABEL_macro_press               DT_N_S_behaviors_S_macro_press

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_press_REG_NUM 0
#define DT_N_S_behaviors_S_macro_press_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_press_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_press_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_press_COMPAT_MATCHES_zmk_macro_control_mode_press 1
#define DT_N_S_behaviors_S_macro_press_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_press_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_press_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_press_COMPAT_MODEL_IDX_0 "macro-control-mode-press"
#define DT_N_S_behaviors_S_macro_press_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_press_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/macro_release
 *
 * Node identifier: DT_N_S_behaviors_S_macro_release
 *
 * Binding (compatible = zmk,macro-control-mode-release):
 *   /home/gab/git/zmk/app/dts/bindings/macros/zmk,macro-control-mode-release.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_release_PATH "/behaviors/macro_release"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_release_FULL_NAME "macro_release"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_release_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_release_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_release_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_release_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_release_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_release_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_release_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_release_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_release_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_release_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_release_ORD 23
#define DT_N_S_behaviors_S_macro_release_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_release_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_release_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_release_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_mode_release DT_N_S_behaviors_S_macro_release
#define DT_N_NODELABEL_macro_release               DT_N_S_behaviors_S_macro_release

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_release_REG_NUM 0
#define DT_N_S_behaviors_S_macro_release_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_release_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_release_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_release_COMPAT_MATCHES_zmk_macro_control_mode_release 1
#define DT_N_S_behaviors_S_macro_release_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_release_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_release_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_release_COMPAT_MODEL_IDX_0 "macro-control-mode-release"
#define DT_N_S_behaviors_S_macro_release_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_release_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/macro_tap
 *
 * Node identifier: DT_N_S_behaviors_S_macro_tap
 *
 * Binding (compatible = zmk,macro-control-mode-tap):
 *   /home/gab/git/zmk/app/dts/bindings/macros/zmk,macro-control-mode-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_tap_PATH "/behaviors/macro_tap"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_tap_FULL_NAME "macro_tap"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_tap_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_tap_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_tap_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_tap_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_tap_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_tap_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_tap_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_tap_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_tap_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_tap_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_tap_ORD 24
#define DT_N_S_behaviors_S_macro_tap_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_tap_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_tap_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_tap_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_mode_tap DT_N_S_behaviors_S_macro_tap
#define DT_N_NODELABEL_macro_tap               DT_N_S_behaviors_S_macro_tap

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_tap_REG_NUM 0
#define DT_N_S_behaviors_S_macro_tap_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_tap_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_tap_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_tap_COMPAT_MATCHES_zmk_macro_control_mode_tap 1
#define DT_N_S_behaviors_S_macro_tap_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_tap_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_tap_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_tap_COMPAT_MODEL_IDX_0 "macro-control-mode-tap"
#define DT_N_S_behaviors_S_macro_tap_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_tap_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/macro_tap_time
 *
 * Node identifier: DT_N_S_behaviors_S_macro_tap_time
 *
 * Binding (compatible = zmk,macro-control-tap-time):
 *   /home/gab/git/zmk/app/dts/bindings/macros/zmk,macro-control-tap-time.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_tap_time_PATH "/behaviors/macro_tap_time"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_tap_time_FULL_NAME "macro_tap_time"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_tap_time_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_tap_time_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_tap_time_ORD 25
#define DT_N_S_behaviors_S_macro_tap_time_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_tap_time_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_tap_time_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_tap_time_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_tap_time DT_N_S_behaviors_S_macro_tap_time
#define DT_N_NODELABEL_macro_tap_time          DT_N_S_behaviors_S_macro_tap_time

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_tap_time_REG_NUM 0
#define DT_N_S_behaviors_S_macro_tap_time_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_tap_time_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_tap_time_COMPAT_MATCHES_zmk_macro_control_tap_time 1
#define DT_N_S_behaviors_S_macro_tap_time_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_tap_time_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_tap_time_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_tap_time_COMPAT_MODEL_IDX_0 "macro-control-tap-time"
#define DT_N_S_behaviors_S_macro_tap_time_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_tap_time_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/macro_wait_time
 *
 * Node identifier: DT_N_S_behaviors_S_macro_wait_time
 *
 * Binding (compatible = zmk,macro-control-wait-time):
 *   /home/gab/git/zmk/app/dts/bindings/macros/zmk,macro-control-wait-time.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_wait_time_PATH "/behaviors/macro_wait_time"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_wait_time_FULL_NAME "macro_wait_time"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_wait_time_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_wait_time_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_wait_time_ORD 26
#define DT_N_S_behaviors_S_macro_wait_time_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_wait_time_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_wait_time_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_wait_time_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_wait_time DT_N_S_behaviors_S_macro_wait_time
#define DT_N_NODELABEL_macro_wait_time          DT_N_S_behaviors_S_macro_wait_time

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_wait_time_REG_NUM 0
#define DT_N_S_behaviors_S_macro_wait_time_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_wait_time_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_wait_time_COMPAT_MATCHES_zmk_macro_control_wait_time 1
#define DT_N_S_behaviors_S_macro_wait_time_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_wait_time_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_wait_time_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_wait_time_COMPAT_MODEL_IDX_0 "macro-control-wait-time"
#define DT_N_S_behaviors_S_macro_wait_time_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_wait_time_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/rgb_ug
 *
 * Node identifier: DT_N_S_behaviors_S_rgb_ug
 *
 * Binding (compatible = zmk,behavior-rgb-underglow):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-rgb-underglow.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_rgb_ug_PATH "/behaviors/rgb_ug"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_rgb_ug_FULL_NAME "rgb_ug"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_rgb_ug_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_rgb_ug_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_rgb_ug_ORD 27
#define DT_N_S_behaviors_S_rgb_ug_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_rgb_ug_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_rgb_ug_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_rgb_ug_EXISTS 1
#define DT_N_INST_0_zmk_behavior_rgb_underglow DT_N_S_behaviors_S_rgb_ug
#define DT_N_NODELABEL_rgb_ug                  DT_N_S_behaviors_S_rgb_ug

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_rgb_ug_REG_NUM 0
#define DT_N_S_behaviors_S_rgb_ug_RANGES_NUM 0
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_rgb_ug_IRQ_NUM 0
#define DT_N_S_behaviors_S_rgb_ug_COMPAT_MATCHES_zmk_behavior_rgb_underglow 1
#define DT_N_S_behaviors_S_rgb_ug_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_rgb_ug_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_rgb_ug_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_rgb_ug_COMPAT_MODEL_IDX_0 "behavior-rgb-underglow"
#define DT_N_S_behaviors_S_rgb_ug_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_rgb_ug_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/sysreset
 *
 * Node identifier: DT_N_S_behaviors_S_sysreset
 *
 * Binding (compatible = zmk,behavior-reset):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-reset.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_sysreset_PATH "/behaviors/sysreset"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_sysreset_FULL_NAME "sysreset"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_sysreset_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_sysreset_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_sysreset_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_sysreset_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_sysreset_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_sysreset_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_sysreset_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_sysreset_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_sysreset_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_sysreset_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_sysreset_ORD 28
#define DT_N_S_behaviors_S_sysreset_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_sysreset_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_sysreset_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_sysreset_EXISTS 1
#define DT_N_INST_0_zmk_behavior_reset DT_N_S_behaviors_S_sysreset
#define DT_N_NODELABEL_sys_reset       DT_N_S_behaviors_S_sysreset

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_sysreset_REG_NUM 0
#define DT_N_S_behaviors_S_sysreset_RANGES_NUM 0
#define DT_N_S_behaviors_S_sysreset_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_sysreset_IRQ_NUM 0
#define DT_N_S_behaviors_S_sysreset_COMPAT_MATCHES_zmk_behavior_reset 1
#define DT_N_S_behaviors_S_sysreset_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_sysreset_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_sysreset_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_sysreset_COMPAT_MODEL_IDX_0 "behavior-reset"
#define DT_N_S_behaviors_S_sysreset_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_sysreset_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_sysreset_P_type 0
#define DT_N_S_behaviors_S_sysreset_P_type_EXISTS 1

/*
 * Devicetree node: /combos
 *
 * Node identifier: DT_N_S_combos
 *
 * Binding (compatible = zmk,combos):
 *   /home/gab/git/zmk/app/dts/bindings/zmk,combos.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_PATH "/combos"

/* Node's name with unit-address: */
#define DT_N_S_combos_FULL_NAME "combos"

/* Node parent (/) identifier: */
#define DT_N_S_combos_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_FOREACH_CHILD(fn) fn(DT_N_S_combos_S_combo_grave) fn(DT_N_S_combos_S_combo_one) fn(DT_N_S_combos_S_combo_two) fn(DT_N_S_combos_S_combo_three) fn(DT_N_S_combos_S_combo_four) fn(DT_N_S_combos_S_combo_five) fn(DT_N_S_combos_S_combo_six) fn(DT_N_S_combos_S_combo_seven) fn(DT_N_S_combos_S_combo_eight) fn(DT_N_S_combos_S_combo_nine) fn(DT_N_S_combos_S_combo_zero) fn(DT_N_S_combos_S_combo_minus) fn(DT_N_S_combos_S_combo_equal) fn(DT_N_S_combos_S_combo_singe_quote) fn(DT_N_S_combos_S_combo_backslash) fn(DT_N_S_combos_S_combo_left_bracket) fn(DT_N_S_combos_S_combo_right_bracket) fn(DT_N_S_combos_S_combo_left) fn(DT_N_S_combos_S_combo_down) fn(DT_N_S_combos_S_combo_up) fn(DT_N_S_combos_S_combo_right) fn(DT_N_S_combos_S_combo_home) fn(DT_N_S_combos_S_combo_page_down) fn(DT_N_S_combos_S_combo_page_up) fn(DT_N_S_combos_S_combo_end) fn(DT_N_S_combos_S_combo_escape) fn(DT_N_S_combos_S_combo_tab) fn(DT_N_S_combos_S_combo_delete) fn(DT_N_S_combos_S_combo_lctrldelete) fn(DT_N_S_combos_S_combo_backspace) fn(DT_N_S_combos_S_combo_lctrlbackspace) fn(DT_N_S_combos_S_combo_enter) fn(DT_N_S_combos_S_combo_printscreen) fn(DT_N_S_combos_S_combo_left_click) fn(DT_N_S_combos_S_combo_right_click) fn(DT_N_S_combos_S_combo_middle_click) fn(DT_N_S_combos_S_combo_external_power_on) fn(DT_N_S_combos_S_combo_external_power_off) fn(DT_N_S_combos_S_combo_output_bluetooth) fn(DT_N_S_combos_S_combo_output_usb) fn(DT_N_S_combos_S_combo_sys_reset_left) fn(DT_N_S_combos_S_combo_sys_reset_right)
#define DT_N_S_combos_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_combos_S_combo_grave) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_one) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_two) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_three) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_four) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_five) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_six) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_seven) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_eight) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_nine) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_zero) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_minus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_equal) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_singe_quote) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_backslash) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_left_bracket) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_right_bracket) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_left) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_down) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_up) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_right) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_home) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_page_down) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_page_up) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_end) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_escape) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_tab) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_delete) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_lctrldelete) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_backspace) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_lctrlbackspace) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_enter) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_printscreen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_left_click) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_right_click) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_middle_click) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_external_power_on) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_external_power_off) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_output_bluetooth) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_output_usb) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_sys_reset_left) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_sys_reset_right)
#define DT_N_S_combos_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_grave, __VA_ARGS__) fn(DT_N_S_combos_S_combo_one, __VA_ARGS__) fn(DT_N_S_combos_S_combo_two, __VA_ARGS__) fn(DT_N_S_combos_S_combo_three, __VA_ARGS__) fn(DT_N_S_combos_S_combo_four, __VA_ARGS__) fn(DT_N_S_combos_S_combo_five, __VA_ARGS__) fn(DT_N_S_combos_S_combo_six, __VA_ARGS__) fn(DT_N_S_combos_S_combo_seven, __VA_ARGS__) fn(DT_N_S_combos_S_combo_eight, __VA_ARGS__) fn(DT_N_S_combos_S_combo_nine, __VA_ARGS__) fn(DT_N_S_combos_S_combo_zero, __VA_ARGS__) fn(DT_N_S_combos_S_combo_minus, __VA_ARGS__) fn(DT_N_S_combos_S_combo_equal, __VA_ARGS__) fn(DT_N_S_combos_S_combo_singe_quote, __VA_ARGS__) fn(DT_N_S_combos_S_combo_backslash, __VA_ARGS__) fn(DT_N_S_combos_S_combo_left_bracket, __VA_ARGS__) fn(DT_N_S_combos_S_combo_right_bracket, __VA_ARGS__) fn(DT_N_S_combos_S_combo_left, __VA_ARGS__) fn(DT_N_S_combos_S_combo_down, __VA_ARGS__) fn(DT_N_S_combos_S_combo_up, __VA_ARGS__) fn(DT_N_S_combos_S_combo_right, __VA_ARGS__) fn(DT_N_S_combos_S_combo_home, __VA_ARGS__) fn(DT_N_S_combos_S_combo_page_down, __VA_ARGS__) fn(DT_N_S_combos_S_combo_page_up, __VA_ARGS__) fn(DT_N_S_combos_S_combo_end, __VA_ARGS__) fn(DT_N_S_combos_S_combo_escape, __VA_ARGS__) fn(DT_N_S_combos_S_combo_tab, __VA_ARGS__) fn(DT_N_S_combos_S_combo_delete, __VA_ARGS__) fn(DT_N_S_combos_S_combo_lctrldelete, __VA_ARGS__) fn(DT_N_S_combos_S_combo_backspace, __VA_ARGS__) fn(DT_N_S_combos_S_combo_lctrlbackspace, __VA_ARGS__) fn(DT_N_S_combos_S_combo_enter, __VA_ARGS__) fn(DT_N_S_combos_S_combo_printscreen, __VA_ARGS__) fn(DT_N_S_combos_S_combo_left_click, __VA_ARGS__) fn(DT_N_S_combos_S_combo_right_click, __VA_ARGS__) fn(DT_N_S_combos_S_combo_middle_click, __VA_ARGS__) fn(DT_N_S_combos_S_combo_external_power_on, __VA_ARGS__) fn(DT_N_S_combos_S_combo_external_power_off, __VA_ARGS__) fn(DT_N_S_combos_S_combo_output_bluetooth, __VA_ARGS__) fn(DT_N_S_combos_S_combo_output_usb, __VA_ARGS__) fn(DT_N_S_combos_S_combo_sys_reset_left, __VA_ARGS__) fn(DT_N_S_combos_S_combo_sys_reset_right, __VA_ARGS__)
#define DT_N_S_combos_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_grave, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_one, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_two, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_three, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_four, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_five, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_six, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_seven, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_eight, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_nine, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_zero, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_minus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_equal, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_singe_quote, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_backslash, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_left_bracket, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_right_bracket, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_left, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_down, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_up, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_right, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_home, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_page_down, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_page_up, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_end, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_escape, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_tab, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_delete, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_lctrldelete, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_backspace, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_lctrlbackspace, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_enter, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_printscreen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_left_click, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_right_click, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_middle_click, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_external_power_on, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_external_power_off, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_output_bluetooth, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_output_usb, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_sys_reset_left, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_sys_reset_right, __VA_ARGS__)
#define DT_N_S_combos_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_combos_S_combo_grave) fn(DT_N_S_combos_S_combo_one) fn(DT_N_S_combos_S_combo_two) fn(DT_N_S_combos_S_combo_three) fn(DT_N_S_combos_S_combo_four) fn(DT_N_S_combos_S_combo_five) fn(DT_N_S_combos_S_combo_six) fn(DT_N_S_combos_S_combo_seven) fn(DT_N_S_combos_S_combo_eight) fn(DT_N_S_combos_S_combo_nine) fn(DT_N_S_combos_S_combo_zero) fn(DT_N_S_combos_S_combo_minus) fn(DT_N_S_combos_S_combo_equal) fn(DT_N_S_combos_S_combo_singe_quote) fn(DT_N_S_combos_S_combo_backslash) fn(DT_N_S_combos_S_combo_left_bracket) fn(DT_N_S_combos_S_combo_right_bracket) fn(DT_N_S_combos_S_combo_left) fn(DT_N_S_combos_S_combo_down) fn(DT_N_S_combos_S_combo_up) fn(DT_N_S_combos_S_combo_right) fn(DT_N_S_combos_S_combo_home) fn(DT_N_S_combos_S_combo_page_down) fn(DT_N_S_combos_S_combo_page_up) fn(DT_N_S_combos_S_combo_end) fn(DT_N_S_combos_S_combo_escape) fn(DT_N_S_combos_S_combo_tab) fn(DT_N_S_combos_S_combo_delete) fn(DT_N_S_combos_S_combo_lctrldelete) fn(DT_N_S_combos_S_combo_backspace) fn(DT_N_S_combos_S_combo_lctrlbackspace) fn(DT_N_S_combos_S_combo_enter) fn(DT_N_S_combos_S_combo_printscreen) fn(DT_N_S_combos_S_combo_left_click) fn(DT_N_S_combos_S_combo_right_click) fn(DT_N_S_combos_S_combo_middle_click) fn(DT_N_S_combos_S_combo_external_power_on) fn(DT_N_S_combos_S_combo_external_power_off) fn(DT_N_S_combos_S_combo_output_bluetooth) fn(DT_N_S_combos_S_combo_output_usb) fn(DT_N_S_combos_S_combo_sys_reset_left) fn(DT_N_S_combos_S_combo_sys_reset_right)
#define DT_N_S_combos_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_combos_S_combo_grave) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_one) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_two) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_three) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_four) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_five) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_six) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_seven) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_eight) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_nine) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_zero) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_minus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_equal) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_singe_quote) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_backslash) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_left_bracket) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_right_bracket) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_left) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_down) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_up) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_right) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_home) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_page_down) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_page_up) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_end) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_escape) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_tab) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_delete) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_lctrldelete) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_backspace) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_lctrlbackspace) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_enter) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_printscreen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_left_click) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_right_click) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_middle_click) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_external_power_on) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_external_power_off) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_output_bluetooth) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_output_usb) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_sys_reset_left) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_sys_reset_right)
#define DT_N_S_combos_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_grave, __VA_ARGS__) fn(DT_N_S_combos_S_combo_one, __VA_ARGS__) fn(DT_N_S_combos_S_combo_two, __VA_ARGS__) fn(DT_N_S_combos_S_combo_three, __VA_ARGS__) fn(DT_N_S_combos_S_combo_four, __VA_ARGS__) fn(DT_N_S_combos_S_combo_five, __VA_ARGS__) fn(DT_N_S_combos_S_combo_six, __VA_ARGS__) fn(DT_N_S_combos_S_combo_seven, __VA_ARGS__) fn(DT_N_S_combos_S_combo_eight, __VA_ARGS__) fn(DT_N_S_combos_S_combo_nine, __VA_ARGS__) fn(DT_N_S_combos_S_combo_zero, __VA_ARGS__) fn(DT_N_S_combos_S_combo_minus, __VA_ARGS__) fn(DT_N_S_combos_S_combo_equal, __VA_ARGS__) fn(DT_N_S_combos_S_combo_singe_quote, __VA_ARGS__) fn(DT_N_S_combos_S_combo_backslash, __VA_ARGS__) fn(DT_N_S_combos_S_combo_left_bracket, __VA_ARGS__) fn(DT_N_S_combos_S_combo_right_bracket, __VA_ARGS__) fn(DT_N_S_combos_S_combo_left, __VA_ARGS__) fn(DT_N_S_combos_S_combo_down, __VA_ARGS__) fn(DT_N_S_combos_S_combo_up, __VA_ARGS__) fn(DT_N_S_combos_S_combo_right, __VA_ARGS__) fn(DT_N_S_combos_S_combo_home, __VA_ARGS__) fn(DT_N_S_combos_S_combo_page_down, __VA_ARGS__) fn(DT_N_S_combos_S_combo_page_up, __VA_ARGS__) fn(DT_N_S_combos_S_combo_end, __VA_ARGS__) fn(DT_N_S_combos_S_combo_escape, __VA_ARGS__) fn(DT_N_S_combos_S_combo_tab, __VA_ARGS__) fn(DT_N_S_combos_S_combo_delete, __VA_ARGS__) fn(DT_N_S_combos_S_combo_lctrldelete, __VA_ARGS__) fn(DT_N_S_combos_S_combo_backspace, __VA_ARGS__) fn(DT_N_S_combos_S_combo_lctrlbackspace, __VA_ARGS__) fn(DT_N_S_combos_S_combo_enter, __VA_ARGS__) fn(DT_N_S_combos_S_combo_printscreen, __VA_ARGS__) fn(DT_N_S_combos_S_combo_left_click, __VA_ARGS__) fn(DT_N_S_combos_S_combo_right_click, __VA_ARGS__) fn(DT_N_S_combos_S_combo_middle_click, __VA_ARGS__) fn(DT_N_S_combos_S_combo_external_power_on, __VA_ARGS__) fn(DT_N_S_combos_S_combo_external_power_off, __VA_ARGS__) fn(DT_N_S_combos_S_combo_output_bluetooth, __VA_ARGS__) fn(DT_N_S_combos_S_combo_output_usb, __VA_ARGS__) fn(DT_N_S_combos_S_combo_sys_reset_left, __VA_ARGS__) fn(DT_N_S_combos_S_combo_sys_reset_right, __VA_ARGS__)
#define DT_N_S_combos_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_grave, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_one, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_two, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_three, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_four, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_five, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_six, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_seven, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_eight, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_nine, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_zero, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_minus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_equal, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_singe_quote, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_backslash, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_left_bracket, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_right_bracket, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_left, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_down, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_up, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_right, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_home, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_page_down, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_page_up, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_end, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_escape, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_tab, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_delete, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_lctrldelete, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_backspace, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_lctrlbackspace, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_enter, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_printscreen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_left_click, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_right_click, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_middle_click, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_external_power_on, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_external_power_off, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_output_bluetooth, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_output_usb, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_sys_reset_left, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_sys_reset_right, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_combos_ORD 29
#define DT_N_S_combos_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_SUPPORTS_ORDS \
	31, /* /combos/combo_backslash */ \
	32, /* /combos/combo_backspace */ \
	33, /* /combos/combo_delete */ \
	34, /* /combos/combo_down */ \
	35, /* /combos/combo_eight */ \
	36, /* /combos/combo_end */ \
	37, /* /combos/combo_enter */ \
	38, /* /combos/combo_equal */ \
	39, /* /combos/combo_escape */ \
	41, /* /combos/combo_external_power_off */ \
	42, /* /combos/combo_external_power_on */ \
	43, /* /combos/combo_five */ \
	44, /* /combos/combo_four */ \
	45, /* /combos/combo_grave */ \
	46, /* /combos/combo_home */ \
	47, /* /combos/combo_lctrlbackspace */ \
	48, /* /combos/combo_lctrldelete */ \
	49, /* /combos/combo_left */ \
	50, /* /combos/combo_left_bracket */ \
	52, /* /combos/combo_left_click */ \
	53, /* /combos/combo_middle_click */ \
	54, /* /combos/combo_minus */ \
	55, /* /combos/combo_nine */ \
	56, /* /combos/combo_one */ \
	58, /* /combos/combo_output_bluetooth */ \
	59, /* /combos/combo_output_usb */ \
	60, /* /combos/combo_page_down */ \
	61, /* /combos/combo_page_up */ \
	62, /* /combos/combo_printscreen */ \
	63, /* /combos/combo_right */ \
	64, /* /combos/combo_right_bracket */ \
	65, /* /combos/combo_right_click */ \
	66, /* /combos/combo_seven */ \
	67, /* /combos/combo_singe_quote */ \
	68, /* /combos/combo_six */ \
	70, /* /combos/combo_sys_reset_left */ \
	71, /* /combos/combo_sys_reset_right */ \
	72, /* /combos/combo_tab */ \
	73, /* /combos/combo_three */ \
	74, /* /combos/combo_two */ \
	75, /* /combos/combo_up */ \
	76, /* /combos/combo_zero */

/* Existence and alternate IDs: */
#define DT_N_S_combos_EXISTS 1
#define DT_N_INST_0_zmk_combos DT_N_S_combos

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_REG_NUM 0
#define DT_N_S_combos_RANGES_NUM 0
#define DT_N_S_combos_FOREACH_RANGE(fn) 
#define DT_N_S_combos_IRQ_NUM 0
#define DT_N_S_combos_COMPAT_MATCHES_zmk_combos 1
#define DT_N_S_combos_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_combos_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_combos_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_combos_COMPAT_MODEL_IDX_0 "combos"
#define DT_N_S_combos_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_P_compatible {"zmk,combos"}
#define DT_N_S_combos_P_compatible_IDX_0 "zmk,combos"
#define DT_N_S_combos_P_compatible_IDX_0_STRING_UNQUOTED zmk,combos
#define DT_N_S_combos_P_compatible_IDX_0_STRING_TOKEN zmk_combos
#define DT_N_S_combos_P_compatible_IDX_0_STRING_UPPER_TOKEN ZMK_COMBOS
#define DT_N_S_combos_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_combos_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos, compatible, 0)
#define DT_N_S_combos_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos, compatible, 0)
#define DT_N_S_combos_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos, compatible, 0, __VA_ARGS__)
#define DT_N_S_combos_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos, compatible, 0, __VA_ARGS__)
#define DT_N_S_combos_P_compatible_LEN 1
#define DT_N_S_combos_P_compatible_EXISTS 1

/*
 * Devicetree node: /behaviors/key_press
 *
 * Node identifier: DT_N_S_behaviors_S_key_press
 *
 * Binding (compatible = zmk,behavior-key-press):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-key-press.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_key_press_PATH "/behaviors/key_press"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_key_press_FULL_NAME "key_press"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_key_press_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_key_press_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_key_press_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_key_press_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_key_press_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_key_press_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_key_press_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_key_press_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_key_press_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_key_press_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_key_press_ORD 30
#define DT_N_S_behaviors_S_key_press_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_key_press_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_key_press_SUPPORTS_ORDS \
	31, /* /combos/combo_backslash */ \
	32, /* /combos/combo_backspace */ \
	33, /* /combos/combo_delete */ \
	34, /* /combos/combo_down */ \
	35, /* /combos/combo_eight */ \
	36, /* /combos/combo_end */ \
	37, /* /combos/combo_enter */ \
	38, /* /combos/combo_equal */ \
	39, /* /combos/combo_escape */ \
	43, /* /combos/combo_five */ \
	44, /* /combos/combo_four */ \
	45, /* /combos/combo_grave */ \
	46, /* /combos/combo_home */ \
	47, /* /combos/combo_lctrlbackspace */ \
	48, /* /combos/combo_lctrldelete */ \
	49, /* /combos/combo_left */ \
	50, /* /combos/combo_left_bracket */ \
	54, /* /combos/combo_minus */ \
	55, /* /combos/combo_nine */ \
	56, /* /combos/combo_one */ \
	60, /* /combos/combo_page_down */ \
	61, /* /combos/combo_page_up */ \
	62, /* /combos/combo_printscreen */ \
	63, /* /combos/combo_right */ \
	64, /* /combos/combo_right_bracket */ \
	65, /* /combos/combo_right_click */ \
	66, /* /combos/combo_seven */ \
	67, /* /combos/combo_singe_quote */ \
	68, /* /combos/combo_six */ \
	72, /* /combos/combo_tab */ \
	73, /* /combos/combo_three */ \
	74, /* /combos/combo_two */ \
	75, /* /combos/combo_up */ \
	76, /* /combos/combo_zero */ \
	82, /* /behaviors/e_shifted_tap_dance */ \
	83, /* /behaviors/i_shifted_tap_dance */ \
	84, /* /behaviors/j_shifted_tap_dance */ \
	87, /* /behaviors/r_shifted_tap_dance */ \
	88, /* /behaviors/seminav_tap_dance */ \
	89, /* /behaviors/u_shifted_tap_dance */ \
	90, /* /keymap/0 */ \
	92, /* /behaviors/sticky_key */ \
	98, /* /keymap/1 */ \
	101, /* /keymap/3 */ \
	102, /* /keymap/4 */ \
	103, /* /keymap/5 */ \
	104, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_key_press_EXISTS 1
#define DT_N_INST_0_zmk_behavior_key_press DT_N_S_behaviors_S_key_press
#define DT_N_NODELABEL_cp                  DT_N_S_behaviors_S_key_press
#define DT_N_NODELABEL_kp                  DT_N_S_behaviors_S_key_press

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_key_press_REG_NUM 0
#define DT_N_S_behaviors_S_key_press_RANGES_NUM 0
#define DT_N_S_behaviors_S_key_press_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_key_press_IRQ_NUM 0
#define DT_N_S_behaviors_S_key_press_COMPAT_MATCHES_zmk_behavior_key_press 1
#define DT_N_S_behaviors_S_key_press_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_key_press_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_key_press_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_key_press_COMPAT_MODEL_IDX_0 "behavior-key-press"
#define DT_N_S_behaviors_S_key_press_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_key_press_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /combos/combo_backslash
 *
 * Node identifier: DT_N_S_combos_S_combo_backslash
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_backslash_PATH "/combos/combo_backslash"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_backslash_FULL_NAME "combo_backslash"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_backslash_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_backslash_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_backslash_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_backslash_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_backslash_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_backslash_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_backslash_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_backslash_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_backslash_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_backslash_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_backslash_ORD 31
#define DT_N_S_combos_S_combo_backslash_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_backslash_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_backslash_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_backslash_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_backslash_REG_NUM 0
#define DT_N_S_combos_S_combo_backslash_RANGES_NUM 0
#define DT_N_S_combos_S_combo_backslash_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_backslash_IRQ_NUM 0
#define DT_N_S_combos_S_combo_backslash_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_backslash_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_backslash_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_backslash_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_backslash_P_bindings_IDX_0_VAL_param1 458801
#define DT_N_S_combos_S_combo_backslash_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_backslash_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_backslash, bindings, 0)
#define DT_N_S_combos_S_combo_backslash_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_backslash, bindings, 0)
#define DT_N_S_combos_S_combo_backslash_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_backslash, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_backslash_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_backslash, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_backslash_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_backslash_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_backslash_P_key_positions {6 /* 0x6 */, 7 /* 0x7 */}
#define DT_N_S_combos_S_combo_backslash_P_key_positions_IDX_0 6
#define DT_N_S_combos_S_combo_backslash_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_backslash_P_key_positions_IDX_1 7
#define DT_N_S_combos_S_combo_backslash_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_backslash_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_backslash, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_backslash, key_positions, 1)
#define DT_N_S_combos_S_combo_backslash_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_backslash, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_backslash, key_positions, 1)
#define DT_N_S_combos_S_combo_backslash_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_backslash, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_backslash, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_backslash_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_backslash, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_backslash, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_backslash_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_backslash_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_backslash_P_timeout_ms 20
#define DT_N_S_combos_S_combo_backslash_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_backslash_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_backslash_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_backslash_P_slow_release 0
#define DT_N_S_combos_S_combo_backslash_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_backslash_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_backslash_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_backslash_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_backslash_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_backslash, layers, 0)
#define DT_N_S_combos_S_combo_backslash_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_backslash, layers, 0)
#define DT_N_S_combos_S_combo_backslash_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_backslash, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_backslash_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_backslash, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_backslash_P_layers_LEN 1
#define DT_N_S_combos_S_combo_backslash_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_backspace
 *
 * Node identifier: DT_N_S_combos_S_combo_backspace
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_backspace_PATH "/combos/combo_backspace"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_backspace_FULL_NAME "combo_backspace"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_backspace_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_backspace_CHILD_IDX 29

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_backspace_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_backspace_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_backspace_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_backspace_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_backspace_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_backspace_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_backspace_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_backspace_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_backspace_ORD 32
#define DT_N_S_combos_S_combo_backspace_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_backspace_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_backspace_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_backspace_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_backspace_REG_NUM 0
#define DT_N_S_combos_S_combo_backspace_RANGES_NUM 0
#define DT_N_S_combos_S_combo_backspace_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_backspace_IRQ_NUM 0
#define DT_N_S_combos_S_combo_backspace_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_backspace_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_backspace_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_backspace_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_backspace_P_bindings_IDX_0_VAL_param1 458794
#define DT_N_S_combos_S_combo_backspace_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_backspace_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_backspace, bindings, 0)
#define DT_N_S_combos_S_combo_backspace_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_backspace, bindings, 0)
#define DT_N_S_combos_S_combo_backspace_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_backspace, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_backspace_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_backspace, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_backspace_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_backspace_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_backspace_P_key_positions {17 /* 0x11 */, 18 /* 0x12 */}
#define DT_N_S_combos_S_combo_backspace_P_key_positions_IDX_0 17
#define DT_N_S_combos_S_combo_backspace_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_backspace_P_key_positions_IDX_1 18
#define DT_N_S_combos_S_combo_backspace_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_backspace_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_backspace, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_backspace, key_positions, 1)
#define DT_N_S_combos_S_combo_backspace_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_backspace, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_backspace, key_positions, 1)
#define DT_N_S_combos_S_combo_backspace_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_backspace, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_backspace, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_backspace_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_backspace, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_backspace, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_backspace_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_backspace_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_backspace_P_timeout_ms 20
#define DT_N_S_combos_S_combo_backspace_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_backspace_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_backspace_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_backspace_P_slow_release 0
#define DT_N_S_combos_S_combo_backspace_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_backspace_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_backspace_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_backspace_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_backspace_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_backspace, layers, 0)
#define DT_N_S_combos_S_combo_backspace_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_backspace, layers, 0)
#define DT_N_S_combos_S_combo_backspace_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_backspace, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_backspace_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_backspace, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_backspace_P_layers_LEN 1
#define DT_N_S_combos_S_combo_backspace_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_delete
 *
 * Node identifier: DT_N_S_combos_S_combo_delete
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_delete_PATH "/combos/combo_delete"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_delete_FULL_NAME "combo_delete"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_delete_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_delete_CHILD_IDX 27

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_delete_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_delete_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_delete_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_delete_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_delete_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_delete_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_delete_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_delete_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_delete_ORD 33
#define DT_N_S_combos_S_combo_delete_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_delete_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_delete_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_delete_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_delete_REG_NUM 0
#define DT_N_S_combos_S_combo_delete_RANGES_NUM 0
#define DT_N_S_combos_S_combo_delete_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_delete_IRQ_NUM 0
#define DT_N_S_combos_S_combo_delete_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_delete_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_delete_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_delete_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_delete_P_bindings_IDX_0_VAL_param1 458828
#define DT_N_S_combos_S_combo_delete_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_delete_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_delete, bindings, 0)
#define DT_N_S_combos_S_combo_delete_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_delete, bindings, 0)
#define DT_N_S_combos_S_combo_delete_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_delete, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_delete_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_delete, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_delete_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_delete_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_delete_P_key_positions {7 /* 0x7 */, 8 /* 0x8 */}
#define DT_N_S_combos_S_combo_delete_P_key_positions_IDX_0 7
#define DT_N_S_combos_S_combo_delete_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_delete_P_key_positions_IDX_1 8
#define DT_N_S_combos_S_combo_delete_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_delete_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_delete, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_delete, key_positions, 1)
#define DT_N_S_combos_S_combo_delete_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_delete, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_delete, key_positions, 1)
#define DT_N_S_combos_S_combo_delete_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_delete, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_delete, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_delete_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_delete, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_delete, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_delete_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_delete_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_delete_P_timeout_ms 20
#define DT_N_S_combos_S_combo_delete_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_delete_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_delete_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_delete_P_slow_release 0
#define DT_N_S_combos_S_combo_delete_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_delete_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_delete_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_delete_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_delete_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_delete, layers, 0)
#define DT_N_S_combos_S_combo_delete_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_delete, layers, 0)
#define DT_N_S_combos_S_combo_delete_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_delete, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_delete_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_delete, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_delete_P_layers_LEN 1
#define DT_N_S_combos_S_combo_delete_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_down
 *
 * Node identifier: DT_N_S_combos_S_combo_down
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_down_PATH "/combos/combo_down"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_down_FULL_NAME "combo_down"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_down_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_down_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_down_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_down_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_down_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_down_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_down_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_down_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_down_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_down_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_down_ORD 34
#define DT_N_S_combos_S_combo_down_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_down_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_down_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_down_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_down_REG_NUM 0
#define DT_N_S_combos_S_combo_down_RANGES_NUM 0
#define DT_N_S_combos_S_combo_down_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_down_IRQ_NUM 0
#define DT_N_S_combos_S_combo_down_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_down_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_down_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_down_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_down_P_bindings_IDX_0_VAL_param1 458833
#define DT_N_S_combos_S_combo_down_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_down_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_down, bindings, 0)
#define DT_N_S_combos_S_combo_down_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_down, bindings, 0)
#define DT_N_S_combos_S_combo_down_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_down, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_down_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_down, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_down_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_down_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_down_P_key_positions {19 /* 0x13 */, 16 /* 0x10 */}
#define DT_N_S_combos_S_combo_down_P_key_positions_IDX_0 19
#define DT_N_S_combos_S_combo_down_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_down_P_key_positions_IDX_1 16
#define DT_N_S_combos_S_combo_down_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_down_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_down, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_down, key_positions, 1)
#define DT_N_S_combos_S_combo_down_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_down, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_down, key_positions, 1)
#define DT_N_S_combos_S_combo_down_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_down, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_down, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_down_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_down, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_down, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_down_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_down_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_down_P_timeout_ms 20
#define DT_N_S_combos_S_combo_down_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_down_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_down_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_down_P_slow_release 0
#define DT_N_S_combos_S_combo_down_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_down_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_down_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_down_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_down_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_down, layers, 0)
#define DT_N_S_combos_S_combo_down_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_down, layers, 0)
#define DT_N_S_combos_S_combo_down_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_down, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_down_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_down, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_down_P_layers_LEN 1
#define DT_N_S_combos_S_combo_down_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_eight
 *
 * Node identifier: DT_N_S_combos_S_combo_eight
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_eight_PATH "/combos/combo_eight"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_eight_FULL_NAME "combo_eight"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_eight_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_eight_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_eight_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_eight_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_eight_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_eight_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_eight_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_eight_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_eight_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_eight_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_eight_ORD 35
#define DT_N_S_combos_S_combo_eight_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_eight_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_eight_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_eight_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_eight_REG_NUM 0
#define DT_N_S_combos_S_combo_eight_RANGES_NUM 0
#define DT_N_S_combos_S_combo_eight_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_eight_IRQ_NUM 0
#define DT_N_S_combos_S_combo_eight_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_eight_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_eight_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_eight_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_eight_P_bindings_IDX_0_VAL_param1 458789
#define DT_N_S_combos_S_combo_eight_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_eight_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_eight, bindings, 0)
#define DT_N_S_combos_S_combo_eight_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_eight, bindings, 0)
#define DT_N_S_combos_S_combo_eight_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_eight, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_eight_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_eight, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_eight_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_eight_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_eight_P_key_positions {6 /* 0x6 */, 17 /* 0x11 */}
#define DT_N_S_combos_S_combo_eight_P_key_positions_IDX_0 6
#define DT_N_S_combos_S_combo_eight_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_eight_P_key_positions_IDX_1 17
#define DT_N_S_combos_S_combo_eight_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_eight_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_eight, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_eight, key_positions, 1)
#define DT_N_S_combos_S_combo_eight_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_eight, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_eight, key_positions, 1)
#define DT_N_S_combos_S_combo_eight_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_eight, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_eight, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_eight_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_eight, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_eight, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_eight_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_eight_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_eight_P_timeout_ms 20
#define DT_N_S_combos_S_combo_eight_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_eight_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_eight_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_eight_P_slow_release 0
#define DT_N_S_combos_S_combo_eight_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_eight_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_eight_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_eight_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_eight_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_eight, layers, 0)
#define DT_N_S_combos_S_combo_eight_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_eight, layers, 0)
#define DT_N_S_combos_S_combo_eight_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_eight, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_eight_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_eight, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_eight_P_layers_LEN 1
#define DT_N_S_combos_S_combo_eight_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_end
 *
 * Node identifier: DT_N_S_combos_S_combo_end
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_end_PATH "/combos/combo_end"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_end_FULL_NAME "combo_end"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_end_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_end_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_end_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_end_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_end_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_end_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_end_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_end_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_end_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_end_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_end_ORD 36
#define DT_N_S_combos_S_combo_end_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_end_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_end_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_end_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_end_REG_NUM 0
#define DT_N_S_combos_S_combo_end_RANGES_NUM 0
#define DT_N_S_combos_S_combo_end_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_end_IRQ_NUM 0
#define DT_N_S_combos_S_combo_end_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_end_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_end_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_end_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_end_P_bindings_IDX_0_VAL_param1 458829
#define DT_N_S_combos_S_combo_end_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_end_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_end, bindings, 0)
#define DT_N_S_combos_S_combo_end_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_end, bindings, 0)
#define DT_N_S_combos_S_combo_end_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_end, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_end_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_end, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_end_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_end_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_end_P_key_positions {19 /* 0x13 */, 28 /* 0x1c */}
#define DT_N_S_combos_S_combo_end_P_key_positions_IDX_0 19
#define DT_N_S_combos_S_combo_end_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_end_P_key_positions_IDX_1 28
#define DT_N_S_combos_S_combo_end_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_end_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_end, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_end, key_positions, 1)
#define DT_N_S_combos_S_combo_end_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_end, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_end, key_positions, 1)
#define DT_N_S_combos_S_combo_end_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_end, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_end, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_end_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_end, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_end, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_end_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_end_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_end_P_timeout_ms 20
#define DT_N_S_combos_S_combo_end_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_end_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_end_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_end_P_slow_release 0
#define DT_N_S_combos_S_combo_end_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_end_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_end_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_end_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_end_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_end, layers, 0)
#define DT_N_S_combos_S_combo_end_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_end, layers, 0)
#define DT_N_S_combos_S_combo_end_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_end, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_end_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_end, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_end_P_layers_LEN 1
#define DT_N_S_combos_S_combo_end_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_enter
 *
 * Node identifier: DT_N_S_combos_S_combo_enter
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_enter_PATH "/combos/combo_enter"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_enter_FULL_NAME "combo_enter"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_enter_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_enter_CHILD_IDX 31

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_enter_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_enter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_enter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_enter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_enter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_enter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_enter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_enter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_enter_ORD 37
#define DT_N_S_combos_S_combo_enter_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_enter_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_enter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_enter_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_enter_REG_NUM 0
#define DT_N_S_combos_S_combo_enter_RANGES_NUM 0
#define DT_N_S_combos_S_combo_enter_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_enter_IRQ_NUM 0
#define DT_N_S_combos_S_combo_enter_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_enter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_enter_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_enter_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_enter_P_bindings_IDX_0_VAL_param1 458792
#define DT_N_S_combos_S_combo_enter_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_enter_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_enter, bindings, 0)
#define DT_N_S_combos_S_combo_enter_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_enter, bindings, 0)
#define DT_N_S_combos_S_combo_enter_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_enter, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_enter_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_enter, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_enter_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_enter_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_enter_P_key_positions {27 /* 0x1b */, 28 /* 0x1c */}
#define DT_N_S_combos_S_combo_enter_P_key_positions_IDX_0 27
#define DT_N_S_combos_S_combo_enter_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_enter_P_key_positions_IDX_1 28
#define DT_N_S_combos_S_combo_enter_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_enter_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_enter, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_enter, key_positions, 1)
#define DT_N_S_combos_S_combo_enter_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_enter, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_enter, key_positions, 1)
#define DT_N_S_combos_S_combo_enter_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_enter, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_enter, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_enter_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_enter, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_enter, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_enter_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_enter_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_enter_P_timeout_ms 20
#define DT_N_S_combos_S_combo_enter_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_enter_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_enter_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_enter_P_slow_release 0
#define DT_N_S_combos_S_combo_enter_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_enter_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_enter_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_enter_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_enter_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_enter, layers, 0)
#define DT_N_S_combos_S_combo_enter_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_enter, layers, 0)
#define DT_N_S_combos_S_combo_enter_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_enter, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_enter_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_enter, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_enter_P_layers_LEN 1
#define DT_N_S_combos_S_combo_enter_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_equal
 *
 * Node identifier: DT_N_S_combos_S_combo_equal
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_equal_PATH "/combos/combo_equal"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_equal_FULL_NAME "combo_equal"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_equal_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_equal_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_equal_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_equal_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_equal_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_equal_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_equal_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_equal_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_equal_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_equal_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_equal_ORD 38
#define DT_N_S_combos_S_combo_equal_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_equal_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_equal_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_equal_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_equal_REG_NUM 0
#define DT_N_S_combos_S_combo_equal_RANGES_NUM 0
#define DT_N_S_combos_S_combo_equal_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_equal_IRQ_NUM 0
#define DT_N_S_combos_S_combo_equal_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_equal_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_equal_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_equal_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_equal_P_bindings_IDX_0_VAL_param1 458798
#define DT_N_S_combos_S_combo_equal_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_equal_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_equal, bindings, 0)
#define DT_N_S_combos_S_combo_equal_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_equal, bindings, 0)
#define DT_N_S_combos_S_combo_equal_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_equal, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_equal_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_equal, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_equal_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_equal_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_equal_P_key_positions {16 /* 0x10 */, 29 /* 0x1d */}
#define DT_N_S_combos_S_combo_equal_P_key_positions_IDX_0 16
#define DT_N_S_combos_S_combo_equal_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_equal_P_key_positions_IDX_1 29
#define DT_N_S_combos_S_combo_equal_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_equal_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_equal, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_equal, key_positions, 1)
#define DT_N_S_combos_S_combo_equal_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_equal, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_equal, key_positions, 1)
#define DT_N_S_combos_S_combo_equal_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_equal, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_equal, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_equal_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_equal, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_equal, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_equal_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_equal_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_equal_P_timeout_ms 50
#define DT_N_S_combos_S_combo_equal_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_equal_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_equal_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_equal_P_slow_release 0
#define DT_N_S_combos_S_combo_equal_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_equal_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_equal_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_equal_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_equal_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_equal, layers, 0)
#define DT_N_S_combos_S_combo_equal_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_equal, layers, 0)
#define DT_N_S_combos_S_combo_equal_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_equal, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_equal_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_equal, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_equal_P_layers_LEN 1
#define DT_N_S_combos_S_combo_equal_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_escape
 *
 * Node identifier: DT_N_S_combos_S_combo_escape
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_escape_PATH "/combos/combo_escape"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_escape_FULL_NAME "combo_escape"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_escape_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_escape_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_escape_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_escape_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_escape_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_escape_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_escape_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_escape_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_escape_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_escape_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_escape_ORD 39
#define DT_N_S_combos_S_combo_escape_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_escape_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_escape_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_escape_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_escape_REG_NUM 0
#define DT_N_S_combos_S_combo_escape_RANGES_NUM 0
#define DT_N_S_combos_S_combo_escape_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_escape_IRQ_NUM 0
#define DT_N_S_combos_S_combo_escape_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_escape_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_escape_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_escape_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_escape_P_bindings_IDX_0_VAL_param1 458793
#define DT_N_S_combos_S_combo_escape_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_escape_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_escape, bindings, 0)
#define DT_N_S_combos_S_combo_escape_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_escape, bindings, 0)
#define DT_N_S_combos_S_combo_escape_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_escape, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_escape_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_escape, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_escape_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_escape_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_escape_P_key_positions {0 /* 0x0 */, 1 /* 0x1 */}
#define DT_N_S_combos_S_combo_escape_P_key_positions_IDX_0 0
#define DT_N_S_combos_S_combo_escape_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_escape_P_key_positions_IDX_1 1
#define DT_N_S_combos_S_combo_escape_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_escape_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_escape, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_escape, key_positions, 1)
#define DT_N_S_combos_S_combo_escape_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_escape, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_escape, key_positions, 1)
#define DT_N_S_combos_S_combo_escape_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_escape, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_escape, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_escape_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_escape, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_escape, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_escape_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_escape_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_escape_P_timeout_ms 20
#define DT_N_S_combos_S_combo_escape_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_escape_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_escape_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_escape_P_slow_release 0
#define DT_N_S_combos_S_combo_escape_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_escape_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_escape_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_escape_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_escape_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_escape, layers, 0)
#define DT_N_S_combos_S_combo_escape_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_escape, layers, 0)
#define DT_N_S_combos_S_combo_escape_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_escape, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_escape_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_escape, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_escape_P_layers_LEN 1
#define DT_N_S_combos_S_combo_escape_P_layers_EXISTS 1

/*
 * Devicetree node: /behaviors/extpower
 *
 * Node identifier: DT_N_S_behaviors_S_extpower
 *
 * Binding (compatible = zmk,behavior-ext-power):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-ext-power.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_extpower_PATH "/behaviors/extpower"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_extpower_FULL_NAME "extpower"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_extpower_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_extpower_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_extpower_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_extpower_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_extpower_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_extpower_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_extpower_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_extpower_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_extpower_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_extpower_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_extpower_ORD 40
#define DT_N_S_behaviors_S_extpower_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_extpower_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_extpower_SUPPORTS_ORDS \
	41, /* /combos/combo_external_power_off */ \
	42, /* /combos/combo_external_power_on */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_extpower_EXISTS 1
#define DT_N_INST_0_zmk_behavior_ext_power DT_N_S_behaviors_S_extpower
#define DT_N_NODELABEL_ext_power           DT_N_S_behaviors_S_extpower

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_extpower_REG_NUM 0
#define DT_N_S_behaviors_S_extpower_RANGES_NUM 0
#define DT_N_S_behaviors_S_extpower_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_extpower_IRQ_NUM 0
#define DT_N_S_behaviors_S_extpower_COMPAT_MATCHES_zmk_behavior_ext_power 1
#define DT_N_S_behaviors_S_extpower_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_extpower_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_extpower_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_extpower_COMPAT_MODEL_IDX_0 "behavior-ext-power"
#define DT_N_S_behaviors_S_extpower_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_extpower_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /combos/combo_external_power_off
 *
 * Node identifier: DT_N_S_combos_S_combo_external_power_off
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_external_power_off_PATH "/combos/combo_external_power_off"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_external_power_off_FULL_NAME "combo_external_power_off"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_external_power_off_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_external_power_off_CHILD_IDX 37

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_external_power_off_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_external_power_off_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_external_power_off_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_external_power_off_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_external_power_off_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_external_power_off_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_external_power_off_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_external_power_off_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_external_power_off_ORD 41
#define DT_N_S_combos_S_combo_external_power_off_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_external_power_off_REQUIRES_ORDS \
	29, /* /combos */ \
	40, /* /behaviors/extpower */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_external_power_off_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_external_power_off_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_external_power_off_REG_NUM 0
#define DT_N_S_combos_S_combo_external_power_off_RANGES_NUM 0
#define DT_N_S_combos_S_combo_external_power_off_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_external_power_off_IRQ_NUM 0
#define DT_N_S_combos_S_combo_external_power_off_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_external_power_off_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_external_power_off_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_off_P_bindings_IDX_0_PH DT_N_S_behaviors_S_extpower
#define DT_N_S_combos_S_combo_external_power_off_P_bindings_IDX_0_VAL_param1 0
#define DT_N_S_combos_S_combo_external_power_off_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_off_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_external_power_off, bindings, 0)
#define DT_N_S_combos_S_combo_external_power_off_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_external_power_off, bindings, 0)
#define DT_N_S_combos_S_combo_external_power_off_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_external_power_off, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_external_power_off_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_external_power_off, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_external_power_off_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_external_power_off_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_off_P_key_positions {30 /* 0x1e */, 32 /* 0x20 */}
#define DT_N_S_combos_S_combo_external_power_off_P_key_positions_IDX_0 30
#define DT_N_S_combos_S_combo_external_power_off_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_off_P_key_positions_IDX_1 32
#define DT_N_S_combos_S_combo_external_power_off_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_off_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_external_power_off, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_external_power_off, key_positions, 1)
#define DT_N_S_combos_S_combo_external_power_off_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_external_power_off, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_external_power_off, key_positions, 1)
#define DT_N_S_combos_S_combo_external_power_off_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_external_power_off, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_external_power_off, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_external_power_off_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_external_power_off, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_external_power_off, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_external_power_off_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_external_power_off_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_off_P_timeout_ms 20
#define DT_N_S_combos_S_combo_external_power_off_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_off_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_external_power_off_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_off_P_slow_release 0
#define DT_N_S_combos_S_combo_external_power_off_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_off_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_external_power_off_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_external_power_off_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_off_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_external_power_off, layers, 0)
#define DT_N_S_combos_S_combo_external_power_off_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_external_power_off, layers, 0)
#define DT_N_S_combos_S_combo_external_power_off_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_external_power_off, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_external_power_off_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_external_power_off, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_external_power_off_P_layers_LEN 1
#define DT_N_S_combos_S_combo_external_power_off_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_external_power_on
 *
 * Node identifier: DT_N_S_combos_S_combo_external_power_on
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_external_power_on_PATH "/combos/combo_external_power_on"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_external_power_on_FULL_NAME "combo_external_power_on"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_external_power_on_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_external_power_on_CHILD_IDX 36

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_external_power_on_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_external_power_on_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_external_power_on_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_external_power_on_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_external_power_on_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_external_power_on_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_external_power_on_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_external_power_on_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_external_power_on_ORD 42
#define DT_N_S_combos_S_combo_external_power_on_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_external_power_on_REQUIRES_ORDS \
	29, /* /combos */ \
	40, /* /behaviors/extpower */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_external_power_on_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_external_power_on_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_external_power_on_REG_NUM 0
#define DT_N_S_combos_S_combo_external_power_on_RANGES_NUM 0
#define DT_N_S_combos_S_combo_external_power_on_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_external_power_on_IRQ_NUM 0
#define DT_N_S_combos_S_combo_external_power_on_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_external_power_on_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_external_power_on_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_on_P_bindings_IDX_0_PH DT_N_S_behaviors_S_extpower
#define DT_N_S_combos_S_combo_external_power_on_P_bindings_IDX_0_VAL_param1 1
#define DT_N_S_combos_S_combo_external_power_on_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_on_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_external_power_on, bindings, 0)
#define DT_N_S_combos_S_combo_external_power_on_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_external_power_on, bindings, 0)
#define DT_N_S_combos_S_combo_external_power_on_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_external_power_on, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_external_power_on_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_external_power_on, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_external_power_on_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_external_power_on_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_on_P_key_positions {30 /* 0x1e */, 31 /* 0x1f */, 32 /* 0x20 */}
#define DT_N_S_combos_S_combo_external_power_on_P_key_positions_IDX_0 30
#define DT_N_S_combos_S_combo_external_power_on_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_on_P_key_positions_IDX_1 31
#define DT_N_S_combos_S_combo_external_power_on_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_on_P_key_positions_IDX_2 32
#define DT_N_S_combos_S_combo_external_power_on_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_on_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_external_power_on, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_external_power_on, key_positions, 1) \
	fn(DT_N_S_combos_S_combo_external_power_on, key_positions, 2)
#define DT_N_S_combos_S_combo_external_power_on_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_external_power_on, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_external_power_on, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_external_power_on, key_positions, 2)
#define DT_N_S_combos_S_combo_external_power_on_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_external_power_on, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_external_power_on, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_external_power_on, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_external_power_on_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_external_power_on, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_external_power_on, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_external_power_on, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_external_power_on_P_key_positions_LEN 3
#define DT_N_S_combos_S_combo_external_power_on_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_on_P_timeout_ms 20
#define DT_N_S_combos_S_combo_external_power_on_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_on_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_external_power_on_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_on_P_slow_release 0
#define DT_N_S_combos_S_combo_external_power_on_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_on_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_external_power_on_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_external_power_on_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_external_power_on_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_external_power_on, layers, 0)
#define DT_N_S_combos_S_combo_external_power_on_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_external_power_on, layers, 0)
#define DT_N_S_combos_S_combo_external_power_on_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_external_power_on, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_external_power_on_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_external_power_on, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_external_power_on_P_layers_LEN 1
#define DT_N_S_combos_S_combo_external_power_on_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_five
 *
 * Node identifier: DT_N_S_combos_S_combo_five
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_five_PATH "/combos/combo_five"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_five_FULL_NAME "combo_five"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_five_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_five_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_five_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_five_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_five_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_five_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_five_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_five_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_five_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_five_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_five_ORD 43
#define DT_N_S_combos_S_combo_five_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_five_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_five_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_five_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_five_REG_NUM 0
#define DT_N_S_combos_S_combo_five_RANGES_NUM 0
#define DT_N_S_combos_S_combo_five_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_five_IRQ_NUM 0
#define DT_N_S_combos_S_combo_five_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_five_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_five_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_five_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_five_P_bindings_IDX_0_VAL_param1 458786
#define DT_N_S_combos_S_combo_five_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_five_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_five, bindings, 0)
#define DT_N_S_combos_S_combo_five_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_five, bindings, 0)
#define DT_N_S_combos_S_combo_five_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_five, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_five_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_five, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_five_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_five_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_five_P_key_positions {2 /* 0x2 */, 14 /* 0xe */}
#define DT_N_S_combos_S_combo_five_P_key_positions_IDX_0 2
#define DT_N_S_combos_S_combo_five_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_five_P_key_positions_IDX_1 14
#define DT_N_S_combos_S_combo_five_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_five_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_five, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_five, key_positions, 1)
#define DT_N_S_combos_S_combo_five_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_five, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_five, key_positions, 1)
#define DT_N_S_combos_S_combo_five_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_five, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_five, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_five_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_five, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_five, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_five_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_five_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_five_P_timeout_ms 20
#define DT_N_S_combos_S_combo_five_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_five_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_five_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_five_P_slow_release 0
#define DT_N_S_combos_S_combo_five_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_five_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_five_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_five_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_five_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_five, layers, 0)
#define DT_N_S_combos_S_combo_five_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_five, layers, 0)
#define DT_N_S_combos_S_combo_five_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_five, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_five_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_five, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_five_P_layers_LEN 1
#define DT_N_S_combos_S_combo_five_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_four
 *
 * Node identifier: DT_N_S_combos_S_combo_four
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_four_PATH "/combos/combo_four"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_four_FULL_NAME "combo_four"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_four_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_four_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_four_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_four_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_four_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_four_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_four_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_four_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_four_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_four_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_four_ORD 44
#define DT_N_S_combos_S_combo_four_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_four_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_four_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_four_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_four_REG_NUM 0
#define DT_N_S_combos_S_combo_four_RANGES_NUM 0
#define DT_N_S_combos_S_combo_four_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_four_IRQ_NUM 0
#define DT_N_S_combos_S_combo_four_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_four_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_four_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_four_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_four_P_bindings_IDX_0_VAL_param1 458785
#define DT_N_S_combos_S_combo_four_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_four_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_four, bindings, 0)
#define DT_N_S_combos_S_combo_four_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_four, bindings, 0)
#define DT_N_S_combos_S_combo_four_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_four, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_four_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_four, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_four_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_four_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_four_P_key_positions {2 /* 0x2 */, 13 /* 0xd */}
#define DT_N_S_combos_S_combo_four_P_key_positions_IDX_0 2
#define DT_N_S_combos_S_combo_four_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_four_P_key_positions_IDX_1 13
#define DT_N_S_combos_S_combo_four_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_four_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_four, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_four, key_positions, 1)
#define DT_N_S_combos_S_combo_four_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_four, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_four, key_positions, 1)
#define DT_N_S_combos_S_combo_four_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_four, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_four, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_four_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_four, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_four, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_four_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_four_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_four_P_timeout_ms 20
#define DT_N_S_combos_S_combo_four_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_four_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_four_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_four_P_slow_release 0
#define DT_N_S_combos_S_combo_four_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_four_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_four_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_four_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_four_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_four, layers, 0)
#define DT_N_S_combos_S_combo_four_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_four, layers, 0)
#define DT_N_S_combos_S_combo_four_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_four, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_four_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_four, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_four_P_layers_LEN 1
#define DT_N_S_combos_S_combo_four_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_grave
 *
 * Node identifier: DT_N_S_combos_S_combo_grave
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_grave_PATH "/combos/combo_grave"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_grave_FULL_NAME "combo_grave"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_grave_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_grave_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_grave_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_grave_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_grave_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_grave_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_grave_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_grave_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_grave_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_grave_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_grave_ORD 45
#define DT_N_S_combos_S_combo_grave_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_grave_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_grave_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_grave_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_grave_REG_NUM 0
#define DT_N_S_combos_S_combo_grave_RANGES_NUM 0
#define DT_N_S_combos_S_combo_grave_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_grave_IRQ_NUM 0
#define DT_N_S_combos_S_combo_grave_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_grave_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_grave_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_grave_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_grave_P_bindings_IDX_0_VAL_param1 458805
#define DT_N_S_combos_S_combo_grave_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_grave_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_grave, bindings, 0)
#define DT_N_S_combos_S_combo_grave_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_grave, bindings, 0)
#define DT_N_S_combos_S_combo_grave_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_grave, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_grave_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_grave, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_grave_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_grave_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_grave_P_key_positions {3 /* 0x3 */, 0 /* 0x0 */}
#define DT_N_S_combos_S_combo_grave_P_key_positions_IDX_0 3
#define DT_N_S_combos_S_combo_grave_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_grave_P_key_positions_IDX_1 0
#define DT_N_S_combos_S_combo_grave_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_grave_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_grave, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_grave, key_positions, 1)
#define DT_N_S_combos_S_combo_grave_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_grave, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_grave, key_positions, 1)
#define DT_N_S_combos_S_combo_grave_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_grave, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_grave, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_grave_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_grave, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_grave, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_grave_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_grave_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_grave_P_timeout_ms 20
#define DT_N_S_combos_S_combo_grave_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_grave_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_grave_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_grave_P_slow_release 0
#define DT_N_S_combos_S_combo_grave_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_grave_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_grave_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_grave_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_grave_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_grave, layers, 0)
#define DT_N_S_combos_S_combo_grave_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_grave, layers, 0)
#define DT_N_S_combos_S_combo_grave_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_grave, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_grave_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_grave, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_grave_P_layers_LEN 1
#define DT_N_S_combos_S_combo_grave_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_home
 *
 * Node identifier: DT_N_S_combos_S_combo_home
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_home_PATH "/combos/combo_home"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_home_FULL_NAME "combo_home"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_home_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_home_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_home_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_home_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_home_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_home_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_home_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_home_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_home_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_home_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_home_ORD 46
#define DT_N_S_combos_S_combo_home_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_home_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_home_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_home_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_home_REG_NUM 0
#define DT_N_S_combos_S_combo_home_RANGES_NUM 0
#define DT_N_S_combos_S_combo_home_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_home_IRQ_NUM 0
#define DT_N_S_combos_S_combo_home_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_home_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_home_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_home_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_home_P_bindings_IDX_0_VAL_param1 458826
#define DT_N_S_combos_S_combo_home_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_home_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_home, bindings, 0)
#define DT_N_S_combos_S_combo_home_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_home, bindings, 0)
#define DT_N_S_combos_S_combo_home_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_home, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_home_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_home, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_home_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_home_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_home_P_key_positions {19 /* 0x13 */, 25 /* 0x19 */}
#define DT_N_S_combos_S_combo_home_P_key_positions_IDX_0 19
#define DT_N_S_combos_S_combo_home_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_home_P_key_positions_IDX_1 25
#define DT_N_S_combos_S_combo_home_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_home_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_home, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_home, key_positions, 1)
#define DT_N_S_combos_S_combo_home_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_home, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_home, key_positions, 1)
#define DT_N_S_combos_S_combo_home_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_home, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_home, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_home_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_home, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_home, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_home_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_home_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_home_P_timeout_ms 20
#define DT_N_S_combos_S_combo_home_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_home_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_home_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_home_P_slow_release 0
#define DT_N_S_combos_S_combo_home_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_home_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_home_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_home_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_home_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_home, layers, 0)
#define DT_N_S_combos_S_combo_home_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_home, layers, 0)
#define DT_N_S_combos_S_combo_home_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_home, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_home_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_home, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_home_P_layers_LEN 1
#define DT_N_S_combos_S_combo_home_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_lctrlbackspace
 *
 * Node identifier: DT_N_S_combos_S_combo_lctrlbackspace
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_lctrlbackspace_PATH "/combos/combo_lctrlbackspace"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_lctrlbackspace_FULL_NAME "combo_lctrlbackspace"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_lctrlbackspace_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_lctrlbackspace_CHILD_IDX 30

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_lctrlbackspace_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_lctrlbackspace_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_lctrlbackspace_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_lctrlbackspace_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_lctrlbackspace_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_lctrlbackspace_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_lctrlbackspace_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_lctrlbackspace_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_lctrlbackspace_ORD 47
#define DT_N_S_combos_S_combo_lctrlbackspace_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_lctrlbackspace_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_lctrlbackspace_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_lctrlbackspace_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_lctrlbackspace_REG_NUM 0
#define DT_N_S_combos_S_combo_lctrlbackspace_RANGES_NUM 0
#define DT_N_S_combos_S_combo_lctrlbackspace_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_lctrlbackspace_IRQ_NUM 0
#define DT_N_S_combos_S_combo_lctrlbackspace_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_lctrlbackspace_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_lctrlbackspace_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_lctrlbackspace_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_lctrlbackspace_P_bindings_IDX_0_VAL_param1 17236010
#define DT_N_S_combos_S_combo_lctrlbackspace_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_lctrlbackspace_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_lctrlbackspace, bindings, 0)
#define DT_N_S_combos_S_combo_lctrlbackspace_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_lctrlbackspace, bindings, 0)
#define DT_N_S_combos_S_combo_lctrlbackspace_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_lctrlbackspace, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_lctrlbackspace_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_lctrlbackspace, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_lctrlbackspace_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_lctrlbackspace_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_lctrlbackspace_P_key_positions {16 /* 0x10 */, 17 /* 0x11 */, 18 /* 0x12 */}
#define DT_N_S_combos_S_combo_lctrlbackspace_P_key_positions_IDX_0 16
#define DT_N_S_combos_S_combo_lctrlbackspace_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_lctrlbackspace_P_key_positions_IDX_1 17
#define DT_N_S_combos_S_combo_lctrlbackspace_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_lctrlbackspace_P_key_positions_IDX_2 18
#define DT_N_S_combos_S_combo_lctrlbackspace_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_lctrlbackspace_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_lctrlbackspace, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_lctrlbackspace, key_positions, 1) \
	fn(DT_N_S_combos_S_combo_lctrlbackspace, key_positions, 2)
#define DT_N_S_combos_S_combo_lctrlbackspace_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_lctrlbackspace, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_lctrlbackspace, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_lctrlbackspace, key_positions, 2)
#define DT_N_S_combos_S_combo_lctrlbackspace_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_lctrlbackspace, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_lctrlbackspace, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_lctrlbackspace, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_lctrlbackspace_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_lctrlbackspace, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_lctrlbackspace, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_lctrlbackspace, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_lctrlbackspace_P_key_positions_LEN 3
#define DT_N_S_combos_S_combo_lctrlbackspace_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_lctrlbackspace_P_timeout_ms 20
#define DT_N_S_combos_S_combo_lctrlbackspace_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_lctrlbackspace_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_lctrlbackspace_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_lctrlbackspace_P_slow_release 0
#define DT_N_S_combos_S_combo_lctrlbackspace_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_lctrlbackspace_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_lctrlbackspace_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_lctrlbackspace_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_lctrlbackspace_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_lctrlbackspace, layers, 0)
#define DT_N_S_combos_S_combo_lctrlbackspace_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_lctrlbackspace, layers, 0)
#define DT_N_S_combos_S_combo_lctrlbackspace_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_lctrlbackspace, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_lctrlbackspace_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_lctrlbackspace, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_lctrlbackspace_P_layers_LEN 1
#define DT_N_S_combos_S_combo_lctrlbackspace_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_lctrldelete
 *
 * Node identifier: DT_N_S_combos_S_combo_lctrldelete
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_lctrldelete_PATH "/combos/combo_lctrldelete"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_lctrldelete_FULL_NAME "combo_lctrldelete"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_lctrldelete_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_lctrldelete_CHILD_IDX 28

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_lctrldelete_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_lctrldelete_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_lctrldelete_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_lctrldelete_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_lctrldelete_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_lctrldelete_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_lctrldelete_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_lctrldelete_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_lctrldelete_ORD 48
#define DT_N_S_combos_S_combo_lctrldelete_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_lctrldelete_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_lctrldelete_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_lctrldelete_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_lctrldelete_REG_NUM 0
#define DT_N_S_combos_S_combo_lctrldelete_RANGES_NUM 0
#define DT_N_S_combos_S_combo_lctrldelete_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_lctrldelete_IRQ_NUM 0
#define DT_N_S_combos_S_combo_lctrldelete_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_lctrldelete_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_lctrldelete_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_lctrldelete_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_lctrldelete_P_bindings_IDX_0_VAL_param1 17236044
#define DT_N_S_combos_S_combo_lctrldelete_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_lctrldelete_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_lctrldelete, bindings, 0)
#define DT_N_S_combos_S_combo_lctrldelete_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_lctrldelete, bindings, 0)
#define DT_N_S_combos_S_combo_lctrldelete_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_lctrldelete, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_lctrldelete_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_lctrldelete, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_lctrldelete_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_lctrldelete_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_lctrldelete_P_key_positions {6 /* 0x6 */, 7 /* 0x7 */, 8 /* 0x8 */}
#define DT_N_S_combos_S_combo_lctrldelete_P_key_positions_IDX_0 6
#define DT_N_S_combos_S_combo_lctrldelete_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_lctrldelete_P_key_positions_IDX_1 7
#define DT_N_S_combos_S_combo_lctrldelete_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_lctrldelete_P_key_positions_IDX_2 8
#define DT_N_S_combos_S_combo_lctrldelete_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_lctrldelete_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_lctrldelete, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_lctrldelete, key_positions, 1) \
	fn(DT_N_S_combos_S_combo_lctrldelete, key_positions, 2)
#define DT_N_S_combos_S_combo_lctrldelete_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_lctrldelete, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_lctrldelete, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_lctrldelete, key_positions, 2)
#define DT_N_S_combos_S_combo_lctrldelete_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_lctrldelete, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_lctrldelete, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_lctrldelete, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_lctrldelete_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_lctrldelete, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_lctrldelete, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_lctrldelete, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_lctrldelete_P_key_positions_LEN 3
#define DT_N_S_combos_S_combo_lctrldelete_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_lctrldelete_P_timeout_ms 20
#define DT_N_S_combos_S_combo_lctrldelete_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_lctrldelete_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_lctrldelete_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_lctrldelete_P_slow_release 0
#define DT_N_S_combos_S_combo_lctrldelete_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_lctrldelete_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_lctrldelete_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_lctrldelete_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_lctrldelete_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_lctrldelete, layers, 0)
#define DT_N_S_combos_S_combo_lctrldelete_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_lctrldelete, layers, 0)
#define DT_N_S_combos_S_combo_lctrldelete_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_lctrldelete, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_lctrldelete_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_lctrldelete, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_lctrldelete_P_layers_LEN 1
#define DT_N_S_combos_S_combo_lctrldelete_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_left
 *
 * Node identifier: DT_N_S_combos_S_combo_left
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_left_PATH "/combos/combo_left"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_left_FULL_NAME "combo_left"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_left_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_left_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_left_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_left_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_left_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_left_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_left_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_left_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_left_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_left_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_left_ORD 49
#define DT_N_S_combos_S_combo_left_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_left_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_left_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_left_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_left_REG_NUM 0
#define DT_N_S_combos_S_combo_left_RANGES_NUM 0
#define DT_N_S_combos_S_combo_left_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_left_IRQ_NUM 0
#define DT_N_S_combos_S_combo_left_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_left_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_left_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_left_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_left_P_bindings_IDX_0_VAL_param1 458832
#define DT_N_S_combos_S_combo_left_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_left_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_left, bindings, 0)
#define DT_N_S_combos_S_combo_left_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_left, bindings, 0)
#define DT_N_S_combos_S_combo_left_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_left, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_left, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_left_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_left_P_key_positions {19 /* 0x13 */, 15 /* 0xf */}
#define DT_N_S_combos_S_combo_left_P_key_positions_IDX_0 19
#define DT_N_S_combos_S_combo_left_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_left_P_key_positions_IDX_1 15
#define DT_N_S_combos_S_combo_left_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_left_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_left, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_left, key_positions, 1)
#define DT_N_S_combos_S_combo_left_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_left, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_left, key_positions, 1)
#define DT_N_S_combos_S_combo_left_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_left, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_left, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_left, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_left, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_left_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_left_P_timeout_ms 20
#define DT_N_S_combos_S_combo_left_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_left_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_left_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_left_P_slow_release 0
#define DT_N_S_combos_S_combo_left_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_left_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_left_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_left_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_left_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_left, layers, 0)
#define DT_N_S_combos_S_combo_left_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_left, layers, 0)
#define DT_N_S_combos_S_combo_left_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_left, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_left, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_P_layers_LEN 1
#define DT_N_S_combos_S_combo_left_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_left_bracket
 *
 * Node identifier: DT_N_S_combos_S_combo_left_bracket
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_left_bracket_PATH "/combos/combo_left_bracket"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_left_bracket_FULL_NAME "combo_left_bracket"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_left_bracket_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_left_bracket_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_left_bracket_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_left_bracket_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_left_bracket_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_left_bracket_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_left_bracket_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_left_bracket_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_left_bracket_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_left_bracket_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_left_bracket_ORD 50
#define DT_N_S_combos_S_combo_left_bracket_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_left_bracket_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_left_bracket_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_left_bracket_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_left_bracket_REG_NUM 0
#define DT_N_S_combos_S_combo_left_bracket_RANGES_NUM 0
#define DT_N_S_combos_S_combo_left_bracket_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_left_bracket_IRQ_NUM 0
#define DT_N_S_combos_S_combo_left_bracket_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_left_bracket_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_left_bracket_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_left_bracket_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_left_bracket_P_bindings_IDX_0_VAL_param1 458799
#define DT_N_S_combos_S_combo_left_bracket_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_left_bracket_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_left_bracket, bindings, 0)
#define DT_N_S_combos_S_combo_left_bracket_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_left_bracket, bindings, 0)
#define DT_N_S_combos_S_combo_left_bracket_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_left_bracket, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_bracket_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_left_bracket, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_bracket_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_left_bracket_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_left_bracket_P_key_positions {6 /* 0x6 */, 8 /* 0x8 */}
#define DT_N_S_combos_S_combo_left_bracket_P_key_positions_IDX_0 6
#define DT_N_S_combos_S_combo_left_bracket_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_left_bracket_P_key_positions_IDX_1 8
#define DT_N_S_combos_S_combo_left_bracket_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_left_bracket_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_left_bracket, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_left_bracket, key_positions, 1)
#define DT_N_S_combos_S_combo_left_bracket_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_left_bracket, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_left_bracket, key_positions, 1)
#define DT_N_S_combos_S_combo_left_bracket_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_left_bracket, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_left_bracket, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_bracket_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_left_bracket, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_left_bracket, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_bracket_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_left_bracket_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_left_bracket_P_timeout_ms 20
#define DT_N_S_combos_S_combo_left_bracket_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_left_bracket_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_left_bracket_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_left_bracket_P_slow_release 0
#define DT_N_S_combos_S_combo_left_bracket_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_left_bracket_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_left_bracket_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_left_bracket_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_left_bracket_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_left_bracket, layers, 0)
#define DT_N_S_combos_S_combo_left_bracket_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_left_bracket, layers, 0)
#define DT_N_S_combos_S_combo_left_bracket_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_left_bracket, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_bracket_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_left_bracket, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_bracket_P_layers_LEN 1
#define DT_N_S_combos_S_combo_left_bracket_P_layers_EXISTS 1

/*
 * Devicetree node: /behaviors/mouse_key_press
 *
 * Node identifier: DT_N_S_behaviors_S_mouse_key_press
 *
 * Binding (compatible = zmk,behavior-mouse-key-press):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-mouse-key-press.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_mouse_key_press_PATH "/behaviors/mouse_key_press"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_mouse_key_press_FULL_NAME "mouse_key_press"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_mouse_key_press_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_mouse_key_press_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_mouse_key_press_ORD 51
#define DT_N_S_behaviors_S_mouse_key_press_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_mouse_key_press_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_mouse_key_press_SUPPORTS_ORDS \
	52, /* /combos/combo_left_click */ \
	53, /* /combos/combo_middle_click */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_mouse_key_press_EXISTS 1
#define DT_N_INST_0_zmk_behavior_mouse_key_press DT_N_S_behaviors_S_mouse_key_press
#define DT_N_NODELABEL_mkp                       DT_N_S_behaviors_S_mouse_key_press

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_mouse_key_press_REG_NUM 0
#define DT_N_S_behaviors_S_mouse_key_press_RANGES_NUM 0
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_mouse_key_press_IRQ_NUM 0
#define DT_N_S_behaviors_S_mouse_key_press_COMPAT_MATCHES_zmk_behavior_mouse_key_press 1
#define DT_N_S_behaviors_S_mouse_key_press_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_mouse_key_press_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_mouse_key_press_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_mouse_key_press_COMPAT_MODEL_IDX_0 "behavior-mouse-key-press"
#define DT_N_S_behaviors_S_mouse_key_press_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_mouse_key_press_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /combos/combo_left_click
 *
 * Node identifier: DT_N_S_combos_S_combo_left_click
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_left_click_PATH "/combos/combo_left_click"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_left_click_FULL_NAME "combo_left_click"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_left_click_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_left_click_CHILD_IDX 33

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_left_click_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_left_click_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_left_click_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_left_click_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_left_click_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_left_click_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_left_click_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_left_click_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_left_click_ORD 52
#define DT_N_S_combos_S_combo_left_click_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_left_click_REQUIRES_ORDS \
	29, /* /combos */ \
	51, /* /behaviors/mouse_key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_left_click_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_left_click_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_left_click_REG_NUM 0
#define DT_N_S_combos_S_combo_left_click_RANGES_NUM 0
#define DT_N_S_combos_S_combo_left_click_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_left_click_IRQ_NUM 0
#define DT_N_S_combos_S_combo_left_click_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_left_click_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_left_click_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_left_click_P_bindings_IDX_0_PH DT_N_S_behaviors_S_mouse_key_press
#define DT_N_S_combos_S_combo_left_click_P_bindings_IDX_0_VAL_param1 1
#define DT_N_S_combos_S_combo_left_click_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_left_click_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_left_click, bindings, 0)
#define DT_N_S_combos_S_combo_left_click_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_left_click, bindings, 0)
#define DT_N_S_combos_S_combo_left_click_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_left_click, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_click_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_left_click, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_click_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_left_click_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_left_click_P_key_positions {1 /* 0x1 */, 2 /* 0x2 */}
#define DT_N_S_combos_S_combo_left_click_P_key_positions_IDX_0 1
#define DT_N_S_combos_S_combo_left_click_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_left_click_P_key_positions_IDX_1 2
#define DT_N_S_combos_S_combo_left_click_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_left_click_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_left_click, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_left_click, key_positions, 1)
#define DT_N_S_combos_S_combo_left_click_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_left_click, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_left_click, key_positions, 1)
#define DT_N_S_combos_S_combo_left_click_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_left_click, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_left_click, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_click_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_left_click, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_left_click, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_click_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_left_click_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_left_click_P_timeout_ms 20
#define DT_N_S_combos_S_combo_left_click_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_left_click_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_left_click_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_left_click_P_slow_release 0
#define DT_N_S_combos_S_combo_left_click_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_left_click_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_left_click_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_left_click_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_left_click_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_left_click, layers, 0)
#define DT_N_S_combos_S_combo_left_click_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_left_click, layers, 0)
#define DT_N_S_combos_S_combo_left_click_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_left_click, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_click_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_left_click, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_left_click_P_layers_LEN 1
#define DT_N_S_combos_S_combo_left_click_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_middle_click
 *
 * Node identifier: DT_N_S_combos_S_combo_middle_click
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_middle_click_PATH "/combos/combo_middle_click"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_middle_click_FULL_NAME "combo_middle_click"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_middle_click_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_middle_click_CHILD_IDX 35

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_middle_click_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_middle_click_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_middle_click_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_middle_click_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_middle_click_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_middle_click_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_middle_click_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_middle_click_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_middle_click_ORD 53
#define DT_N_S_combos_S_combo_middle_click_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_middle_click_REQUIRES_ORDS \
	29, /* /combos */ \
	51, /* /behaviors/mouse_key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_middle_click_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_middle_click_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_middle_click_REG_NUM 0
#define DT_N_S_combos_S_combo_middle_click_RANGES_NUM 0
#define DT_N_S_combos_S_combo_middle_click_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_middle_click_IRQ_NUM 0
#define DT_N_S_combos_S_combo_middle_click_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_middle_click_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_middle_click_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_middle_click_P_bindings_IDX_0_PH DT_N_S_behaviors_S_mouse_key_press
#define DT_N_S_combos_S_combo_middle_click_P_bindings_IDX_0_VAL_param1 4
#define DT_N_S_combos_S_combo_middle_click_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_middle_click_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_middle_click, bindings, 0)
#define DT_N_S_combos_S_combo_middle_click_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_middle_click, bindings, 0)
#define DT_N_S_combos_S_combo_middle_click_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_middle_click, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_middle_click_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_middle_click, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_middle_click_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_middle_click_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_middle_click_P_key_positions {1 /* 0x1 */, 2 /* 0x2 */, 3 /* 0x3 */}
#define DT_N_S_combos_S_combo_middle_click_P_key_positions_IDX_0 1
#define DT_N_S_combos_S_combo_middle_click_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_middle_click_P_key_positions_IDX_1 2
#define DT_N_S_combos_S_combo_middle_click_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_middle_click_P_key_positions_IDX_2 3
#define DT_N_S_combos_S_combo_middle_click_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_middle_click_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_middle_click, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_middle_click, key_positions, 1) \
	fn(DT_N_S_combos_S_combo_middle_click, key_positions, 2)
#define DT_N_S_combos_S_combo_middle_click_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_middle_click, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_middle_click, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_middle_click, key_positions, 2)
#define DT_N_S_combos_S_combo_middle_click_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_middle_click, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_middle_click, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_middle_click, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_middle_click_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_middle_click, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_middle_click, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_middle_click, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_middle_click_P_key_positions_LEN 3
#define DT_N_S_combos_S_combo_middle_click_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_middle_click_P_timeout_ms 20
#define DT_N_S_combos_S_combo_middle_click_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_middle_click_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_middle_click_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_middle_click_P_slow_release 0
#define DT_N_S_combos_S_combo_middle_click_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_middle_click_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_middle_click_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_middle_click_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_middle_click_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_middle_click, layers, 0)
#define DT_N_S_combos_S_combo_middle_click_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_middle_click, layers, 0)
#define DT_N_S_combos_S_combo_middle_click_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_middle_click, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_middle_click_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_middle_click, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_middle_click_P_layers_LEN 1
#define DT_N_S_combos_S_combo_middle_click_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_minus
 *
 * Node identifier: DT_N_S_combos_S_combo_minus
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_minus_PATH "/combos/combo_minus"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_minus_FULL_NAME "combo_minus"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_minus_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_minus_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_minus_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_minus_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_minus_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_minus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_minus_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_minus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_minus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_minus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_minus_ORD 54
#define DT_N_S_combos_S_combo_minus_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_minus_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_minus_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_minus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_minus_REG_NUM 0
#define DT_N_S_combos_S_combo_minus_RANGES_NUM 0
#define DT_N_S_combos_S_combo_minus_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_minus_IRQ_NUM 0
#define DT_N_S_combos_S_combo_minus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_minus_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_minus_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_minus_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_minus_P_bindings_IDX_0_VAL_param1 458797
#define DT_N_S_combos_S_combo_minus_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_minus_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_minus, bindings, 0)
#define DT_N_S_combos_S_combo_minus_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_minus, bindings, 0)
#define DT_N_S_combos_S_combo_minus_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_minus, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_minus_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_minus, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_minus_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_minus_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_minus_P_key_positions {16 /* 0x10 */, 28 /* 0x1c */}
#define DT_N_S_combos_S_combo_minus_P_key_positions_IDX_0 16
#define DT_N_S_combos_S_combo_minus_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_minus_P_key_positions_IDX_1 28
#define DT_N_S_combos_S_combo_minus_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_minus_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_minus, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_minus, key_positions, 1)
#define DT_N_S_combos_S_combo_minus_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_minus, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_minus, key_positions, 1)
#define DT_N_S_combos_S_combo_minus_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_minus, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_minus, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_minus_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_minus, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_minus, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_minus_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_minus_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_minus_P_timeout_ms 50
#define DT_N_S_combos_S_combo_minus_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_minus_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_minus_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_minus_P_slow_release 0
#define DT_N_S_combos_S_combo_minus_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_minus_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_minus_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_minus_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_minus_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_minus, layers, 0)
#define DT_N_S_combos_S_combo_minus_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_minus, layers, 0)
#define DT_N_S_combos_S_combo_minus_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_minus, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_minus_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_minus, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_minus_P_layers_LEN 1
#define DT_N_S_combos_S_combo_minus_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_nine
 *
 * Node identifier: DT_N_S_combos_S_combo_nine
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_nine_PATH "/combos/combo_nine"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_nine_FULL_NAME "combo_nine"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_nine_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_nine_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_nine_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_nine_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_nine_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_nine_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_nine_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_nine_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_nine_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_nine_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_nine_ORD 55
#define DT_N_S_combos_S_combo_nine_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_nine_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_nine_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_nine_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_nine_REG_NUM 0
#define DT_N_S_combos_S_combo_nine_RANGES_NUM 0
#define DT_N_S_combos_S_combo_nine_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_nine_IRQ_NUM 0
#define DT_N_S_combos_S_combo_nine_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_nine_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_nine_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_nine_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_nine_P_bindings_IDX_0_VAL_param1 458790
#define DT_N_S_combos_S_combo_nine_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_nine_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_nine, bindings, 0)
#define DT_N_S_combos_S_combo_nine_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_nine, bindings, 0)
#define DT_N_S_combos_S_combo_nine_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_nine, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_nine_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_nine, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_nine_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_nine_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_nine_P_key_positions {6 /* 0x6 */, 18 /* 0x12 */}
#define DT_N_S_combos_S_combo_nine_P_key_positions_IDX_0 6
#define DT_N_S_combos_S_combo_nine_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_nine_P_key_positions_IDX_1 18
#define DT_N_S_combos_S_combo_nine_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_nine_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_nine, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_nine, key_positions, 1)
#define DT_N_S_combos_S_combo_nine_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_nine, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_nine, key_positions, 1)
#define DT_N_S_combos_S_combo_nine_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_nine, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_nine, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_nine_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_nine, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_nine, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_nine_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_nine_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_nine_P_timeout_ms 20
#define DT_N_S_combos_S_combo_nine_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_nine_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_nine_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_nine_P_slow_release 0
#define DT_N_S_combos_S_combo_nine_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_nine_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_nine_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_nine_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_nine_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_nine, layers, 0)
#define DT_N_S_combos_S_combo_nine_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_nine, layers, 0)
#define DT_N_S_combos_S_combo_nine_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_nine, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_nine_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_nine, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_nine_P_layers_LEN 1
#define DT_N_S_combos_S_combo_nine_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_one
 *
 * Node identifier: DT_N_S_combos_S_combo_one
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_one_PATH "/combos/combo_one"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_one_FULL_NAME "combo_one"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_one_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_one_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_one_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_one_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_one_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_one_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_one_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_one_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_one_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_one_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_one_ORD 56
#define DT_N_S_combos_S_combo_one_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_one_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_one_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_one_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_one_REG_NUM 0
#define DT_N_S_combos_S_combo_one_RANGES_NUM 0
#define DT_N_S_combos_S_combo_one_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_one_IRQ_NUM 0
#define DT_N_S_combos_S_combo_one_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_one_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_one_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_one_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_one_P_bindings_IDX_0_VAL_param1 458782
#define DT_N_S_combos_S_combo_one_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_one_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_one, bindings, 0)
#define DT_N_S_combos_S_combo_one_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_one, bindings, 0)
#define DT_N_S_combos_S_combo_one_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_one, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_one_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_one, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_one_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_one_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_one_P_key_positions {3 /* 0x3 */, 10 /* 0xa */}
#define DT_N_S_combos_S_combo_one_P_key_positions_IDX_0 3
#define DT_N_S_combos_S_combo_one_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_one_P_key_positions_IDX_1 10
#define DT_N_S_combos_S_combo_one_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_one_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_one, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_one, key_positions, 1)
#define DT_N_S_combos_S_combo_one_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_one, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_one, key_positions, 1)
#define DT_N_S_combos_S_combo_one_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_one, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_one, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_one_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_one, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_one, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_one_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_one_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_one_P_timeout_ms 20
#define DT_N_S_combos_S_combo_one_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_one_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_one_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_one_P_slow_release 0
#define DT_N_S_combos_S_combo_one_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_one_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_one_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_one_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_one_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_one, layers, 0)
#define DT_N_S_combos_S_combo_one_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_one, layers, 0)
#define DT_N_S_combos_S_combo_one_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_one, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_one_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_one, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_one_P_layers_LEN 1
#define DT_N_S_combos_S_combo_one_P_layers_EXISTS 1

/*
 * Devicetree node: /behaviors/outputs
 *
 * Node identifier: DT_N_S_behaviors_S_outputs
 *
 * Binding (compatible = zmk,behavior-outputs):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-outputs.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_outputs_PATH "/behaviors/outputs"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_outputs_FULL_NAME "outputs"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_outputs_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_outputs_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_outputs_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_outputs_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_outputs_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_outputs_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_outputs_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_outputs_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_outputs_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_outputs_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_outputs_ORD 57
#define DT_N_S_behaviors_S_outputs_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_outputs_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_outputs_SUPPORTS_ORDS \
	58, /* /combos/combo_output_bluetooth */ \
	59, /* /combos/combo_output_usb */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_outputs_EXISTS 1
#define DT_N_INST_0_zmk_behavior_outputs DT_N_S_behaviors_S_outputs
#define DT_N_NODELABEL_out               DT_N_S_behaviors_S_outputs

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_outputs_REG_NUM 0
#define DT_N_S_behaviors_S_outputs_RANGES_NUM 0
#define DT_N_S_behaviors_S_outputs_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_outputs_IRQ_NUM 0
#define DT_N_S_behaviors_S_outputs_COMPAT_MATCHES_zmk_behavior_outputs 1
#define DT_N_S_behaviors_S_outputs_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_outputs_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_outputs_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_outputs_COMPAT_MODEL_IDX_0 "behavior-outputs"
#define DT_N_S_behaviors_S_outputs_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_outputs_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /combos/combo_output_bluetooth
 *
 * Node identifier: DT_N_S_combos_S_combo_output_bluetooth
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_output_bluetooth_PATH "/combos/combo_output_bluetooth"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_output_bluetooth_FULL_NAME "combo_output_bluetooth"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_output_bluetooth_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_output_bluetooth_CHILD_IDX 38

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_output_bluetooth_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_output_bluetooth_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_output_bluetooth_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_output_bluetooth_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_output_bluetooth_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_output_bluetooth_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_output_bluetooth_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_output_bluetooth_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_output_bluetooth_ORD 58
#define DT_N_S_combos_S_combo_output_bluetooth_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_output_bluetooth_REQUIRES_ORDS \
	29, /* /combos */ \
	57, /* /behaviors/outputs */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_output_bluetooth_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_output_bluetooth_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_output_bluetooth_REG_NUM 0
#define DT_N_S_combos_S_combo_output_bluetooth_RANGES_NUM 0
#define DT_N_S_combos_S_combo_output_bluetooth_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_output_bluetooth_IRQ_NUM 0
#define DT_N_S_combos_S_combo_output_bluetooth_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_output_bluetooth_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_output_bluetooth_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_output_bluetooth_P_bindings_IDX_0_PH DT_N_S_behaviors_S_outputs
#define DT_N_S_combos_S_combo_output_bluetooth_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_combo_output_bluetooth_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_output_bluetooth_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_output_bluetooth, bindings, 0)
#define DT_N_S_combos_S_combo_output_bluetooth_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_output_bluetooth, bindings, 0)
#define DT_N_S_combos_S_combo_output_bluetooth_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_output_bluetooth, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_output_bluetooth_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_output_bluetooth, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_output_bluetooth_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_output_bluetooth_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_output_bluetooth_P_key_positions {0 /* 0x0 */, 4 /* 0x4 */}
#define DT_N_S_combos_S_combo_output_bluetooth_P_key_positions_IDX_0 0
#define DT_N_S_combos_S_combo_output_bluetooth_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_output_bluetooth_P_key_positions_IDX_1 4
#define DT_N_S_combos_S_combo_output_bluetooth_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_output_bluetooth_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_output_bluetooth, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_output_bluetooth, key_positions, 1)
#define DT_N_S_combos_S_combo_output_bluetooth_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_output_bluetooth, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_output_bluetooth, key_positions, 1)
#define DT_N_S_combos_S_combo_output_bluetooth_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_output_bluetooth, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_output_bluetooth, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_output_bluetooth_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_output_bluetooth, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_output_bluetooth, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_output_bluetooth_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_output_bluetooth_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_output_bluetooth_P_timeout_ms 20
#define DT_N_S_combos_S_combo_output_bluetooth_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_output_bluetooth_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_output_bluetooth_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_output_bluetooth_P_slow_release 0
#define DT_N_S_combos_S_combo_output_bluetooth_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_output_bluetooth_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_output_bluetooth_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_output_bluetooth_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_output_bluetooth_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_output_bluetooth, layers, 0)
#define DT_N_S_combos_S_combo_output_bluetooth_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_output_bluetooth, layers, 0)
#define DT_N_S_combos_S_combo_output_bluetooth_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_output_bluetooth, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_output_bluetooth_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_output_bluetooth, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_output_bluetooth_P_layers_LEN 1
#define DT_N_S_combos_S_combo_output_bluetooth_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_output_usb
 *
 * Node identifier: DT_N_S_combos_S_combo_output_usb
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_output_usb_PATH "/combos/combo_output_usb"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_output_usb_FULL_NAME "combo_output_usb"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_output_usb_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_output_usb_CHILD_IDX 39

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_output_usb_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_output_usb_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_output_usb_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_output_usb_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_output_usb_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_output_usb_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_output_usb_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_output_usb_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_output_usb_ORD 59
#define DT_N_S_combos_S_combo_output_usb_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_output_usb_REQUIRES_ORDS \
	29, /* /combos */ \
	57, /* /behaviors/outputs */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_output_usb_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_output_usb_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_output_usb_REG_NUM 0
#define DT_N_S_combos_S_combo_output_usb_RANGES_NUM 0
#define DT_N_S_combos_S_combo_output_usb_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_output_usb_IRQ_NUM 0
#define DT_N_S_combos_S_combo_output_usb_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_output_usb_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_output_usb_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_output_usb_P_bindings_IDX_0_PH DT_N_S_behaviors_S_outputs
#define DT_N_S_combos_S_combo_output_usb_P_bindings_IDX_0_VAL_param1 1
#define DT_N_S_combos_S_combo_output_usb_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_output_usb_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_output_usb, bindings, 0)
#define DT_N_S_combos_S_combo_output_usb_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_output_usb, bindings, 0)
#define DT_N_S_combos_S_combo_output_usb_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_output_usb, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_output_usb_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_output_usb, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_output_usb_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_output_usb_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_output_usb_P_key_positions {10 /* 0xa */, 14 /* 0xe */}
#define DT_N_S_combos_S_combo_output_usb_P_key_positions_IDX_0 10
#define DT_N_S_combos_S_combo_output_usb_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_output_usb_P_key_positions_IDX_1 14
#define DT_N_S_combos_S_combo_output_usb_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_output_usb_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_output_usb, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_output_usb, key_positions, 1)
#define DT_N_S_combos_S_combo_output_usb_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_output_usb, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_output_usb, key_positions, 1)
#define DT_N_S_combos_S_combo_output_usb_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_output_usb, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_output_usb, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_output_usb_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_output_usb, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_output_usb, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_output_usb_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_output_usb_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_output_usb_P_timeout_ms 20
#define DT_N_S_combos_S_combo_output_usb_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_output_usb_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_output_usb_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_output_usb_P_slow_release 0
#define DT_N_S_combos_S_combo_output_usb_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_output_usb_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_output_usb_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_output_usb_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_output_usb_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_output_usb, layers, 0)
#define DT_N_S_combos_S_combo_output_usb_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_output_usb, layers, 0)
#define DT_N_S_combos_S_combo_output_usb_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_output_usb, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_output_usb_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_output_usb, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_output_usb_P_layers_LEN 1
#define DT_N_S_combos_S_combo_output_usb_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_page_down
 *
 * Node identifier: DT_N_S_combos_S_combo_page_down
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_page_down_PATH "/combos/combo_page_down"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_page_down_FULL_NAME "combo_page_down"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_page_down_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_page_down_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_page_down_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_page_down_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_page_down_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_page_down_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_page_down_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_page_down_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_page_down_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_page_down_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_page_down_ORD 60
#define DT_N_S_combos_S_combo_page_down_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_page_down_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_page_down_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_page_down_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_page_down_REG_NUM 0
#define DT_N_S_combos_S_combo_page_down_RANGES_NUM 0
#define DT_N_S_combos_S_combo_page_down_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_page_down_IRQ_NUM 0
#define DT_N_S_combos_S_combo_page_down_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_page_down_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_page_down_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_page_down_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_page_down_P_bindings_IDX_0_VAL_param1 458830
#define DT_N_S_combos_S_combo_page_down_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_page_down_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_page_down, bindings, 0)
#define DT_N_S_combos_S_combo_page_down_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_page_down, bindings, 0)
#define DT_N_S_combos_S_combo_page_down_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_page_down, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_page_down_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_page_down, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_page_down_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_page_down_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_page_down_P_key_positions {19 /* 0x13 */, 26 /* 0x1a */}
#define DT_N_S_combos_S_combo_page_down_P_key_positions_IDX_0 19
#define DT_N_S_combos_S_combo_page_down_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_page_down_P_key_positions_IDX_1 26
#define DT_N_S_combos_S_combo_page_down_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_page_down_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_page_down, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_page_down, key_positions, 1)
#define DT_N_S_combos_S_combo_page_down_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_page_down, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_page_down, key_positions, 1)
#define DT_N_S_combos_S_combo_page_down_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_page_down, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_page_down, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_page_down_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_page_down, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_page_down, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_page_down_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_page_down_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_page_down_P_timeout_ms 20
#define DT_N_S_combos_S_combo_page_down_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_page_down_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_page_down_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_page_down_P_slow_release 0
#define DT_N_S_combos_S_combo_page_down_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_page_down_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_page_down_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_page_down_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_page_down_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_page_down, layers, 0)
#define DT_N_S_combos_S_combo_page_down_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_page_down, layers, 0)
#define DT_N_S_combos_S_combo_page_down_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_page_down, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_page_down_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_page_down, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_page_down_P_layers_LEN 1
#define DT_N_S_combos_S_combo_page_down_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_page_up
 *
 * Node identifier: DT_N_S_combos_S_combo_page_up
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_page_up_PATH "/combos/combo_page_up"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_page_up_FULL_NAME "combo_page_up"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_page_up_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_page_up_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_page_up_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_page_up_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_page_up_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_page_up_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_page_up_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_page_up_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_page_up_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_page_up_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_page_up_ORD 61
#define DT_N_S_combos_S_combo_page_up_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_page_up_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_page_up_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_page_up_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_page_up_REG_NUM 0
#define DT_N_S_combos_S_combo_page_up_RANGES_NUM 0
#define DT_N_S_combos_S_combo_page_up_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_page_up_IRQ_NUM 0
#define DT_N_S_combos_S_combo_page_up_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_page_up_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_page_up_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_page_up_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_page_up_P_bindings_IDX_0_VAL_param1 458827
#define DT_N_S_combos_S_combo_page_up_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_page_up_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_page_up, bindings, 0)
#define DT_N_S_combos_S_combo_page_up_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_page_up, bindings, 0)
#define DT_N_S_combos_S_combo_page_up_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_page_up, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_page_up_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_page_up, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_page_up_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_page_up_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_page_up_P_key_positions {19 /* 0x13 */, 27 /* 0x1b */}
#define DT_N_S_combos_S_combo_page_up_P_key_positions_IDX_0 19
#define DT_N_S_combos_S_combo_page_up_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_page_up_P_key_positions_IDX_1 27
#define DT_N_S_combos_S_combo_page_up_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_page_up_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_page_up, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_page_up, key_positions, 1)
#define DT_N_S_combos_S_combo_page_up_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_page_up, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_page_up, key_positions, 1)
#define DT_N_S_combos_S_combo_page_up_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_page_up, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_page_up, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_page_up_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_page_up, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_page_up, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_page_up_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_page_up_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_page_up_P_timeout_ms 20
#define DT_N_S_combos_S_combo_page_up_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_page_up_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_page_up_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_page_up_P_slow_release 0
#define DT_N_S_combos_S_combo_page_up_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_page_up_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_page_up_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_page_up_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_page_up_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_page_up, layers, 0)
#define DT_N_S_combos_S_combo_page_up_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_page_up, layers, 0)
#define DT_N_S_combos_S_combo_page_up_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_page_up, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_page_up_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_page_up, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_page_up_P_layers_LEN 1
#define DT_N_S_combos_S_combo_page_up_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_printscreen
 *
 * Node identifier: DT_N_S_combos_S_combo_printscreen
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_printscreen_PATH "/combos/combo_printscreen"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_printscreen_FULL_NAME "combo_printscreen"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_printscreen_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_printscreen_CHILD_IDX 32

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_printscreen_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_printscreen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_printscreen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_printscreen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_printscreen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_printscreen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_printscreen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_printscreen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_printscreen_ORD 62
#define DT_N_S_combos_S_combo_printscreen_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_printscreen_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_printscreen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_printscreen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_printscreen_REG_NUM 0
#define DT_N_S_combos_S_combo_printscreen_RANGES_NUM 0
#define DT_N_S_combos_S_combo_printscreen_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_printscreen_IRQ_NUM 0
#define DT_N_S_combos_S_combo_printscreen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_printscreen_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_printscreen_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_printscreen_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_printscreen_P_bindings_IDX_0_VAL_param1 458822
#define DT_N_S_combos_S_combo_printscreen_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_printscreen_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_printscreen, bindings, 0)
#define DT_N_S_combos_S_combo_printscreen_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_printscreen, bindings, 0)
#define DT_N_S_combos_S_combo_printscreen_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_printscreen, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_printscreen_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_printscreen, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_printscreen_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_printscreen_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_printscreen_P_key_positions {7 /* 0x7 */, 8 /* 0x8 */, 9 /* 0x9 */}
#define DT_N_S_combos_S_combo_printscreen_P_key_positions_IDX_0 7
#define DT_N_S_combos_S_combo_printscreen_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_printscreen_P_key_positions_IDX_1 8
#define DT_N_S_combos_S_combo_printscreen_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_printscreen_P_key_positions_IDX_2 9
#define DT_N_S_combos_S_combo_printscreen_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_printscreen_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_printscreen, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_printscreen, key_positions, 1) \
	fn(DT_N_S_combos_S_combo_printscreen, key_positions, 2)
#define DT_N_S_combos_S_combo_printscreen_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_printscreen, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_printscreen, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_printscreen, key_positions, 2)
#define DT_N_S_combos_S_combo_printscreen_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_printscreen, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_printscreen, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_printscreen, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_printscreen_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_printscreen, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_printscreen, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_printscreen, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_printscreen_P_key_positions_LEN 3
#define DT_N_S_combos_S_combo_printscreen_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_printscreen_P_timeout_ms 20
#define DT_N_S_combos_S_combo_printscreen_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_printscreen_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_printscreen_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_printscreen_P_slow_release 0
#define DT_N_S_combos_S_combo_printscreen_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_printscreen_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_printscreen_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_printscreen_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_printscreen_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_printscreen, layers, 0)
#define DT_N_S_combos_S_combo_printscreen_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_printscreen, layers, 0)
#define DT_N_S_combos_S_combo_printscreen_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_printscreen, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_printscreen_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_printscreen, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_printscreen_P_layers_LEN 1
#define DT_N_S_combos_S_combo_printscreen_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_right
 *
 * Node identifier: DT_N_S_combos_S_combo_right
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_right_PATH "/combos/combo_right"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_right_FULL_NAME "combo_right"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_right_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_right_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_right_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_right_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_right_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_right_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_right_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_right_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_right_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_right_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_right_ORD 63
#define DT_N_S_combos_S_combo_right_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_right_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_right_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_right_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_right_REG_NUM 0
#define DT_N_S_combos_S_combo_right_RANGES_NUM 0
#define DT_N_S_combos_S_combo_right_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_right_IRQ_NUM 0
#define DT_N_S_combos_S_combo_right_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_right_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_right_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_right_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_right_P_bindings_IDX_0_VAL_param1 458831
#define DT_N_S_combos_S_combo_right_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_right_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_right, bindings, 0)
#define DT_N_S_combos_S_combo_right_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_right, bindings, 0)
#define DT_N_S_combos_S_combo_right_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_right, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_right, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_right_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_right_P_key_positions {19 /* 0x13 */, 18 /* 0x12 */}
#define DT_N_S_combos_S_combo_right_P_key_positions_IDX_0 19
#define DT_N_S_combos_S_combo_right_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_right_P_key_positions_IDX_1 18
#define DT_N_S_combos_S_combo_right_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_right_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_right, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_right, key_positions, 1)
#define DT_N_S_combos_S_combo_right_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_right, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_right, key_positions, 1)
#define DT_N_S_combos_S_combo_right_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_right, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_right, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_right, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_right, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_right_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_right_P_timeout_ms 20
#define DT_N_S_combos_S_combo_right_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_right_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_right_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_right_P_slow_release 0
#define DT_N_S_combos_S_combo_right_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_right_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_right_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_right_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_right_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_right, layers, 0)
#define DT_N_S_combos_S_combo_right_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_right, layers, 0)
#define DT_N_S_combos_S_combo_right_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_right, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_right, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_P_layers_LEN 1
#define DT_N_S_combos_S_combo_right_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_right_bracket
 *
 * Node identifier: DT_N_S_combos_S_combo_right_bracket
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_right_bracket_PATH "/combos/combo_right_bracket"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_right_bracket_FULL_NAME "combo_right_bracket"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_right_bracket_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_right_bracket_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_right_bracket_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_right_bracket_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_right_bracket_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_right_bracket_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_right_bracket_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_right_bracket_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_right_bracket_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_right_bracket_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_right_bracket_ORD 64
#define DT_N_S_combos_S_combo_right_bracket_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_right_bracket_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_right_bracket_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_right_bracket_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_right_bracket_REG_NUM 0
#define DT_N_S_combos_S_combo_right_bracket_RANGES_NUM 0
#define DT_N_S_combos_S_combo_right_bracket_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_right_bracket_IRQ_NUM 0
#define DT_N_S_combos_S_combo_right_bracket_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_right_bracket_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_right_bracket_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_right_bracket_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_right_bracket_P_bindings_IDX_0_VAL_param1 458800
#define DT_N_S_combos_S_combo_right_bracket_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_right_bracket_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_right_bracket, bindings, 0)
#define DT_N_S_combos_S_combo_right_bracket_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_right_bracket, bindings, 0)
#define DT_N_S_combos_S_combo_right_bracket_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_right_bracket, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_bracket_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_right_bracket, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_bracket_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_right_bracket_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_right_bracket_P_key_positions {6 /* 0x6 */, 9 /* 0x9 */}
#define DT_N_S_combos_S_combo_right_bracket_P_key_positions_IDX_0 6
#define DT_N_S_combos_S_combo_right_bracket_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_right_bracket_P_key_positions_IDX_1 9
#define DT_N_S_combos_S_combo_right_bracket_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_right_bracket_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_right_bracket, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_right_bracket, key_positions, 1)
#define DT_N_S_combos_S_combo_right_bracket_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_right_bracket, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_right_bracket, key_positions, 1)
#define DT_N_S_combos_S_combo_right_bracket_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_right_bracket, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_right_bracket, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_bracket_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_right_bracket, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_right_bracket, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_bracket_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_right_bracket_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_right_bracket_P_timeout_ms 20
#define DT_N_S_combos_S_combo_right_bracket_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_right_bracket_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_right_bracket_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_right_bracket_P_slow_release 0
#define DT_N_S_combos_S_combo_right_bracket_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_right_bracket_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_right_bracket_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_right_bracket_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_right_bracket_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_right_bracket, layers, 0)
#define DT_N_S_combos_S_combo_right_bracket_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_right_bracket, layers, 0)
#define DT_N_S_combos_S_combo_right_bracket_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_right_bracket, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_bracket_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_right_bracket, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_bracket_P_layers_LEN 1
#define DT_N_S_combos_S_combo_right_bracket_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_right_click
 *
 * Node identifier: DT_N_S_combos_S_combo_right_click
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_right_click_PATH "/combos/combo_right_click"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_right_click_FULL_NAME "combo_right_click"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_right_click_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_right_click_CHILD_IDX 34

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_right_click_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_right_click_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_right_click_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_right_click_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_right_click_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_right_click_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_right_click_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_right_click_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_right_click_ORD 65
#define DT_N_S_combos_S_combo_right_click_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_right_click_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_right_click_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_right_click_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_right_click_REG_NUM 0
#define DT_N_S_combos_S_combo_right_click_RANGES_NUM 0
#define DT_N_S_combos_S_combo_right_click_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_right_click_IRQ_NUM 0
#define DT_N_S_combos_S_combo_right_click_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_right_click_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_right_click_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_right_click_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_right_click_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_combo_right_click_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_right_click_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_right_click, bindings, 0)
#define DT_N_S_combos_S_combo_right_click_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_right_click, bindings, 0)
#define DT_N_S_combos_S_combo_right_click_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_right_click, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_click_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_right_click, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_click_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_right_click_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_right_click_P_key_positions {2 /* 0x2 */, 3 /* 0x3 */}
#define DT_N_S_combos_S_combo_right_click_P_key_positions_IDX_0 2
#define DT_N_S_combos_S_combo_right_click_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_right_click_P_key_positions_IDX_1 3
#define DT_N_S_combos_S_combo_right_click_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_right_click_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_right_click, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_right_click, key_positions, 1)
#define DT_N_S_combos_S_combo_right_click_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_right_click, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_right_click, key_positions, 1)
#define DT_N_S_combos_S_combo_right_click_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_right_click, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_right_click, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_click_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_right_click, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_right_click, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_click_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_right_click_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_right_click_P_timeout_ms 20
#define DT_N_S_combos_S_combo_right_click_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_right_click_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_right_click_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_right_click_P_slow_release 0
#define DT_N_S_combos_S_combo_right_click_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_right_click_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_right_click_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_right_click_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_right_click_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_right_click, layers, 0)
#define DT_N_S_combos_S_combo_right_click_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_right_click, layers, 0)
#define DT_N_S_combos_S_combo_right_click_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_right_click, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_click_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_right_click, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_right_click_P_layers_LEN 1
#define DT_N_S_combos_S_combo_right_click_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_seven
 *
 * Node identifier: DT_N_S_combos_S_combo_seven
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_seven_PATH "/combos/combo_seven"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_seven_FULL_NAME "combo_seven"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_seven_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_seven_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_seven_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_seven_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_seven_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_seven_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_seven_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_seven_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_seven_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_seven_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_seven_ORD 66
#define DT_N_S_combos_S_combo_seven_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_seven_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_seven_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_seven_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_seven_REG_NUM 0
#define DT_N_S_combos_S_combo_seven_RANGES_NUM 0
#define DT_N_S_combos_S_combo_seven_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_seven_IRQ_NUM 0
#define DT_N_S_combos_S_combo_seven_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_seven_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_seven_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_seven_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_seven_P_bindings_IDX_0_VAL_param1 458788
#define DT_N_S_combos_S_combo_seven_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_seven_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_seven, bindings, 0)
#define DT_N_S_combos_S_combo_seven_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_seven, bindings, 0)
#define DT_N_S_combos_S_combo_seven_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_seven, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_seven_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_seven, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_seven_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_seven_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_seven_P_key_positions {7 /* 0x7 */, 16 /* 0x10 */}
#define DT_N_S_combos_S_combo_seven_P_key_positions_IDX_0 7
#define DT_N_S_combos_S_combo_seven_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_seven_P_key_positions_IDX_1 16
#define DT_N_S_combos_S_combo_seven_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_seven_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_seven, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_seven, key_positions, 1)
#define DT_N_S_combos_S_combo_seven_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_seven, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_seven, key_positions, 1)
#define DT_N_S_combos_S_combo_seven_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_seven, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_seven, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_seven_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_seven, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_seven, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_seven_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_seven_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_seven_P_timeout_ms 20
#define DT_N_S_combos_S_combo_seven_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_seven_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_seven_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_seven_P_slow_release 0
#define DT_N_S_combos_S_combo_seven_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_seven_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_seven_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_seven_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_seven_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_seven, layers, 0)
#define DT_N_S_combos_S_combo_seven_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_seven, layers, 0)
#define DT_N_S_combos_S_combo_seven_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_seven, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_seven_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_seven, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_seven_P_layers_LEN 1
#define DT_N_S_combos_S_combo_seven_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_singe_quote
 *
 * Node identifier: DT_N_S_combos_S_combo_singe_quote
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_singe_quote_PATH "/combos/combo_singe_quote"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_singe_quote_FULL_NAME "combo_singe_quote"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_singe_quote_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_singe_quote_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_singe_quote_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_singe_quote_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_singe_quote_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_singe_quote_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_singe_quote_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_singe_quote_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_singe_quote_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_singe_quote_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_singe_quote_ORD 67
#define DT_N_S_combos_S_combo_singe_quote_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_singe_quote_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_singe_quote_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_singe_quote_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_singe_quote_REG_NUM 0
#define DT_N_S_combos_S_combo_singe_quote_RANGES_NUM 0
#define DT_N_S_combos_S_combo_singe_quote_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_singe_quote_IRQ_NUM 0
#define DT_N_S_combos_S_combo_singe_quote_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_singe_quote_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_singe_quote_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_singe_quote_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_singe_quote_P_bindings_IDX_0_VAL_param1 458804
#define DT_N_S_combos_S_combo_singe_quote_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_singe_quote_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_singe_quote, bindings, 0)
#define DT_N_S_combos_S_combo_singe_quote_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_singe_quote, bindings, 0)
#define DT_N_S_combos_S_combo_singe_quote_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_singe_quote, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_singe_quote_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_singe_quote, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_singe_quote_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_singe_quote_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_singe_quote_P_key_positions {9 /* 0x9 */, 16 /* 0x10 */}
#define DT_N_S_combos_S_combo_singe_quote_P_key_positions_IDX_0 9
#define DT_N_S_combos_S_combo_singe_quote_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_singe_quote_P_key_positions_IDX_1 16
#define DT_N_S_combos_S_combo_singe_quote_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_singe_quote_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_singe_quote, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_singe_quote, key_positions, 1)
#define DT_N_S_combos_S_combo_singe_quote_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_singe_quote, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_singe_quote, key_positions, 1)
#define DT_N_S_combos_S_combo_singe_quote_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_singe_quote, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_singe_quote, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_singe_quote_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_singe_quote, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_singe_quote, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_singe_quote_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_singe_quote_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_singe_quote_P_timeout_ms 20
#define DT_N_S_combos_S_combo_singe_quote_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_singe_quote_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_singe_quote_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_singe_quote_P_slow_release 0
#define DT_N_S_combos_S_combo_singe_quote_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_singe_quote_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_singe_quote_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_singe_quote_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_singe_quote_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_singe_quote, layers, 0)
#define DT_N_S_combos_S_combo_singe_quote_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_singe_quote, layers, 0)
#define DT_N_S_combos_S_combo_singe_quote_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_singe_quote, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_singe_quote_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_singe_quote, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_singe_quote_P_layers_LEN 1
#define DT_N_S_combos_S_combo_singe_quote_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_six
 *
 * Node identifier: DT_N_S_combos_S_combo_six
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_six_PATH "/combos/combo_six"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_six_FULL_NAME "combo_six"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_six_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_six_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_six_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_six_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_six_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_six_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_six_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_six_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_six_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_six_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_six_ORD 68
#define DT_N_S_combos_S_combo_six_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_six_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_six_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_six_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_six_REG_NUM 0
#define DT_N_S_combos_S_combo_six_RANGES_NUM 0
#define DT_N_S_combos_S_combo_six_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_six_IRQ_NUM 0
#define DT_N_S_combos_S_combo_six_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_six_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_six_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_six_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_six_P_bindings_IDX_0_VAL_param1 458787
#define DT_N_S_combos_S_combo_six_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_six_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_six, bindings, 0)
#define DT_N_S_combos_S_combo_six_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_six, bindings, 0)
#define DT_N_S_combos_S_combo_six_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_six, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_six_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_six, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_six_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_six_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_six_P_key_positions {7 /* 0x7 */, 15 /* 0xf */}
#define DT_N_S_combos_S_combo_six_P_key_positions_IDX_0 7
#define DT_N_S_combos_S_combo_six_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_six_P_key_positions_IDX_1 15
#define DT_N_S_combos_S_combo_six_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_six_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_six, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_six, key_positions, 1)
#define DT_N_S_combos_S_combo_six_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_six, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_six, key_positions, 1)
#define DT_N_S_combos_S_combo_six_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_six, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_six, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_six_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_six, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_six, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_six_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_six_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_six_P_timeout_ms 20
#define DT_N_S_combos_S_combo_six_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_six_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_six_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_six_P_slow_release 0
#define DT_N_S_combos_S_combo_six_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_six_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_six_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_six_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_six_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_six, layers, 0)
#define DT_N_S_combos_S_combo_six_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_six, layers, 0)
#define DT_N_S_combos_S_combo_six_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_six, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_six_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_six, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_six_P_layers_LEN 1
#define DT_N_S_combos_S_combo_six_P_layers_EXISTS 1

/*
 * Devicetree node: /behaviors/bootload
 *
 * Node identifier: DT_N_S_behaviors_S_bootload
 *
 * Binding (compatible = zmk,behavior-reset):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-reset.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_bootload_PATH "/behaviors/bootload"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_bootload_FULL_NAME "bootload"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_bootload_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_bootload_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_bootload_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_bootload_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bootload_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bootload_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_bootload_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_bootload_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bootload_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bootload_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_bootload_ORD 69
#define DT_N_S_behaviors_S_bootload_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_bootload_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_bootload_SUPPORTS_ORDS \
	70, /* /combos/combo_sys_reset_left */ \
	71, /* /combos/combo_sys_reset_right */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_bootload_EXISTS 1
#define DT_N_INST_1_zmk_behavior_reset DT_N_S_behaviors_S_bootload
#define DT_N_NODELABEL_bootloader      DT_N_S_behaviors_S_bootload

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_bootload_REG_NUM 0
#define DT_N_S_behaviors_S_bootload_RANGES_NUM 0
#define DT_N_S_behaviors_S_bootload_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_bootload_IRQ_NUM 0
#define DT_N_S_behaviors_S_bootload_COMPAT_MATCHES_zmk_behavior_reset 1
#define DT_N_S_behaviors_S_bootload_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bootload_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_bootload_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bootload_COMPAT_MODEL_IDX_0 "behavior-reset"
#define DT_N_S_behaviors_S_bootload_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_bootload_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_bootload_P_type 87
#define DT_N_S_behaviors_S_bootload_P_type_EXISTS 1

/*
 * Devicetree node: /combos/combo_sys_reset_left
 *
 * Node identifier: DT_N_S_combos_S_combo_sys_reset_left
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_sys_reset_left_PATH "/combos/combo_sys_reset_left"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_sys_reset_left_FULL_NAME "combo_sys_reset_left"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_sys_reset_left_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_sys_reset_left_CHILD_IDX 40

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_sys_reset_left_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_sys_reset_left_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_sys_reset_left_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_sys_reset_left_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_sys_reset_left_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_sys_reset_left_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_sys_reset_left_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_sys_reset_left_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_sys_reset_left_ORD 70
#define DT_N_S_combos_S_combo_sys_reset_left_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_sys_reset_left_REQUIRES_ORDS \
	29, /* /combos */ \
	69, /* /behaviors/bootload */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_sys_reset_left_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_sys_reset_left_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_sys_reset_left_REG_NUM 0
#define DT_N_S_combos_S_combo_sys_reset_left_RANGES_NUM 0
#define DT_N_S_combos_S_combo_sys_reset_left_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_sys_reset_left_IRQ_NUM 0
#define DT_N_S_combos_S_combo_sys_reset_left_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_sys_reset_left_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_sys_reset_left_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_left_P_bindings_IDX_0_PH DT_N_S_behaviors_S_bootload
#define DT_N_S_combos_S_combo_sys_reset_left_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_sys_reset_left, bindings, 0)
#define DT_N_S_combos_S_combo_sys_reset_left_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_sys_reset_left, bindings, 0)
#define DT_N_S_combos_S_combo_sys_reset_left_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_sys_reset_left, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_sys_reset_left_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_sys_reset_left, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_sys_reset_left_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_sys_reset_left_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_left_P_key_positions {20 /* 0x14 */, 24 /* 0x18 */}
#define DT_N_S_combos_S_combo_sys_reset_left_P_key_positions_IDX_0 20
#define DT_N_S_combos_S_combo_sys_reset_left_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_left_P_key_positions_IDX_1 24
#define DT_N_S_combos_S_combo_sys_reset_left_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_left_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_sys_reset_left, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_sys_reset_left, key_positions, 1)
#define DT_N_S_combos_S_combo_sys_reset_left_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_sys_reset_left, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_sys_reset_left, key_positions, 1)
#define DT_N_S_combos_S_combo_sys_reset_left_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_sys_reset_left, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_sys_reset_left, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_sys_reset_left_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_sys_reset_left, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_sys_reset_left, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_sys_reset_left_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_sys_reset_left_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_left_P_timeout_ms 50
#define DT_N_S_combos_S_combo_sys_reset_left_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_left_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_sys_reset_left_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_left_P_slow_release 0
#define DT_N_S_combos_S_combo_sys_reset_left_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_left_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_sys_reset_left_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_sys_reset_left_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_left_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_sys_reset_left, layers, 0)
#define DT_N_S_combos_S_combo_sys_reset_left_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_sys_reset_left, layers, 0)
#define DT_N_S_combos_S_combo_sys_reset_left_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_sys_reset_left, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_sys_reset_left_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_sys_reset_left, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_sys_reset_left_P_layers_LEN 1
#define DT_N_S_combos_S_combo_sys_reset_left_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_sys_reset_right
 *
 * Node identifier: DT_N_S_combos_S_combo_sys_reset_right
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_sys_reset_right_PATH "/combos/combo_sys_reset_right"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_sys_reset_right_FULL_NAME "combo_sys_reset_right"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_sys_reset_right_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_sys_reset_right_CHILD_IDX 41

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_sys_reset_right_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_sys_reset_right_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_sys_reset_right_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_sys_reset_right_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_sys_reset_right_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_sys_reset_right_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_sys_reset_right_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_sys_reset_right_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_sys_reset_right_ORD 71
#define DT_N_S_combos_S_combo_sys_reset_right_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_sys_reset_right_REQUIRES_ORDS \
	29, /* /combos */ \
	69, /* /behaviors/bootload */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_sys_reset_right_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_sys_reset_right_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_sys_reset_right_REG_NUM 0
#define DT_N_S_combos_S_combo_sys_reset_right_RANGES_NUM 0
#define DT_N_S_combos_S_combo_sys_reset_right_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_sys_reset_right_IRQ_NUM 0
#define DT_N_S_combos_S_combo_sys_reset_right_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_sys_reset_right_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_sys_reset_right_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_right_P_bindings_IDX_0_PH DT_N_S_behaviors_S_bootload
#define DT_N_S_combos_S_combo_sys_reset_right_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_sys_reset_right, bindings, 0)
#define DT_N_S_combos_S_combo_sys_reset_right_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_sys_reset_right, bindings, 0)
#define DT_N_S_combos_S_combo_sys_reset_right_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_sys_reset_right, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_sys_reset_right_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_sys_reset_right, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_sys_reset_right_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_sys_reset_right_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_right_P_key_positions {25 /* 0x19 */, 29 /* 0x1d */}
#define DT_N_S_combos_S_combo_sys_reset_right_P_key_positions_IDX_0 25
#define DT_N_S_combos_S_combo_sys_reset_right_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_right_P_key_positions_IDX_1 29
#define DT_N_S_combos_S_combo_sys_reset_right_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_right_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_sys_reset_right, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_sys_reset_right, key_positions, 1)
#define DT_N_S_combos_S_combo_sys_reset_right_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_sys_reset_right, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_sys_reset_right, key_positions, 1)
#define DT_N_S_combos_S_combo_sys_reset_right_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_sys_reset_right, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_sys_reset_right, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_sys_reset_right_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_sys_reset_right, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_sys_reset_right, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_sys_reset_right_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_sys_reset_right_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_right_P_timeout_ms 50
#define DT_N_S_combos_S_combo_sys_reset_right_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_right_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_sys_reset_right_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_right_P_slow_release 0
#define DT_N_S_combos_S_combo_sys_reset_right_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_right_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_sys_reset_right_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_sys_reset_right_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_sys_reset_right_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_sys_reset_right, layers, 0)
#define DT_N_S_combos_S_combo_sys_reset_right_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_sys_reset_right, layers, 0)
#define DT_N_S_combos_S_combo_sys_reset_right_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_sys_reset_right, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_sys_reset_right_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_sys_reset_right, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_sys_reset_right_P_layers_LEN 1
#define DT_N_S_combos_S_combo_sys_reset_right_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_tab
 *
 * Node identifier: DT_N_S_combos_S_combo_tab
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_tab_PATH "/combos/combo_tab"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_tab_FULL_NAME "combo_tab"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_tab_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_tab_CHILD_IDX 26

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_tab_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_tab_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_tab_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_tab_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_tab_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_tab_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_tab_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_tab_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_tab_ORD 72
#define DT_N_S_combos_S_combo_tab_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_tab_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_tab_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_tab_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_tab_REG_NUM 0
#define DT_N_S_combos_S_combo_tab_RANGES_NUM 0
#define DT_N_S_combos_S_combo_tab_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_tab_IRQ_NUM 0
#define DT_N_S_combos_S_combo_tab_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_tab_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_tab_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_tab_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_tab_P_bindings_IDX_0_VAL_param1 458795
#define DT_N_S_combos_S_combo_tab_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_tab_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_tab, bindings, 0)
#define DT_N_S_combos_S_combo_tab_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_tab, bindings, 0)
#define DT_N_S_combos_S_combo_tab_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_tab, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_tab_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_tab, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_tab_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_tab_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_tab_P_key_positions {10 /* 0xa */, 11 /* 0xb */}
#define DT_N_S_combos_S_combo_tab_P_key_positions_IDX_0 10
#define DT_N_S_combos_S_combo_tab_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_tab_P_key_positions_IDX_1 11
#define DT_N_S_combos_S_combo_tab_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_tab_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_tab, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_tab, key_positions, 1)
#define DT_N_S_combos_S_combo_tab_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_tab, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_tab, key_positions, 1)
#define DT_N_S_combos_S_combo_tab_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_tab, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_tab, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_tab_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_tab, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_tab, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_tab_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_tab_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_tab_P_timeout_ms 20
#define DT_N_S_combos_S_combo_tab_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_tab_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_tab_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_tab_P_slow_release 0
#define DT_N_S_combos_S_combo_tab_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_tab_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_tab_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_tab_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_tab_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_tab, layers, 0)
#define DT_N_S_combos_S_combo_tab_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_tab, layers, 0)
#define DT_N_S_combos_S_combo_tab_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_tab, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_tab_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_tab, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_tab_P_layers_LEN 1
#define DT_N_S_combos_S_combo_tab_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_three
 *
 * Node identifier: DT_N_S_combos_S_combo_three
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_three_PATH "/combos/combo_three"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_three_FULL_NAME "combo_three"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_three_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_three_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_three_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_three_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_three_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_three_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_three_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_three_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_three_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_three_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_three_ORD 73
#define DT_N_S_combos_S_combo_three_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_three_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_three_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_three_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_three_REG_NUM 0
#define DT_N_S_combos_S_combo_three_RANGES_NUM 0
#define DT_N_S_combos_S_combo_three_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_three_IRQ_NUM 0
#define DT_N_S_combos_S_combo_three_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_three_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_three_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_three_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_three_P_bindings_IDX_0_VAL_param1 458784
#define DT_N_S_combos_S_combo_three_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_three_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_three, bindings, 0)
#define DT_N_S_combos_S_combo_three_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_three, bindings, 0)
#define DT_N_S_combos_S_combo_three_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_three, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_three_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_three, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_three_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_three_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_three_P_key_positions {3 /* 0x3 */, 12 /* 0xc */}
#define DT_N_S_combos_S_combo_three_P_key_positions_IDX_0 3
#define DT_N_S_combos_S_combo_three_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_three_P_key_positions_IDX_1 12
#define DT_N_S_combos_S_combo_three_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_three_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_three, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_three, key_positions, 1)
#define DT_N_S_combos_S_combo_three_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_three, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_three, key_positions, 1)
#define DT_N_S_combos_S_combo_three_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_three, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_three, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_three_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_three, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_three, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_three_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_three_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_three_P_timeout_ms 20
#define DT_N_S_combos_S_combo_three_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_three_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_three_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_three_P_slow_release 0
#define DT_N_S_combos_S_combo_three_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_three_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_three_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_three_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_three_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_three, layers, 0)
#define DT_N_S_combos_S_combo_three_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_three, layers, 0)
#define DT_N_S_combos_S_combo_three_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_three, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_three_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_three, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_three_P_layers_LEN 1
#define DT_N_S_combos_S_combo_three_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_two
 *
 * Node identifier: DT_N_S_combos_S_combo_two
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_two_PATH "/combos/combo_two"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_two_FULL_NAME "combo_two"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_two_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_two_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_two_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_two_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_two_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_two_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_two_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_two_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_two_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_two_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_two_ORD 74
#define DT_N_S_combos_S_combo_two_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_two_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_two_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_two_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_two_REG_NUM 0
#define DT_N_S_combos_S_combo_two_RANGES_NUM 0
#define DT_N_S_combos_S_combo_two_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_two_IRQ_NUM 0
#define DT_N_S_combos_S_combo_two_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_two_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_two_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_two_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_two_P_bindings_IDX_0_VAL_param1 458783
#define DT_N_S_combos_S_combo_two_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_two_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_two, bindings, 0)
#define DT_N_S_combos_S_combo_two_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_two, bindings, 0)
#define DT_N_S_combos_S_combo_two_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_two, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_two_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_two, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_two_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_two_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_two_P_key_positions {3 /* 0x3 */, 11 /* 0xb */}
#define DT_N_S_combos_S_combo_two_P_key_positions_IDX_0 3
#define DT_N_S_combos_S_combo_two_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_two_P_key_positions_IDX_1 11
#define DT_N_S_combos_S_combo_two_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_two_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_two, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_two, key_positions, 1)
#define DT_N_S_combos_S_combo_two_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_two, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_two, key_positions, 1)
#define DT_N_S_combos_S_combo_two_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_two, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_two, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_two_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_two, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_two, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_two_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_two_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_two_P_timeout_ms 20
#define DT_N_S_combos_S_combo_two_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_two_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_two_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_two_P_slow_release 0
#define DT_N_S_combos_S_combo_two_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_two_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_two_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_two_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_two_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_two, layers, 0)
#define DT_N_S_combos_S_combo_two_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_two, layers, 0)
#define DT_N_S_combos_S_combo_two_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_two, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_two_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_two, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_two_P_layers_LEN 1
#define DT_N_S_combos_S_combo_two_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_up
 *
 * Node identifier: DT_N_S_combos_S_combo_up
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_up_PATH "/combos/combo_up"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_up_FULL_NAME "combo_up"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_up_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_up_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_up_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_up_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_up_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_up_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_up_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_up_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_up_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_up_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_up_ORD 75
#define DT_N_S_combos_S_combo_up_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_up_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_up_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_up_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_up_REG_NUM 0
#define DT_N_S_combos_S_combo_up_RANGES_NUM 0
#define DT_N_S_combos_S_combo_up_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_up_IRQ_NUM 0
#define DT_N_S_combos_S_combo_up_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_up_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_up_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_up_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_up_P_bindings_IDX_0_VAL_param1 458834
#define DT_N_S_combos_S_combo_up_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_up_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_up, bindings, 0)
#define DT_N_S_combos_S_combo_up_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_up, bindings, 0)
#define DT_N_S_combos_S_combo_up_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_up, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_up_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_up, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_up_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_up_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_up_P_key_positions {19 /* 0x13 */, 17 /* 0x11 */}
#define DT_N_S_combos_S_combo_up_P_key_positions_IDX_0 19
#define DT_N_S_combos_S_combo_up_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_up_P_key_positions_IDX_1 17
#define DT_N_S_combos_S_combo_up_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_up_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_up, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_up, key_positions, 1)
#define DT_N_S_combos_S_combo_up_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_up, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_up, key_positions, 1)
#define DT_N_S_combos_S_combo_up_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_up, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_up, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_up_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_up, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_up, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_up_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_up_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_up_P_timeout_ms 20
#define DT_N_S_combos_S_combo_up_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_up_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_up_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_up_P_slow_release 0
#define DT_N_S_combos_S_combo_up_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_up_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_up_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_up_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_up_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_up, layers, 0)
#define DT_N_S_combos_S_combo_up_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_up, layers, 0)
#define DT_N_S_combos_S_combo_up_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_up, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_up_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_up, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_up_P_layers_LEN 1
#define DT_N_S_combos_S_combo_up_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_zero
 *
 * Node identifier: DT_N_S_combos_S_combo_zero
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_zero_PATH "/combos/combo_zero"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_zero_FULL_NAME "combo_zero"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_zero_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_zero_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_zero_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_zero_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_zero_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_zero_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_zero_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_zero_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_zero_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_zero_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_zero_ORD 76
#define DT_N_S_combos_S_combo_zero_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_zero_REQUIRES_ORDS \
	29, /* /combos */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_zero_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_zero_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_zero_REG_NUM 0
#define DT_N_S_combos_S_combo_zero_RANGES_NUM 0
#define DT_N_S_combos_S_combo_zero_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_zero_IRQ_NUM 0
#define DT_N_S_combos_S_combo_zero_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_zero_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_zero_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_zero_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_zero_P_bindings_IDX_0_VAL_param1 458791
#define DT_N_S_combos_S_combo_zero_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_zero_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_zero, bindings, 0)
#define DT_N_S_combos_S_combo_zero_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_zero, bindings, 0)
#define DT_N_S_combos_S_combo_zero_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_zero, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_zero_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_zero, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_zero_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_zero_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_zero_P_key_positions {6 /* 0x6 */, 19 /* 0x13 */}
#define DT_N_S_combos_S_combo_zero_P_key_positions_IDX_0 6
#define DT_N_S_combos_S_combo_zero_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_zero_P_key_positions_IDX_1 19
#define DT_N_S_combos_S_combo_zero_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_zero_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_zero, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_zero, key_positions, 1)
#define DT_N_S_combos_S_combo_zero_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_zero, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_zero, key_positions, 1)
#define DT_N_S_combos_S_combo_zero_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_zero, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_zero, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_zero_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_zero, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_zero, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_zero_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_zero_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_zero_P_timeout_ms 20
#define DT_N_S_combos_S_combo_zero_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_zero_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_zero_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_zero_P_slow_release 0
#define DT_N_S_combos_S_combo_zero_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_zero_P_layers {-1 /* -0x1 */}
#define DT_N_S_combos_S_combo_zero_P_layers_IDX_0 -1
#define DT_N_S_combos_S_combo_zero_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_zero_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_zero, layers, 0)
#define DT_N_S_combos_S_combo_zero_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_zero, layers, 0)
#define DT_N_S_combos_S_combo_zero_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_zero, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_zero_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_zero, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_zero_P_layers_LEN 1
#define DT_N_S_combos_S_combo_zero_P_layers_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 77
#define DT_N_S_cpus_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	78, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 78
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	77, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS \
	79, /* /cpus/cpu@0/itm@e0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M4F
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0/itm@e0000000
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0_S_itm_e0000000
 *
 * Binding (compatible = arm,armv7m-itm):
 *   $ZEPHYR_BASE/dts/bindings/debug/arm,armv7m-itm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_PATH "/cpus/cpu@0/itm@e0000000"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FULL_NAME "itm@e0000000"

/* Node parent (/cpus/cpu@0) identifier: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_PARENT DT_N_S_cpus_S_cpu_0

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_ORD 79
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REQUIRES_ORDS \
	78, /* /cpus/cpu@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_EXISTS 1
#define DT_N_INST_0_arm_armv7m_itm DT_N_S_cpus_S_cpu_0_S_itm_e0000000
#define DT_N_NODELABEL_itm         DT_N_S_cpus_S_cpu_0_S_itm_e0000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REG_IDX_0_VAL_ADDRESS 3758096384 /* 0xe0000000 */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_MATCHES_arm_armv7m_itm 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_MODEL_IDX_0 "armv7m-itm"
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_swo_ref_frequency 32000000
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_swo_ref_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible {"arm,armv7m-itm"}
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0 "arm,armv7m-itm"
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-itm
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_itm
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_ITM
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg {3758096384 /* 0xe0000000 */, 4096 /* 0x1000 */}
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_IDX_0 3758096384
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_IDX_1 4096
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /keymap
 *
 * Node identifier: DT_N_S_keymap
 *
 * Binding (compatible = zmk,keymap):
 *   /home/gab/git/zmk/app/dts/bindings/zmk,keymap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_PATH "/keymap"

/* Node's name with unit-address: */
#define DT_N_S_keymap_FULL_NAME "keymap"

/* Node parent (/) identifier: */
#define DT_N_S_keymap_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_FOREACH_CHILD(fn) fn(DT_N_S_keymap_S_0) fn(DT_N_S_keymap_S_1) fn(DT_N_S_keymap_S_2) fn(DT_N_S_keymap_S_3) fn(DT_N_S_keymap_S_4) fn(DT_N_S_keymap_S_5) fn(DT_N_S_keymap_S_6)
#define DT_N_S_keymap_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_keymap_S_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_6)
#define DT_N_S_keymap_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_keymap_S_0, __VA_ARGS__) fn(DT_N_S_keymap_S_1, __VA_ARGS__) fn(DT_N_S_keymap_S_2, __VA_ARGS__) fn(DT_N_S_keymap_S_3, __VA_ARGS__) fn(DT_N_S_keymap_S_4, __VA_ARGS__) fn(DT_N_S_keymap_S_5, __VA_ARGS__) fn(DT_N_S_keymap_S_6, __VA_ARGS__)
#define DT_N_S_keymap_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_6, __VA_ARGS__)
#define DT_N_S_keymap_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_keymap_S_0) fn(DT_N_S_keymap_S_1) fn(DT_N_S_keymap_S_2) fn(DT_N_S_keymap_S_3) fn(DT_N_S_keymap_S_4) fn(DT_N_S_keymap_S_5) fn(DT_N_S_keymap_S_6)
#define DT_N_S_keymap_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_keymap_S_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_6)
#define DT_N_S_keymap_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_keymap_S_0, __VA_ARGS__) fn(DT_N_S_keymap_S_1, __VA_ARGS__) fn(DT_N_S_keymap_S_2, __VA_ARGS__) fn(DT_N_S_keymap_S_3, __VA_ARGS__) fn(DT_N_S_keymap_S_4, __VA_ARGS__) fn(DT_N_S_keymap_S_5, __VA_ARGS__) fn(DT_N_S_keymap_S_6, __VA_ARGS__)
#define DT_N_S_keymap_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_6, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_keymap_ORD 80
#define DT_N_S_keymap_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_SUPPORTS_ORDS \
	90, /* /keymap/0 */ \
	98, /* /keymap/1 */ \
	100, /* /keymap/2 */ \
	101, /* /keymap/3 */ \
	102, /* /keymap/4 */ \
	103, /* /keymap/5 */ \
	104, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_EXISTS 1
#define DT_N_INST_0_zmk_keymap DT_N_S_keymap

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_REG_NUM 0
#define DT_N_S_keymap_RANGES_NUM 0
#define DT_N_S_keymap_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_IRQ_NUM 0
#define DT_N_S_keymap_COMPAT_MATCHES_zmk_keymap 1
#define DT_N_S_keymap_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_keymap_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_keymap_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_keymap_COMPAT_MODEL_IDX_0 "keymap"
#define DT_N_S_keymap_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_P_compatible {"zmk,keymap"}
#define DT_N_S_keymap_P_compatible_IDX_0 "zmk,keymap"
#define DT_N_S_keymap_P_compatible_IDX_0_STRING_UNQUOTED zmk,keymap
#define DT_N_S_keymap_P_compatible_IDX_0_STRING_TOKEN zmk_keymap
#define DT_N_S_keymap_P_compatible_IDX_0_STRING_UPPER_TOKEN ZMK_KEYMAP
#define DT_N_S_keymap_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_keymap_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap, compatible, 0)
#define DT_N_S_keymap_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap, compatible, 0)
#define DT_N_S_keymap_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap, compatible, 0, __VA_ARGS__)
#define DT_N_S_keymap_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap, compatible, 0, __VA_ARGS__)
#define DT_N_S_keymap_P_compatible_LEN 1
#define DT_N_S_keymap_P_compatible_EXISTS 1

/*
 * Devicetree node: /behaviors/momentary_layer
 *
 * Node identifier: DT_N_S_behaviors_S_momentary_layer
 *
 * Binding (compatible = zmk,behavior-momentary-layer):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-momentary-layer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_momentary_layer_PATH "/behaviors/momentary_layer"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_momentary_layer_FULL_NAME "momentary_layer"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_momentary_layer_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_momentary_layer_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_momentary_layer_ORD 81
#define DT_N_S_behaviors_S_momentary_layer_ORD_STR_SORTABLE 00081

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_momentary_layer_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_momentary_layer_SUPPORTS_ORDS \
	82, /* /behaviors/e_shifted_tap_dance */ \
	83, /* /behaviors/i_shifted_tap_dance */ \
	84, /* /behaviors/j_shifted_tap_dance */ \
	86, /* /behaviors/navmod_layer_tap_dance */ \
	87, /* /behaviors/r_shifted_tap_dance */ \
	88, /* /behaviors/seminav_tap_dance */ \
	89, /* /behaviors/u_shifted_tap_dance */ \
	98, /* /keymap/1 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_momentary_layer_EXISTS 1
#define DT_N_INST_0_zmk_behavior_momentary_layer DT_N_S_behaviors_S_momentary_layer
#define DT_N_NODELABEL_mo                        DT_N_S_behaviors_S_momentary_layer

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_momentary_layer_REG_NUM 0
#define DT_N_S_behaviors_S_momentary_layer_RANGES_NUM 0
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_momentary_layer_IRQ_NUM 0
#define DT_N_S_behaviors_S_momentary_layer_COMPAT_MATCHES_zmk_behavior_momentary_layer 1
#define DT_N_S_behaviors_S_momentary_layer_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_momentary_layer_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_momentary_layer_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_momentary_layer_COMPAT_MODEL_IDX_0 "behavior-momentary-layer"
#define DT_N_S_behaviors_S_momentary_layer_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_momentary_layer_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/e_shifted_tap_dance
 *
 * Node identifier: DT_N_S_behaviors_S_e_shifted_tap_dance
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_e_shifted_tap_dance_PATH "/behaviors/e_shifted_tap_dance"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_e_shifted_tap_dance_FULL_NAME "e_shifted_tap_dance"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_e_shifted_tap_dance_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_e_shifted_tap_dance_CHILD_IDX 30

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_e_shifted_tap_dance_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_e_shifted_tap_dance_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_e_shifted_tap_dance_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_e_shifted_tap_dance_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_e_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_e_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_e_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_e_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_e_shifted_tap_dance_ORD 82
#define DT_N_S_behaviors_S_e_shifted_tap_dance_ORD_STR_SORTABLE 00082

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_e_shifted_tap_dance_REQUIRES_ORDS \
	16, /* /behaviors */ \
	30, /* /behaviors/key_press */ \
	81, /* /behaviors/momentary_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_e_shifted_tap_dance_SUPPORTS_ORDS \
	90, /* /keymap/0 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_e_shifted_tap_dance_EXISTS 1
#define DT_N_INST_7_zmk_behavior_tap_dance DT_N_S_behaviors_S_e_shifted_tap_dance
#define DT_N_NODELABEL_td_e_shifted        DT_N_S_behaviors_S_e_shifted_tap_dance

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_e_shifted_tap_dance_REG_NUM 0
#define DT_N_S_behaviors_S_e_shifted_tap_dance_RANGES_NUM 0
#define DT_N_S_behaviors_S_e_shifted_tap_dance_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_e_shifted_tap_dance_IRQ_NUM 0
#define DT_N_S_behaviors_S_e_shifted_tap_dance_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_e_shifted_tap_dance_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_e_shifted_tap_dance_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_e_shifted_tap_dance_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_e_shifted_tap_dance_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_e_shifted_tap_dance_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_e_shifted_tap_dance_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_e_shifted_tap_dance_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_e_shifted_tap_dance_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_e_shifted_tap_dance_P_bindings_IDX_0_VAL_param1 458760
#define DT_N_S_behaviors_S_e_shifted_tap_dance_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_e_shifted_tap_dance_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_e_shifted_tap_dance_P_bindings_IDX_1_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_e_shifted_tap_dance_P_bindings_IDX_1_VAL_param1 3
#define DT_N_S_behaviors_S_e_shifted_tap_dance_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_e_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_e_shifted_tap_dance, bindings, 0) \
	fn(DT_N_S_behaviors_S_e_shifted_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_e_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_e_shifted_tap_dance, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_e_shifted_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_e_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_e_shifted_tap_dance, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_e_shifted_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_e_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_e_shifted_tap_dance, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_e_shifted_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_e_shifted_tap_dance_P_bindings_LEN 2
#define DT_N_S_behaviors_S_e_shifted_tap_dance_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_e_shifted_tap_dance_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_e_shifted_tap_dance_P_tapping_term_ms_EXISTS 1

/*
 * Devicetree node: /behaviors/i_shifted_tap_dance
 *
 * Node identifier: DT_N_S_behaviors_S_i_shifted_tap_dance
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_i_shifted_tap_dance_PATH "/behaviors/i_shifted_tap_dance"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_i_shifted_tap_dance_FULL_NAME "i_shifted_tap_dance"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_i_shifted_tap_dance_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_i_shifted_tap_dance_CHILD_IDX 31

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_i_shifted_tap_dance_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_i_shifted_tap_dance_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_i_shifted_tap_dance_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_i_shifted_tap_dance_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_i_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_i_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_i_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_i_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_i_shifted_tap_dance_ORD 83
#define DT_N_S_behaviors_S_i_shifted_tap_dance_ORD_STR_SORTABLE 00083

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_i_shifted_tap_dance_REQUIRES_ORDS \
	16, /* /behaviors */ \
	30, /* /behaviors/key_press */ \
	81, /* /behaviors/momentary_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_i_shifted_tap_dance_SUPPORTS_ORDS \
	90, /* /keymap/0 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_i_shifted_tap_dance_EXISTS 1
#define DT_N_INST_8_zmk_behavior_tap_dance DT_N_S_behaviors_S_i_shifted_tap_dance
#define DT_N_NODELABEL_td_i_shifted        DT_N_S_behaviors_S_i_shifted_tap_dance

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_i_shifted_tap_dance_REG_NUM 0
#define DT_N_S_behaviors_S_i_shifted_tap_dance_RANGES_NUM 0
#define DT_N_S_behaviors_S_i_shifted_tap_dance_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_i_shifted_tap_dance_IRQ_NUM 0
#define DT_N_S_behaviors_S_i_shifted_tap_dance_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_i_shifted_tap_dance_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_i_shifted_tap_dance_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_i_shifted_tap_dance_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_i_shifted_tap_dance_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_i_shifted_tap_dance_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_i_shifted_tap_dance_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_i_shifted_tap_dance_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_i_shifted_tap_dance_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_i_shifted_tap_dance_P_bindings_IDX_0_VAL_param1 458764
#define DT_N_S_behaviors_S_i_shifted_tap_dance_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_i_shifted_tap_dance_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_i_shifted_tap_dance_P_bindings_IDX_1_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_i_shifted_tap_dance_P_bindings_IDX_1_VAL_param1 3
#define DT_N_S_behaviors_S_i_shifted_tap_dance_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_i_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_i_shifted_tap_dance, bindings, 0) \
	fn(DT_N_S_behaviors_S_i_shifted_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_i_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_i_shifted_tap_dance, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_i_shifted_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_i_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_i_shifted_tap_dance, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_i_shifted_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_i_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_i_shifted_tap_dance, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_i_shifted_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_i_shifted_tap_dance_P_bindings_LEN 2
#define DT_N_S_behaviors_S_i_shifted_tap_dance_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_i_shifted_tap_dance_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_i_shifted_tap_dance_P_tapping_term_ms_EXISTS 1

/*
 * Devicetree node: /behaviors/j_shifted_tap_dance
 *
 * Node identifier: DT_N_S_behaviors_S_j_shifted_tap_dance
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_j_shifted_tap_dance_PATH "/behaviors/j_shifted_tap_dance"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_j_shifted_tap_dance_FULL_NAME "j_shifted_tap_dance"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_j_shifted_tap_dance_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_j_shifted_tap_dance_CHILD_IDX 33

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_j_shifted_tap_dance_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_j_shifted_tap_dance_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_j_shifted_tap_dance_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_j_shifted_tap_dance_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_j_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_j_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_j_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_j_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_j_shifted_tap_dance_ORD 84
#define DT_N_S_behaviors_S_j_shifted_tap_dance_ORD_STR_SORTABLE 00084

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_j_shifted_tap_dance_REQUIRES_ORDS \
	16, /* /behaviors */ \
	30, /* /behaviors/key_press */ \
	81, /* /behaviors/momentary_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_j_shifted_tap_dance_SUPPORTS_ORDS \
	90, /* /keymap/0 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_j_shifted_tap_dance_EXISTS 1
#define DT_N_INST_10_zmk_behavior_tap_dance DT_N_S_behaviors_S_j_shifted_tap_dance
#define DT_N_NODELABEL_td_j_shifted         DT_N_S_behaviors_S_j_shifted_tap_dance

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_j_shifted_tap_dance_REG_NUM 0
#define DT_N_S_behaviors_S_j_shifted_tap_dance_RANGES_NUM 0
#define DT_N_S_behaviors_S_j_shifted_tap_dance_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_j_shifted_tap_dance_IRQ_NUM 0
#define DT_N_S_behaviors_S_j_shifted_tap_dance_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_j_shifted_tap_dance_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_j_shifted_tap_dance_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_j_shifted_tap_dance_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_j_shifted_tap_dance_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_j_shifted_tap_dance_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_j_shifted_tap_dance_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_j_shifted_tap_dance_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_j_shifted_tap_dance_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_j_shifted_tap_dance_P_bindings_IDX_0_VAL_param1 458765
#define DT_N_S_behaviors_S_j_shifted_tap_dance_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_j_shifted_tap_dance_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_j_shifted_tap_dance_P_bindings_IDX_1_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_j_shifted_tap_dance_P_bindings_IDX_1_VAL_param1 3
#define DT_N_S_behaviors_S_j_shifted_tap_dance_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_j_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_j_shifted_tap_dance, bindings, 0) \
	fn(DT_N_S_behaviors_S_j_shifted_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_j_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_j_shifted_tap_dance, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_j_shifted_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_j_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_j_shifted_tap_dance, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_j_shifted_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_j_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_j_shifted_tap_dance, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_j_shifted_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_j_shifted_tap_dance_P_bindings_LEN 2
#define DT_N_S_behaviors_S_j_shifted_tap_dance_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_j_shifted_tap_dance_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_j_shifted_tap_dance_P_tapping_term_ms_EXISTS 1

/*
 * Devicetree node: /behaviors/toggle_layer
 *
 * Node identifier: DT_N_S_behaviors_S_toggle_layer
 *
 * Binding (compatible = zmk,behavior-toggle-layer):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-toggle-layer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_toggle_layer_PATH "/behaviors/toggle_layer"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_toggle_layer_FULL_NAME "toggle_layer"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_toggle_layer_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_toggle_layer_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_toggle_layer_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_toggle_layer_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_toggle_layer_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_toggle_layer_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_toggle_layer_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_toggle_layer_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_toggle_layer_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_toggle_layer_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_toggle_layer_ORD 85
#define DT_N_S_behaviors_S_toggle_layer_ORD_STR_SORTABLE 00085

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_toggle_layer_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_toggle_layer_SUPPORTS_ORDS \
	86, /* /behaviors/navmod_layer_tap_dance */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_toggle_layer_EXISTS 1
#define DT_N_INST_0_zmk_behavior_toggle_layer DT_N_S_behaviors_S_toggle_layer
#define DT_N_NODELABEL_tog                    DT_N_S_behaviors_S_toggle_layer

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_toggle_layer_REG_NUM 0
#define DT_N_S_behaviors_S_toggle_layer_RANGES_NUM 0
#define DT_N_S_behaviors_S_toggle_layer_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_toggle_layer_IRQ_NUM 0
#define DT_N_S_behaviors_S_toggle_layer_COMPAT_MATCHES_zmk_behavior_toggle_layer 1
#define DT_N_S_behaviors_S_toggle_layer_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_toggle_layer_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_toggle_layer_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_toggle_layer_COMPAT_MODEL_IDX_0 "behavior-toggle-layer"
#define DT_N_S_behaviors_S_toggle_layer_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_toggle_layer_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/navmod_layer_tap_dance
 *
 * Node identifier: DT_N_S_behaviors_S_navmod_layer_tap_dance
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_PATH "/behaviors/navmod_layer_tap_dance"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_FULL_NAME "navmod_layer_tap_dance"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_CHILD_IDX 27

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_ORD 86
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_ORD_STR_SORTABLE 00086

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_REQUIRES_ORDS \
	16, /* /behaviors */ \
	81, /* /behaviors/momentary_layer */ \
	85, /* /behaviors/toggle_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_SUPPORTS_ORDS \
	90, /* /keymap/0 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_EXISTS 1
#define DT_N_INST_4_zmk_behavior_tap_dance DT_N_S_behaviors_S_navmod_layer_tap_dance
#define DT_N_NODELABEL_td_navmodlayer      DT_N_S_behaviors_S_navmod_layer_tap_dance

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_REG_NUM 0
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_RANGES_NUM 0
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_IRQ_NUM 0
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_P_bindings_IDX_0_VAL_param1 1
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_P_bindings_IDX_1_PH DT_N_S_behaviors_S_toggle_layer
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_P_bindings_IDX_1_VAL_param1 1
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_navmod_layer_tap_dance, bindings, 0) \
	fn(DT_N_S_behaviors_S_navmod_layer_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_navmod_layer_tap_dance, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_navmod_layer_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_navmod_layer_tap_dance, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_navmod_layer_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_navmod_layer_tap_dance, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_navmod_layer_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_P_bindings_LEN 2
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_navmod_layer_tap_dance_P_tapping_term_ms_EXISTS 1

/*
 * Devicetree node: /behaviors/r_shifted_tap_dance
 *
 * Node identifier: DT_N_S_behaviors_S_r_shifted_tap_dance
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_r_shifted_tap_dance_PATH "/behaviors/r_shifted_tap_dance"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_r_shifted_tap_dance_FULL_NAME "r_shifted_tap_dance"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_r_shifted_tap_dance_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_r_shifted_tap_dance_CHILD_IDX 29

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_r_shifted_tap_dance_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_r_shifted_tap_dance_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_r_shifted_tap_dance_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_r_shifted_tap_dance_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_r_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_r_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_r_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_r_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_r_shifted_tap_dance_ORD 87
#define DT_N_S_behaviors_S_r_shifted_tap_dance_ORD_STR_SORTABLE 00087

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_r_shifted_tap_dance_REQUIRES_ORDS \
	16, /* /behaviors */ \
	30, /* /behaviors/key_press */ \
	81, /* /behaviors/momentary_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_r_shifted_tap_dance_SUPPORTS_ORDS \
	90, /* /keymap/0 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_r_shifted_tap_dance_EXISTS 1
#define DT_N_INST_6_zmk_behavior_tap_dance DT_N_S_behaviors_S_r_shifted_tap_dance
#define DT_N_NODELABEL_td_r_shifted        DT_N_S_behaviors_S_r_shifted_tap_dance

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_r_shifted_tap_dance_REG_NUM 0
#define DT_N_S_behaviors_S_r_shifted_tap_dance_RANGES_NUM 0
#define DT_N_S_behaviors_S_r_shifted_tap_dance_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_r_shifted_tap_dance_IRQ_NUM 0
#define DT_N_S_behaviors_S_r_shifted_tap_dance_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_r_shifted_tap_dance_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_r_shifted_tap_dance_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_r_shifted_tap_dance_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_r_shifted_tap_dance_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_r_shifted_tap_dance_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_r_shifted_tap_dance_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_r_shifted_tap_dance_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_r_shifted_tap_dance_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_r_shifted_tap_dance_P_bindings_IDX_0_VAL_param1 458773
#define DT_N_S_behaviors_S_r_shifted_tap_dance_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_r_shifted_tap_dance_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_r_shifted_tap_dance_P_bindings_IDX_1_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_r_shifted_tap_dance_P_bindings_IDX_1_VAL_param1 3
#define DT_N_S_behaviors_S_r_shifted_tap_dance_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_r_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_r_shifted_tap_dance, bindings, 0) \
	fn(DT_N_S_behaviors_S_r_shifted_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_r_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_r_shifted_tap_dance, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_r_shifted_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_r_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_r_shifted_tap_dance, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_r_shifted_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_r_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_r_shifted_tap_dance, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_r_shifted_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_r_shifted_tap_dance_P_bindings_LEN 2
#define DT_N_S_behaviors_S_r_shifted_tap_dance_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_r_shifted_tap_dance_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_r_shifted_tap_dance_P_tapping_term_ms_EXISTS 1

/*
 * Devicetree node: /behaviors/seminav_tap_dance
 *
 * Node identifier: DT_N_S_behaviors_S_seminav_tap_dance
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_seminav_tap_dance_PATH "/behaviors/seminav_tap_dance"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_seminav_tap_dance_FULL_NAME "seminav_tap_dance"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_seminav_tap_dance_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_seminav_tap_dance_CHILD_IDX 28

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_seminav_tap_dance_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_seminav_tap_dance_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_seminav_tap_dance_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_seminav_tap_dance_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_seminav_tap_dance_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_seminav_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_seminav_tap_dance_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_seminav_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_seminav_tap_dance_ORD 88
#define DT_N_S_behaviors_S_seminav_tap_dance_ORD_STR_SORTABLE 00088

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_seminav_tap_dance_REQUIRES_ORDS \
	16, /* /behaviors */ \
	30, /* /behaviors/key_press */ \
	81, /* /behaviors/momentary_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_seminav_tap_dance_SUPPORTS_ORDS \
	90, /* /keymap/0 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_seminav_tap_dance_EXISTS 1
#define DT_N_INST_5_zmk_behavior_tap_dance DT_N_S_behaviors_S_seminav_tap_dance
#define DT_N_NODELABEL_td_seminav          DT_N_S_behaviors_S_seminav_tap_dance

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_seminav_tap_dance_REG_NUM 0
#define DT_N_S_behaviors_S_seminav_tap_dance_RANGES_NUM 0
#define DT_N_S_behaviors_S_seminav_tap_dance_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_seminav_tap_dance_IRQ_NUM 0
#define DT_N_S_behaviors_S_seminav_tap_dance_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_seminav_tap_dance_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_seminav_tap_dance_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_seminav_tap_dance_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_seminav_tap_dance_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_seminav_tap_dance_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_seminav_tap_dance_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_IDX_0_VAL_param1 458803
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_IDX_1_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_IDX_1_VAL_param1 5
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_IDX_2_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_IDX_2_VAL_param1 6
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_seminav_tap_dance, bindings, 0) \
	fn(DT_N_S_behaviors_S_seminav_tap_dance, bindings, 1) \
	fn(DT_N_S_behaviors_S_seminav_tap_dance, bindings, 2)
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_seminav_tap_dance, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_seminav_tap_dance, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_seminav_tap_dance, bindings, 2)
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_seminav_tap_dance, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_seminav_tap_dance, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_seminav_tap_dance, bindings, 2, __VA_ARGS__)
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_seminav_tap_dance, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_seminav_tap_dance, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_seminav_tap_dance, bindings, 2, __VA_ARGS__)
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_LEN 3
#define DT_N_S_behaviors_S_seminav_tap_dance_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_seminav_tap_dance_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_seminav_tap_dance_P_tapping_term_ms_EXISTS 1

/*
 * Devicetree node: /behaviors/u_shifted_tap_dance
 *
 * Node identifier: DT_N_S_behaviors_S_u_shifted_tap_dance
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_u_shifted_tap_dance_PATH "/behaviors/u_shifted_tap_dance"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_u_shifted_tap_dance_FULL_NAME "u_shifted_tap_dance"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_u_shifted_tap_dance_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_u_shifted_tap_dance_CHILD_IDX 32

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_u_shifted_tap_dance_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_u_shifted_tap_dance_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_u_shifted_tap_dance_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_u_shifted_tap_dance_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_u_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_u_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_u_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_u_shifted_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_u_shifted_tap_dance_ORD 89
#define DT_N_S_behaviors_S_u_shifted_tap_dance_ORD_STR_SORTABLE 00089

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_u_shifted_tap_dance_REQUIRES_ORDS \
	16, /* /behaviors */ \
	30, /* /behaviors/key_press */ \
	81, /* /behaviors/momentary_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_u_shifted_tap_dance_SUPPORTS_ORDS \
	90, /* /keymap/0 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_u_shifted_tap_dance_EXISTS 1
#define DT_N_INST_9_zmk_behavior_tap_dance DT_N_S_behaviors_S_u_shifted_tap_dance
#define DT_N_NODELABEL_td_u_shifted        DT_N_S_behaviors_S_u_shifted_tap_dance

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_u_shifted_tap_dance_REG_NUM 0
#define DT_N_S_behaviors_S_u_shifted_tap_dance_RANGES_NUM 0
#define DT_N_S_behaviors_S_u_shifted_tap_dance_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_u_shifted_tap_dance_IRQ_NUM 0
#define DT_N_S_behaviors_S_u_shifted_tap_dance_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_u_shifted_tap_dance_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_u_shifted_tap_dance_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_u_shifted_tap_dance_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_u_shifted_tap_dance_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_u_shifted_tap_dance_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_u_shifted_tap_dance_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_u_shifted_tap_dance_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_u_shifted_tap_dance_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_u_shifted_tap_dance_P_bindings_IDX_0_VAL_param1 458776
#define DT_N_S_behaviors_S_u_shifted_tap_dance_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_shifted_tap_dance_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_u_shifted_tap_dance_P_bindings_IDX_1_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_u_shifted_tap_dance_P_bindings_IDX_1_VAL_param1 3
#define DT_N_S_behaviors_S_u_shifted_tap_dance_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_shifted_tap_dance, bindings, 0) \
	fn(DT_N_S_behaviors_S_u_shifted_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_u_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_u_shifted_tap_dance, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_u_shifted_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_u_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_shifted_tap_dance, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_shifted_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_shifted_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_u_shifted_tap_dance, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_u_shifted_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_shifted_tap_dance_P_bindings_LEN 2
#define DT_N_S_behaviors_S_u_shifted_tap_dance_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_u_shifted_tap_dance_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_u_shifted_tap_dance_P_tapping_term_ms_EXISTS 1

/*
 * Devicetree node: /keymap/0
 *
 * Node identifier: DT_N_S_keymap_S_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_0_PATH "/keymap/0"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_0_FULL_NAME "0"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_0_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_0_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_0_ORD 90
#define DT_N_S_keymap_S_0_ORD_STR_SORTABLE 00090

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_0_REQUIRES_ORDS \
	30, /* /behaviors/key_press */ \
	80, /* /keymap */ \
	82, /* /behaviors/e_shifted_tap_dance */ \
	83, /* /behaviors/i_shifted_tap_dance */ \
	84, /* /behaviors/j_shifted_tap_dance */ \
	86, /* /behaviors/navmod_layer_tap_dance */ \
	87, /* /behaviors/r_shifted_tap_dance */ \
	88, /* /behaviors/seminav_tap_dance */ \
	89, /* /behaviors/u_shifted_tap_dance */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_0_REG_NUM 0
#define DT_N_S_keymap_S_0_RANGES_NUM 0
#define DT_N_S_keymap_S_0_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_0_IRQ_NUM 0
#define DT_N_S_keymap_S_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_0_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_0_VAL_param1 458772
#define DT_N_S_keymap_S_0_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_1_VAL_param1 458778
#define DT_N_S_keymap_S_0_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_2_PH DT_N_S_behaviors_S_e_shifted_tap_dance
#define DT_N_S_keymap_S_0_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_3_PH DT_N_S_behaviors_S_r_shifted_tap_dance
#define DT_N_S_keymap_S_0_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_4_VAL_param1 458775
#define DT_N_S_keymap_S_0_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_5_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_5_VAL_param1 458780
#define DT_N_S_keymap_S_0_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_6_PH DT_N_S_behaviors_S_u_shifted_tap_dance
#define DT_N_S_keymap_S_0_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_7_PH DT_N_S_behaviors_S_i_shifted_tap_dance
#define DT_N_S_keymap_S_0_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_8_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_8_VAL_param1 458770
#define DT_N_S_keymap_S_0_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_9_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_9_VAL_param1 458771
#define DT_N_S_keymap_S_0_P_bindings_IDX_9_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_10_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_10_VAL_param1 458756
#define DT_N_S_keymap_S_0_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_11_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_11_VAL_param1 458774
#define DT_N_S_keymap_S_0_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_12_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_12_VAL_param1 458759
#define DT_N_S_keymap_S_0_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_13_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_13_VAL_param1 458761
#define DT_N_S_keymap_S_0_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_14_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_14_VAL_param1 458762
#define DT_N_S_keymap_S_0_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_15_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_15_VAL_param1 458763
#define DT_N_S_keymap_S_0_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_16_PH DT_N_S_behaviors_S_j_shifted_tap_dance
#define DT_N_S_keymap_S_0_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_17_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_17_VAL_param1 458766
#define DT_N_S_keymap_S_0_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_18_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_18_VAL_param1 458767
#define DT_N_S_keymap_S_0_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_19_PH DT_N_S_behaviors_S_seminav_tap_dance
#define DT_N_S_keymap_S_0_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_20_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_20_VAL_param1 458781
#define DT_N_S_keymap_S_0_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_21_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_21_VAL_param1 458779
#define DT_N_S_keymap_S_0_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_22_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_22_VAL_param1 458758
#define DT_N_S_keymap_S_0_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_23_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_23_VAL_param1 458777
#define DT_N_S_keymap_S_0_P_bindings_IDX_23_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_24_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_24_VAL_param1 458757
#define DT_N_S_keymap_S_0_P_bindings_IDX_24_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_25_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_25_VAL_param1 458769
#define DT_N_S_keymap_S_0_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_26_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_26_VAL_param1 458768
#define DT_N_S_keymap_S_0_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_27_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_27_VAL_param1 458806
#define DT_N_S_keymap_S_0_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_28_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_28_VAL_param1 458807
#define DT_N_S_keymap_S_0_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_29_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_29_VAL_param1 458808
#define DT_N_S_keymap_S_0_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_30_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_30_VAL_param1 458976
#define DT_N_S_keymap_S_0_P_bindings_IDX_30_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_31_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_31_VAL_param1 458853
#define DT_N_S_keymap_S_0_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_32_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_32_VAL_param1 458977
#define DT_N_S_keymap_S_0_P_bindings_IDX_32_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_33_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_33_VAL_param1 458796
#define DT_N_S_keymap_S_0_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_34_PH DT_N_S_behaviors_S_navmod_layer_tap_dance
#define DT_N_S_keymap_S_0_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_35_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_35_VAL_param1 458982
#define DT_N_S_keymap_S_0_P_bindings_IDX_35_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_0, bindings, 0) \
	fn(DT_N_S_keymap_S_0, bindings, 1) \
	fn(DT_N_S_keymap_S_0, bindings, 2) \
	fn(DT_N_S_keymap_S_0, bindings, 3) \
	fn(DT_N_S_keymap_S_0, bindings, 4) \
	fn(DT_N_S_keymap_S_0, bindings, 5) \
	fn(DT_N_S_keymap_S_0, bindings, 6) \
	fn(DT_N_S_keymap_S_0, bindings, 7) \
	fn(DT_N_S_keymap_S_0, bindings, 8) \
	fn(DT_N_S_keymap_S_0, bindings, 9) \
	fn(DT_N_S_keymap_S_0, bindings, 10) \
	fn(DT_N_S_keymap_S_0, bindings, 11) \
	fn(DT_N_S_keymap_S_0, bindings, 12) \
	fn(DT_N_S_keymap_S_0, bindings, 13) \
	fn(DT_N_S_keymap_S_0, bindings, 14) \
	fn(DT_N_S_keymap_S_0, bindings, 15) \
	fn(DT_N_S_keymap_S_0, bindings, 16) \
	fn(DT_N_S_keymap_S_0, bindings, 17) \
	fn(DT_N_S_keymap_S_0, bindings, 18) \
	fn(DT_N_S_keymap_S_0, bindings, 19) \
	fn(DT_N_S_keymap_S_0, bindings, 20) \
	fn(DT_N_S_keymap_S_0, bindings, 21) \
	fn(DT_N_S_keymap_S_0, bindings, 22) \
	fn(DT_N_S_keymap_S_0, bindings, 23) \
	fn(DT_N_S_keymap_S_0, bindings, 24) \
	fn(DT_N_S_keymap_S_0, bindings, 25) \
	fn(DT_N_S_keymap_S_0, bindings, 26) \
	fn(DT_N_S_keymap_S_0, bindings, 27) \
	fn(DT_N_S_keymap_S_0, bindings, 28) \
	fn(DT_N_S_keymap_S_0, bindings, 29) \
	fn(DT_N_S_keymap_S_0, bindings, 30) \
	fn(DT_N_S_keymap_S_0, bindings, 31) \
	fn(DT_N_S_keymap_S_0, bindings, 32) \
	fn(DT_N_S_keymap_S_0, bindings, 33) \
	fn(DT_N_S_keymap_S_0, bindings, 34) \
	fn(DT_N_S_keymap_S_0, bindings, 35)
#define DT_N_S_keymap_S_0_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_0, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 35)
#define DT_N_S_keymap_S_0_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_0, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 35, __VA_ARGS__)
#define DT_N_S_keymap_S_0_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_0, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_0, bindings, 35, __VA_ARGS__)
#define DT_N_S_keymap_S_0_P_bindings_LEN 36
#define DT_N_S_keymap_S_0_P_bindings_EXISTS 1

/*
 * Devicetree node: /behaviors/key_toggle
 *
 * Node identifier: DT_N_S_behaviors_S_key_toggle
 *
 * Binding (compatible = zmk,behavior-key-toggle):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-key-toggle.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_key_toggle_PATH "/behaviors/key_toggle"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_key_toggle_FULL_NAME "key_toggle"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_key_toggle_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_key_toggle_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_key_toggle_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_key_toggle_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_key_toggle_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_key_toggle_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_key_toggle_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_key_toggle_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_key_toggle_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_key_toggle_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_key_toggle_ORD 91
#define DT_N_S_behaviors_S_key_toggle_ORD_STR_SORTABLE 00091

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_key_toggle_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_key_toggle_SUPPORTS_ORDS \
	93, /* /behaviors/lalt_tap_dance */ \
	94, /* /behaviors/lctrl_tap_dance */ \
	95, /* /behaviors/lgui_tap_dance */ \
	96, /* /behaviors/lshft_tap_dance */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_key_toggle_EXISTS 1
#define DT_N_INST_0_zmk_behavior_key_toggle DT_N_S_behaviors_S_key_toggle
#define DT_N_NODELABEL_kt                   DT_N_S_behaviors_S_key_toggle

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_key_toggle_REG_NUM 0
#define DT_N_S_behaviors_S_key_toggle_RANGES_NUM 0
#define DT_N_S_behaviors_S_key_toggle_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_key_toggle_IRQ_NUM 0
#define DT_N_S_behaviors_S_key_toggle_COMPAT_MATCHES_zmk_behavior_key_toggle 1
#define DT_N_S_behaviors_S_key_toggle_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_key_toggle_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_key_toggle_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_key_toggle_COMPAT_MODEL_IDX_0 "behavior-key-toggle"
#define DT_N_S_behaviors_S_key_toggle_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_key_toggle_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/sticky_key
 *
 * Node identifier: DT_N_S_behaviors_S_sticky_key
 *
 * Binding (compatible = zmk,behavior-sticky-key):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-sticky-key.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_sticky_key_PATH "/behaviors/sticky_key"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_sticky_key_FULL_NAME "sticky_key"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_sticky_key_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_sticky_key_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_sticky_key_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_sticky_key_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_sticky_key_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_sticky_key_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_sticky_key_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_sticky_key_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_sticky_key_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_sticky_key_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_sticky_key_ORD 92
#define DT_N_S_behaviors_S_sticky_key_ORD_STR_SORTABLE 00092

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_sticky_key_REQUIRES_ORDS \
	16, /* /behaviors */ \
	30, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_sticky_key_SUPPORTS_ORDS \
	93, /* /behaviors/lalt_tap_dance */ \
	94, /* /behaviors/lctrl_tap_dance */ \
	95, /* /behaviors/lgui_tap_dance */ \
	96, /* /behaviors/lshft_tap_dance */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_sticky_key_EXISTS 1
#define DT_N_INST_0_zmk_behavior_sticky_key DT_N_S_behaviors_S_sticky_key
#define DT_N_NODELABEL_sk                   DT_N_S_behaviors_S_sticky_key

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_sticky_key_REG_NUM 0
#define DT_N_S_behaviors_S_sticky_key_RANGES_NUM 0
#define DT_N_S_behaviors_S_sticky_key_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_sticky_key_IRQ_NUM 0
#define DT_N_S_behaviors_S_sticky_key_COMPAT_MATCHES_zmk_behavior_sticky_key 1
#define DT_N_S_behaviors_S_sticky_key_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_sticky_key_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_sticky_key_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_sticky_key_COMPAT_MODEL_IDX_0 "behavior-sticky-key"
#define DT_N_S_behaviors_S_sticky_key_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_sticky_key_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_sticky_key_P_bindings_IDX_0 DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_sticky_key_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_sticky_key_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_sticky_key_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_sticky_key, bindings, 0)
#define DT_N_S_behaviors_S_sticky_key_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_sticky_key, bindings, 0)
#define DT_N_S_behaviors_S_sticky_key_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_sticky_key, bindings, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_sticky_key_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_sticky_key, bindings, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_sticky_key_P_bindings_LEN 1
#define DT_N_S_behaviors_S_sticky_key_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_sticky_key_P_release_after_ms 2000
#define DT_N_S_behaviors_S_sticky_key_P_release_after_ms_EXISTS 1
#define DT_N_S_behaviors_S_sticky_key_P_quick_release 0
#define DT_N_S_behaviors_S_sticky_key_P_quick_release_EXISTS 1
#define DT_N_S_behaviors_S_sticky_key_P_lazy 0
#define DT_N_S_behaviors_S_sticky_key_P_lazy_EXISTS 1
#define DT_N_S_behaviors_S_sticky_key_P_ignore_modifiers 1
#define DT_N_S_behaviors_S_sticky_key_P_ignore_modifiers_EXISTS 1

/*
 * Devicetree node: /behaviors/lalt_tap_dance
 *
 * Node identifier: DT_N_S_behaviors_S_lalt_tap_dance
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_lalt_tap_dance_PATH "/behaviors/lalt_tap_dance"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_lalt_tap_dance_FULL_NAME "lalt_tap_dance"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_lalt_tap_dance_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_lalt_tap_dance_CHILD_IDX 26

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_lalt_tap_dance_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_lalt_tap_dance_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lalt_tap_dance_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lalt_tap_dance_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_lalt_tap_dance_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_lalt_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lalt_tap_dance_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lalt_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_lalt_tap_dance_ORD 93
#define DT_N_S_behaviors_S_lalt_tap_dance_ORD_STR_SORTABLE 00093

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_lalt_tap_dance_REQUIRES_ORDS \
	16, /* /behaviors */ \
	91, /* /behaviors/key_toggle */ \
	92, /* /behaviors/sticky_key */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_lalt_tap_dance_SUPPORTS_ORDS \
	98, /* /keymap/1 */ \
	102, /* /keymap/4 */ \
	103, /* /keymap/5 */ \
	104, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_lalt_tap_dance_EXISTS 1
#define DT_N_INST_3_zmk_behavior_tap_dance DT_N_S_behaviors_S_lalt_tap_dance
#define DT_N_NODELABEL_td_lalt             DT_N_S_behaviors_S_lalt_tap_dance

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_lalt_tap_dance_REG_NUM 0
#define DT_N_S_behaviors_S_lalt_tap_dance_RANGES_NUM 0
#define DT_N_S_behaviors_S_lalt_tap_dance_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_lalt_tap_dance_IRQ_NUM 0
#define DT_N_S_behaviors_S_lalt_tap_dance_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_lalt_tap_dance_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lalt_tap_dance_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_lalt_tap_dance_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lalt_tap_dance_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_lalt_tap_dance_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_lalt_tap_dance_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_lalt_tap_dance_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lalt_tap_dance_P_bindings_IDX_0_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_behaviors_S_lalt_tap_dance_P_bindings_IDX_0_VAL_param1 458978
#define DT_N_S_behaviors_S_lalt_tap_dance_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_lalt_tap_dance_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_lalt_tap_dance_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_toggle
#define DT_N_S_behaviors_S_lalt_tap_dance_P_bindings_IDX_1_VAL_param1 458978
#define DT_N_S_behaviors_S_lalt_tap_dance_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_lalt_tap_dance_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_lalt_tap_dance, bindings, 0) \
	fn(DT_N_S_behaviors_S_lalt_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_lalt_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_lalt_tap_dance, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_lalt_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_lalt_tap_dance_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_lalt_tap_dance, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_lalt_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_lalt_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_lalt_tap_dance, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_lalt_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_lalt_tap_dance_P_bindings_LEN 2
#define DT_N_S_behaviors_S_lalt_tap_dance_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_lalt_tap_dance_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_lalt_tap_dance_P_tapping_term_ms_EXISTS 1

/*
 * Devicetree node: /behaviors/lctrl_tap_dance
 *
 * Node identifier: DT_N_S_behaviors_S_lctrl_tap_dance
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_lctrl_tap_dance_PATH "/behaviors/lctrl_tap_dance"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_lctrl_tap_dance_FULL_NAME "lctrl_tap_dance"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_lctrl_tap_dance_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_lctrl_tap_dance_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_lctrl_tap_dance_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_lctrl_tap_dance_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lctrl_tap_dance_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lctrl_tap_dance_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_lctrl_tap_dance_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_lctrl_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lctrl_tap_dance_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lctrl_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_lctrl_tap_dance_ORD 94
#define DT_N_S_behaviors_S_lctrl_tap_dance_ORD_STR_SORTABLE 00094

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_lctrl_tap_dance_REQUIRES_ORDS \
	16, /* /behaviors */ \
	91, /* /behaviors/key_toggle */ \
	92, /* /behaviors/sticky_key */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_lctrl_tap_dance_SUPPORTS_ORDS \
	98, /* /keymap/1 */ \
	102, /* /keymap/4 */ \
	103, /* /keymap/5 */ \
	104, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_lctrl_tap_dance_EXISTS 1
#define DT_N_INST_1_zmk_behavior_tap_dance DT_N_S_behaviors_S_lctrl_tap_dance
#define DT_N_NODELABEL_td_lctrl            DT_N_S_behaviors_S_lctrl_tap_dance

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_lctrl_tap_dance_REG_NUM 0
#define DT_N_S_behaviors_S_lctrl_tap_dance_RANGES_NUM 0
#define DT_N_S_behaviors_S_lctrl_tap_dance_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_lctrl_tap_dance_IRQ_NUM 0
#define DT_N_S_behaviors_S_lctrl_tap_dance_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_lctrl_tap_dance_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lctrl_tap_dance_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_lctrl_tap_dance_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lctrl_tap_dance_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_lctrl_tap_dance_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_lctrl_tap_dance_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_lctrl_tap_dance_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lctrl_tap_dance_P_bindings_IDX_0_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_behaviors_S_lctrl_tap_dance_P_bindings_IDX_0_VAL_param1 458976
#define DT_N_S_behaviors_S_lctrl_tap_dance_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_lctrl_tap_dance_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_lctrl_tap_dance_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_toggle
#define DT_N_S_behaviors_S_lctrl_tap_dance_P_bindings_IDX_1_VAL_param1 458976
#define DT_N_S_behaviors_S_lctrl_tap_dance_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_lctrl_tap_dance_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_lctrl_tap_dance, bindings, 0) \
	fn(DT_N_S_behaviors_S_lctrl_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_lctrl_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_lctrl_tap_dance, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_lctrl_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_lctrl_tap_dance_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_lctrl_tap_dance, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_lctrl_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_lctrl_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_lctrl_tap_dance, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_lctrl_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_lctrl_tap_dance_P_bindings_LEN 2
#define DT_N_S_behaviors_S_lctrl_tap_dance_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_lctrl_tap_dance_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_lctrl_tap_dance_P_tapping_term_ms_EXISTS 1

/*
 * Devicetree node: /behaviors/lgui_tap_dance
 *
 * Node identifier: DT_N_S_behaviors_S_lgui_tap_dance
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_lgui_tap_dance_PATH "/behaviors/lgui_tap_dance"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_lgui_tap_dance_FULL_NAME "lgui_tap_dance"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_lgui_tap_dance_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_lgui_tap_dance_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_lgui_tap_dance_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_lgui_tap_dance_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lgui_tap_dance_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lgui_tap_dance_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_lgui_tap_dance_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_lgui_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lgui_tap_dance_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lgui_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_lgui_tap_dance_ORD 95
#define DT_N_S_behaviors_S_lgui_tap_dance_ORD_STR_SORTABLE 00095

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_lgui_tap_dance_REQUIRES_ORDS \
	16, /* /behaviors */ \
	91, /* /behaviors/key_toggle */ \
	92, /* /behaviors/sticky_key */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_lgui_tap_dance_SUPPORTS_ORDS \
	98, /* /keymap/1 */ \
	102, /* /keymap/4 */ \
	103, /* /keymap/5 */ \
	104, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_lgui_tap_dance_EXISTS 1
#define DT_N_INST_2_zmk_behavior_tap_dance DT_N_S_behaviors_S_lgui_tap_dance
#define DT_N_NODELABEL_td_lgui             DT_N_S_behaviors_S_lgui_tap_dance

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_lgui_tap_dance_REG_NUM 0
#define DT_N_S_behaviors_S_lgui_tap_dance_RANGES_NUM 0
#define DT_N_S_behaviors_S_lgui_tap_dance_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_lgui_tap_dance_IRQ_NUM 0
#define DT_N_S_behaviors_S_lgui_tap_dance_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_lgui_tap_dance_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lgui_tap_dance_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_lgui_tap_dance_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lgui_tap_dance_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_lgui_tap_dance_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_lgui_tap_dance_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_lgui_tap_dance_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lgui_tap_dance_P_bindings_IDX_0_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_behaviors_S_lgui_tap_dance_P_bindings_IDX_0_VAL_param1 458977
#define DT_N_S_behaviors_S_lgui_tap_dance_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_lgui_tap_dance_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_lgui_tap_dance_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_toggle
#define DT_N_S_behaviors_S_lgui_tap_dance_P_bindings_IDX_1_VAL_param1 458977
#define DT_N_S_behaviors_S_lgui_tap_dance_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_lgui_tap_dance_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_lgui_tap_dance, bindings, 0) \
	fn(DT_N_S_behaviors_S_lgui_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_lgui_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_lgui_tap_dance, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_lgui_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_lgui_tap_dance_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_lgui_tap_dance, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_lgui_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_lgui_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_lgui_tap_dance, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_lgui_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_lgui_tap_dance_P_bindings_LEN 2
#define DT_N_S_behaviors_S_lgui_tap_dance_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_lgui_tap_dance_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_lgui_tap_dance_P_tapping_term_ms_EXISTS 1

/*
 * Devicetree node: /behaviors/lshft_tap_dance
 *
 * Node identifier: DT_N_S_behaviors_S_lshft_tap_dance
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_lshft_tap_dance_PATH "/behaviors/lshft_tap_dance"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_lshft_tap_dance_FULL_NAME "lshft_tap_dance"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_lshft_tap_dance_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_lshft_tap_dance_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_lshft_tap_dance_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_lshft_tap_dance_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lshft_tap_dance_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lshft_tap_dance_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_lshft_tap_dance_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_lshft_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lshft_tap_dance_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lshft_tap_dance_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_lshft_tap_dance_ORD 96
#define DT_N_S_behaviors_S_lshft_tap_dance_ORD_STR_SORTABLE 00096

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_lshft_tap_dance_REQUIRES_ORDS \
	16, /* /behaviors */ \
	91, /* /behaviors/key_toggle */ \
	92, /* /behaviors/sticky_key */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_lshft_tap_dance_SUPPORTS_ORDS \
	98, /* /keymap/1 */ \
	102, /* /keymap/4 */ \
	103, /* /keymap/5 */ \
	104, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_lshft_tap_dance_EXISTS 1
#define DT_N_INST_0_zmk_behavior_tap_dance DT_N_S_behaviors_S_lshft_tap_dance
#define DT_N_NODELABEL_td_lshft            DT_N_S_behaviors_S_lshft_tap_dance

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_lshft_tap_dance_REG_NUM 0
#define DT_N_S_behaviors_S_lshft_tap_dance_RANGES_NUM 0
#define DT_N_S_behaviors_S_lshft_tap_dance_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_lshft_tap_dance_IRQ_NUM 0
#define DT_N_S_behaviors_S_lshft_tap_dance_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_lshft_tap_dance_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lshft_tap_dance_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_lshft_tap_dance_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lshft_tap_dance_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_lshft_tap_dance_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_lshft_tap_dance_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_lshft_tap_dance_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lshft_tap_dance_P_bindings_IDX_0_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_behaviors_S_lshft_tap_dance_P_bindings_IDX_0_VAL_param1 458977
#define DT_N_S_behaviors_S_lshft_tap_dance_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_lshft_tap_dance_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_lshft_tap_dance_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_toggle
#define DT_N_S_behaviors_S_lshft_tap_dance_P_bindings_IDX_1_VAL_param1 458977
#define DT_N_S_behaviors_S_lshft_tap_dance_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_lshft_tap_dance_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_lshft_tap_dance, bindings, 0) \
	fn(DT_N_S_behaviors_S_lshft_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_lshft_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_lshft_tap_dance, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_lshft_tap_dance, bindings, 1)
#define DT_N_S_behaviors_S_lshft_tap_dance_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_lshft_tap_dance, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_lshft_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_lshft_tap_dance_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_lshft_tap_dance, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_lshft_tap_dance, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_lshft_tap_dance_P_bindings_LEN 2
#define DT_N_S_behaviors_S_lshft_tap_dance_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_lshft_tap_dance_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_lshft_tap_dance_P_tapping_term_ms_EXISTS 1

/*
 * Devicetree node: /behaviors/transparent
 *
 * Node identifier: DT_N_S_behaviors_S_transparent
 *
 * Binding (compatible = zmk,behavior-transparent):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-transparent.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_transparent_PATH "/behaviors/transparent"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_transparent_FULL_NAME "transparent"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_transparent_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_transparent_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_transparent_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_transparent_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_transparent_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_transparent_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_transparent_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_transparent_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_transparent_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_transparent_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_transparent_ORD 97
#define DT_N_S_behaviors_S_transparent_ORD_STR_SORTABLE 00097

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_transparent_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_transparent_SUPPORTS_ORDS \
	98, /* /keymap/1 */ \
	100, /* /keymap/2 */ \
	101, /* /keymap/3 */ \
	102, /* /keymap/4 */ \
	103, /* /keymap/5 */ \
	104, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_transparent_EXISTS 1
#define DT_N_INST_0_zmk_behavior_transparent DT_N_S_behaviors_S_transparent
#define DT_N_NODELABEL_trans                 DT_N_S_behaviors_S_transparent

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_transparent_REG_NUM 0
#define DT_N_S_behaviors_S_transparent_RANGES_NUM 0
#define DT_N_S_behaviors_S_transparent_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_transparent_IRQ_NUM 0
#define DT_N_S_behaviors_S_transparent_COMPAT_MATCHES_zmk_behavior_transparent 1
#define DT_N_S_behaviors_S_transparent_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_transparent_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_transparent_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_transparent_COMPAT_MODEL_IDX_0 "behavior-transparent"
#define DT_N_S_behaviors_S_transparent_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_transparent_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /keymap/1
 *
 * Node identifier: DT_N_S_keymap_S_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_1_PATH "/keymap/1"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_1_FULL_NAME "1"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_1_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_1_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_1_ORD 98
#define DT_N_S_keymap_S_1_ORD_STR_SORTABLE 00098

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_1_REQUIRES_ORDS \
	30, /* /behaviors/key_press */ \
	80, /* /keymap */ \
	81, /* /behaviors/momentary_layer */ \
	93, /* /behaviors/lalt_tap_dance */ \
	94, /* /behaviors/lctrl_tap_dance */ \
	95, /* /behaviors/lgui_tap_dance */ \
	96, /* /behaviors/lshft_tap_dance */ \
	97, /* /behaviors/transparent */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_1_REG_NUM 0
#define DT_N_S_keymap_S_1_RANGES_NUM 0
#define DT_N_S_keymap_S_1_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_1_IRQ_NUM 0
#define DT_N_S_keymap_S_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_1_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_0_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_1_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_2_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_3_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_4_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_5_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_5_VAL_param1 458984
#define DT_N_S_keymap_S_1_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_6_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_6_VAL_param1 458881
#define DT_N_S_keymap_S_1_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_7_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_7_VAL_param1 458880
#define DT_N_S_keymap_S_1_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_8_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_8_VAL_param1 458879
#define DT_N_S_keymap_S_1_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_9_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_10_PH DT_N_S_behaviors_S_lshft_tap_dance
#define DT_N_S_keymap_S_1_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_11_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_12_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_13_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_14_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_15_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_15_VAL_param1 458832
#define DT_N_S_keymap_S_1_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_16_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_16_VAL_param1 458833
#define DT_N_S_keymap_S_1_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_17_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_17_VAL_param1 458834
#define DT_N_S_keymap_S_1_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_18_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_18_VAL_param1 458831
#define DT_N_S_keymap_S_1_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_19_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_20_PH DT_N_S_behaviors_S_lctrl_tap_dance
#define DT_N_S_keymap_S_1_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_21_PH DT_N_S_behaviors_S_lgui_tap_dance
#define DT_N_S_keymap_S_1_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_22_PH DT_N_S_behaviors_S_lalt_tap_dance
#define DT_N_S_keymap_S_1_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_23_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_24_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_25_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_25_VAL_param1 458826
#define DT_N_S_keymap_S_1_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_26_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_26_VAL_param1 458830
#define DT_N_S_keymap_S_1_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_27_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_27_VAL_param1 458827
#define DT_N_S_keymap_S_1_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_28_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_28_VAL_param1 458829
#define DT_N_S_keymap_S_1_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_29_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_30_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_keymap_S_1_P_bindings_IDX_30_VAL_param1 4
#define DT_N_S_keymap_S_1_P_bindings_IDX_30_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_31_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_keymap_S_1_P_bindings_IDX_31_VAL_param1 2
#define DT_N_S_keymap_S_1_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_32_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_33_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_34_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_35_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_1_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_1, bindings, 0) \
	fn(DT_N_S_keymap_S_1, bindings, 1) \
	fn(DT_N_S_keymap_S_1, bindings, 2) \
	fn(DT_N_S_keymap_S_1, bindings, 3) \
	fn(DT_N_S_keymap_S_1, bindings, 4) \
	fn(DT_N_S_keymap_S_1, bindings, 5) \
	fn(DT_N_S_keymap_S_1, bindings, 6) \
	fn(DT_N_S_keymap_S_1, bindings, 7) \
	fn(DT_N_S_keymap_S_1, bindings, 8) \
	fn(DT_N_S_keymap_S_1, bindings, 9) \
	fn(DT_N_S_keymap_S_1, bindings, 10) \
	fn(DT_N_S_keymap_S_1, bindings, 11) \
	fn(DT_N_S_keymap_S_1, bindings, 12) \
	fn(DT_N_S_keymap_S_1, bindings, 13) \
	fn(DT_N_S_keymap_S_1, bindings, 14) \
	fn(DT_N_S_keymap_S_1, bindings, 15) \
	fn(DT_N_S_keymap_S_1, bindings, 16) \
	fn(DT_N_S_keymap_S_1, bindings, 17) \
	fn(DT_N_S_keymap_S_1, bindings, 18) \
	fn(DT_N_S_keymap_S_1, bindings, 19) \
	fn(DT_N_S_keymap_S_1, bindings, 20) \
	fn(DT_N_S_keymap_S_1, bindings, 21) \
	fn(DT_N_S_keymap_S_1, bindings, 22) \
	fn(DT_N_S_keymap_S_1, bindings, 23) \
	fn(DT_N_S_keymap_S_1, bindings, 24) \
	fn(DT_N_S_keymap_S_1, bindings, 25) \
	fn(DT_N_S_keymap_S_1, bindings, 26) \
	fn(DT_N_S_keymap_S_1, bindings, 27) \
	fn(DT_N_S_keymap_S_1, bindings, 28) \
	fn(DT_N_S_keymap_S_1, bindings, 29) \
	fn(DT_N_S_keymap_S_1, bindings, 30) \
	fn(DT_N_S_keymap_S_1, bindings, 31) \
	fn(DT_N_S_keymap_S_1, bindings, 32) \
	fn(DT_N_S_keymap_S_1, bindings, 33) \
	fn(DT_N_S_keymap_S_1, bindings, 34) \
	fn(DT_N_S_keymap_S_1, bindings, 35)
#define DT_N_S_keymap_S_1_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_1, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 35)
#define DT_N_S_keymap_S_1_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_1, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 35, __VA_ARGS__)
#define DT_N_S_keymap_S_1_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_1, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_1, bindings, 35, __VA_ARGS__)
#define DT_N_S_keymap_S_1_P_bindings_LEN 36
#define DT_N_S_keymap_S_1_P_bindings_EXISTS 1

/*
 * Devicetree node: /behaviors/bluetooth
 *
 * Node identifier: DT_N_S_behaviors_S_bluetooth
 *
 * Binding (compatible = zmk,behavior-bluetooth):
 *   /home/gab/git/zmk/app/dts/bindings/behaviors/zmk,behavior-bluetooth.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_bluetooth_PATH "/behaviors/bluetooth"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_bluetooth_FULL_NAME "bluetooth"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_bluetooth_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_bluetooth_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_bluetooth_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_bluetooth_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bluetooth_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bluetooth_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_bluetooth_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_bluetooth_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bluetooth_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bluetooth_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_bluetooth_ORD 99
#define DT_N_S_behaviors_S_bluetooth_ORD_STR_SORTABLE 00099

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_bluetooth_REQUIRES_ORDS \
	16, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_bluetooth_SUPPORTS_ORDS \
	100, /* /keymap/2 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_bluetooth_EXISTS 1
#define DT_N_INST_0_zmk_behavior_bluetooth DT_N_S_behaviors_S_bluetooth
#define DT_N_NODELABEL_bt                  DT_N_S_behaviors_S_bluetooth

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_bluetooth_REG_NUM 0
#define DT_N_S_behaviors_S_bluetooth_RANGES_NUM 0
#define DT_N_S_behaviors_S_bluetooth_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_bluetooth_IRQ_NUM 0
#define DT_N_S_behaviors_S_bluetooth_COMPAT_MATCHES_zmk_behavior_bluetooth 1
#define DT_N_S_behaviors_S_bluetooth_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bluetooth_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_bluetooth_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bluetooth_COMPAT_MODEL_IDX_0 "behavior-bluetooth"
#define DT_N_S_behaviors_S_bluetooth_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_bluetooth_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /keymap/2
 *
 * Node identifier: DT_N_S_keymap_S_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_2_PATH "/keymap/2"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_2_FULL_NAME "2"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_2_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_2_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_2_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_2_ORD 100
#define DT_N_S_keymap_S_2_ORD_STR_SORTABLE 00100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_2_REQUIRES_ORDS \
	80, /* /keymap */ \
	97, /* /behaviors/transparent */ \
	99, /* /behaviors/bluetooth */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_2_REG_NUM 0
#define DT_N_S_keymap_S_2_RANGES_NUM 0
#define DT_N_S_keymap_S_2_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_2_IRQ_NUM 0
#define DT_N_S_keymap_S_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_2_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_0_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_1_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_2_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_3_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_4_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_keymap_S_2_P_bindings_IDX_4_VAL_param1 0
#define DT_N_S_keymap_S_2_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_4_VAL_param2 0
#define DT_N_S_keymap_S_2_P_bindings_IDX_4_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_5_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_6_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_7_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_8_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_9_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_10_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_keymap_S_2_P_bindings_IDX_10_VAL_param1 3
#define DT_N_S_keymap_S_2_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_10_VAL_param2 0
#define DT_N_S_keymap_S_2_P_bindings_IDX_10_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_11_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_keymap_S_2_P_bindings_IDX_11_VAL_param1 3
#define DT_N_S_keymap_S_2_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_11_VAL_param2 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_11_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_12_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_keymap_S_2_P_bindings_IDX_12_VAL_param1 3
#define DT_N_S_keymap_S_2_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_12_VAL_param2 2
#define DT_N_S_keymap_S_2_P_bindings_IDX_12_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_13_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_keymap_S_2_P_bindings_IDX_13_VAL_param1 3
#define DT_N_S_keymap_S_2_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_13_VAL_param2 3
#define DT_N_S_keymap_S_2_P_bindings_IDX_13_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_14_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_keymap_S_2_P_bindings_IDX_14_VAL_param1 3
#define DT_N_S_keymap_S_2_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_14_VAL_param2 4
#define DT_N_S_keymap_S_2_P_bindings_IDX_14_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_15_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_16_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_17_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_18_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_19_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_20_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_21_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_22_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_23_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_24_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_25_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_26_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_27_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_28_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_29_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_30_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_31_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_32_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_33_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_34_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_35_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_2_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_2, bindings, 0) \
	fn(DT_N_S_keymap_S_2, bindings, 1) \
	fn(DT_N_S_keymap_S_2, bindings, 2) \
	fn(DT_N_S_keymap_S_2, bindings, 3) \
	fn(DT_N_S_keymap_S_2, bindings, 4) \
	fn(DT_N_S_keymap_S_2, bindings, 5) \
	fn(DT_N_S_keymap_S_2, bindings, 6) \
	fn(DT_N_S_keymap_S_2, bindings, 7) \
	fn(DT_N_S_keymap_S_2, bindings, 8) \
	fn(DT_N_S_keymap_S_2, bindings, 9) \
	fn(DT_N_S_keymap_S_2, bindings, 10) \
	fn(DT_N_S_keymap_S_2, bindings, 11) \
	fn(DT_N_S_keymap_S_2, bindings, 12) \
	fn(DT_N_S_keymap_S_2, bindings, 13) \
	fn(DT_N_S_keymap_S_2, bindings, 14) \
	fn(DT_N_S_keymap_S_2, bindings, 15) \
	fn(DT_N_S_keymap_S_2, bindings, 16) \
	fn(DT_N_S_keymap_S_2, bindings, 17) \
	fn(DT_N_S_keymap_S_2, bindings, 18) \
	fn(DT_N_S_keymap_S_2, bindings, 19) \
	fn(DT_N_S_keymap_S_2, bindings, 20) \
	fn(DT_N_S_keymap_S_2, bindings, 21) \
	fn(DT_N_S_keymap_S_2, bindings, 22) \
	fn(DT_N_S_keymap_S_2, bindings, 23) \
	fn(DT_N_S_keymap_S_2, bindings, 24) \
	fn(DT_N_S_keymap_S_2, bindings, 25) \
	fn(DT_N_S_keymap_S_2, bindings, 26) \
	fn(DT_N_S_keymap_S_2, bindings, 27) \
	fn(DT_N_S_keymap_S_2, bindings, 28) \
	fn(DT_N_S_keymap_S_2, bindings, 29) \
	fn(DT_N_S_keymap_S_2, bindings, 30) \
	fn(DT_N_S_keymap_S_2, bindings, 31) \
	fn(DT_N_S_keymap_S_2, bindings, 32) \
	fn(DT_N_S_keymap_S_2, bindings, 33) \
	fn(DT_N_S_keymap_S_2, bindings, 34) \
	fn(DT_N_S_keymap_S_2, bindings, 35)
#define DT_N_S_keymap_S_2_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_2, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 35)
#define DT_N_S_keymap_S_2_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_2, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 35, __VA_ARGS__)
#define DT_N_S_keymap_S_2_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_2, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_2, bindings, 35, __VA_ARGS__)
#define DT_N_S_keymap_S_2_P_bindings_LEN 36
#define DT_N_S_keymap_S_2_P_bindings_EXISTS 1

/*
 * Devicetree node: /keymap/3
 *
 * Node identifier: DT_N_S_keymap_S_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_3_PATH "/keymap/3"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_3_FULL_NAME "3"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_3_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_3_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_3_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_3_ORD 101
#define DT_N_S_keymap_S_3_ORD_STR_SORTABLE 00101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_3_REQUIRES_ORDS \
	30, /* /behaviors/key_press */ \
	80, /* /keymap */ \
	97, /* /behaviors/transparent */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_3_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_3_REG_NUM 0
#define DT_N_S_keymap_S_3_RANGES_NUM 0
#define DT_N_S_keymap_S_3_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_3_IRQ_NUM 0
#define DT_N_S_keymap_S_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_3_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_0_VAL_param1 34013237
#define DT_N_S_keymap_S_3_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_1_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_2_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_3_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_4_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_5_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_6_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_7_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_7_VAL_param1 34013233
#define DT_N_S_keymap_S_3_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_8_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_8_VAL_param1 34013231
#define DT_N_S_keymap_S_3_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_9_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_9_VAL_param1 34013232
#define DT_N_S_keymap_S_3_P_bindings_IDX_9_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_10_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_10_VAL_param1 34013214
#define DT_N_S_keymap_S_3_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_11_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_11_VAL_param1 34013215
#define DT_N_S_keymap_S_3_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_12_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_12_VAL_param1 34013216
#define DT_N_S_keymap_S_3_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_13_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_13_VAL_param1 34013217
#define DT_N_S_keymap_S_3_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_14_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_14_VAL_param1 34013218
#define DT_N_S_keymap_S_3_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_15_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_15_VAL_param1 34013219
#define DT_N_S_keymap_S_3_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_16_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_16_VAL_param1 34013220
#define DT_N_S_keymap_S_3_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_17_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_17_VAL_param1 34013221
#define DT_N_S_keymap_S_3_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_18_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_18_VAL_param1 34013222
#define DT_N_S_keymap_S_3_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_19_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_19_VAL_param1 34013223
#define DT_N_S_keymap_S_3_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_20_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_21_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_22_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_23_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_24_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_25_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_26_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_27_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_28_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_28_VAL_param1 34013229
#define DT_N_S_keymap_S_3_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_29_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_29_VAL_param1 34013230
#define DT_N_S_keymap_S_3_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_30_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_31_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_32_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_33_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_34_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_35_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_3_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_3, bindings, 0) \
	fn(DT_N_S_keymap_S_3, bindings, 1) \
	fn(DT_N_S_keymap_S_3, bindings, 2) \
	fn(DT_N_S_keymap_S_3, bindings, 3) \
	fn(DT_N_S_keymap_S_3, bindings, 4) \
	fn(DT_N_S_keymap_S_3, bindings, 5) \
	fn(DT_N_S_keymap_S_3, bindings, 6) \
	fn(DT_N_S_keymap_S_3, bindings, 7) \
	fn(DT_N_S_keymap_S_3, bindings, 8) \
	fn(DT_N_S_keymap_S_3, bindings, 9) \
	fn(DT_N_S_keymap_S_3, bindings, 10) \
	fn(DT_N_S_keymap_S_3, bindings, 11) \
	fn(DT_N_S_keymap_S_3, bindings, 12) \
	fn(DT_N_S_keymap_S_3, bindings, 13) \
	fn(DT_N_S_keymap_S_3, bindings, 14) \
	fn(DT_N_S_keymap_S_3, bindings, 15) \
	fn(DT_N_S_keymap_S_3, bindings, 16) \
	fn(DT_N_S_keymap_S_3, bindings, 17) \
	fn(DT_N_S_keymap_S_3, bindings, 18) \
	fn(DT_N_S_keymap_S_3, bindings, 19) \
	fn(DT_N_S_keymap_S_3, bindings, 20) \
	fn(DT_N_S_keymap_S_3, bindings, 21) \
	fn(DT_N_S_keymap_S_3, bindings, 22) \
	fn(DT_N_S_keymap_S_3, bindings, 23) \
	fn(DT_N_S_keymap_S_3, bindings, 24) \
	fn(DT_N_S_keymap_S_3, bindings, 25) \
	fn(DT_N_S_keymap_S_3, bindings, 26) \
	fn(DT_N_S_keymap_S_3, bindings, 27) \
	fn(DT_N_S_keymap_S_3, bindings, 28) \
	fn(DT_N_S_keymap_S_3, bindings, 29) \
	fn(DT_N_S_keymap_S_3, bindings, 30) \
	fn(DT_N_S_keymap_S_3, bindings, 31) \
	fn(DT_N_S_keymap_S_3, bindings, 32) \
	fn(DT_N_S_keymap_S_3, bindings, 33) \
	fn(DT_N_S_keymap_S_3, bindings, 34) \
	fn(DT_N_S_keymap_S_3, bindings, 35)
#define DT_N_S_keymap_S_3_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_3, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 35)
#define DT_N_S_keymap_S_3_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_3, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 35, __VA_ARGS__)
#define DT_N_S_keymap_S_3_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_3, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_3, bindings, 35, __VA_ARGS__)
#define DT_N_S_keymap_S_3_P_bindings_LEN 36
#define DT_N_S_keymap_S_3_P_bindings_EXISTS 1

/*
 * Devicetree node: /keymap/4
 *
 * Node identifier: DT_N_S_keymap_S_4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_4_PATH "/keymap/4"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_4_FULL_NAME "4"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_4_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_4_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_4_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_4_ORD 102
#define DT_N_S_keymap_S_4_ORD_STR_SORTABLE 00102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_4_REQUIRES_ORDS \
	30, /* /behaviors/key_press */ \
	80, /* /keymap */ \
	93, /* /behaviors/lalt_tap_dance */ \
	94, /* /behaviors/lctrl_tap_dance */ \
	95, /* /behaviors/lgui_tap_dance */ \
	96, /* /behaviors/lshft_tap_dance */ \
	97, /* /behaviors/transparent */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_4_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_4_REG_NUM 0
#define DT_N_S_keymap_S_4_RANGES_NUM 0
#define DT_N_S_keymap_S_4_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_4_IRQ_NUM 0
#define DT_N_S_keymap_S_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_4_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_0_VAL_param1 458810
#define DT_N_S_keymap_S_4_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_1_VAL_param1 458811
#define DT_N_S_keymap_S_4_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_2_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_2_VAL_param1 458812
#define DT_N_S_keymap_S_4_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_3_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_3_VAL_param1 458813
#define DT_N_S_keymap_S_4_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_4_VAL_param1 458814
#define DT_N_S_keymap_S_4_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_5_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_5_VAL_param1 458815
#define DT_N_S_keymap_S_4_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_6_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_6_VAL_param1 458816
#define DT_N_S_keymap_S_4_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_7_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_7_VAL_param1 458817
#define DT_N_S_keymap_S_4_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_8_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_8_VAL_param1 458818
#define DT_N_S_keymap_S_4_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_9_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_9_VAL_param1 458819
#define DT_N_S_keymap_S_4_P_bindings_IDX_9_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_10_PH DT_N_S_behaviors_S_lshft_tap_dance
#define DT_N_S_keymap_S_4_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_11_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_12_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_13_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_14_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_15_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_16_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_17_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_18_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_18_VAL_param1 458820
#define DT_N_S_keymap_S_4_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_19_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_19_VAL_param1 458821
#define DT_N_S_keymap_S_4_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_20_PH DT_N_S_behaviors_S_lctrl_tap_dance
#define DT_N_S_keymap_S_4_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_21_PH DT_N_S_behaviors_S_lgui_tap_dance
#define DT_N_S_keymap_S_4_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_22_PH DT_N_S_behaviors_S_lalt_tap_dance
#define DT_N_S_keymap_S_4_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_23_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_24_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_25_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_26_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_27_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_28_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_29_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_30_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_31_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_32_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_33_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_34_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_35_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_4_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_4, bindings, 0) \
	fn(DT_N_S_keymap_S_4, bindings, 1) \
	fn(DT_N_S_keymap_S_4, bindings, 2) \
	fn(DT_N_S_keymap_S_4, bindings, 3) \
	fn(DT_N_S_keymap_S_4, bindings, 4) \
	fn(DT_N_S_keymap_S_4, bindings, 5) \
	fn(DT_N_S_keymap_S_4, bindings, 6) \
	fn(DT_N_S_keymap_S_4, bindings, 7) \
	fn(DT_N_S_keymap_S_4, bindings, 8) \
	fn(DT_N_S_keymap_S_4, bindings, 9) \
	fn(DT_N_S_keymap_S_4, bindings, 10) \
	fn(DT_N_S_keymap_S_4, bindings, 11) \
	fn(DT_N_S_keymap_S_4, bindings, 12) \
	fn(DT_N_S_keymap_S_4, bindings, 13) \
	fn(DT_N_S_keymap_S_4, bindings, 14) \
	fn(DT_N_S_keymap_S_4, bindings, 15) \
	fn(DT_N_S_keymap_S_4, bindings, 16) \
	fn(DT_N_S_keymap_S_4, bindings, 17) \
	fn(DT_N_S_keymap_S_4, bindings, 18) \
	fn(DT_N_S_keymap_S_4, bindings, 19) \
	fn(DT_N_S_keymap_S_4, bindings, 20) \
	fn(DT_N_S_keymap_S_4, bindings, 21) \
	fn(DT_N_S_keymap_S_4, bindings, 22) \
	fn(DT_N_S_keymap_S_4, bindings, 23) \
	fn(DT_N_S_keymap_S_4, bindings, 24) \
	fn(DT_N_S_keymap_S_4, bindings, 25) \
	fn(DT_N_S_keymap_S_4, bindings, 26) \
	fn(DT_N_S_keymap_S_4, bindings, 27) \
	fn(DT_N_S_keymap_S_4, bindings, 28) \
	fn(DT_N_S_keymap_S_4, bindings, 29) \
	fn(DT_N_S_keymap_S_4, bindings, 30) \
	fn(DT_N_S_keymap_S_4, bindings, 31) \
	fn(DT_N_S_keymap_S_4, bindings, 32) \
	fn(DT_N_S_keymap_S_4, bindings, 33) \
	fn(DT_N_S_keymap_S_4, bindings, 34) \
	fn(DT_N_S_keymap_S_4, bindings, 35)
#define DT_N_S_keymap_S_4_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_4, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 35)
#define DT_N_S_keymap_S_4_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_4, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 35, __VA_ARGS__)
#define DT_N_S_keymap_S_4_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_4, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_4, bindings, 35, __VA_ARGS__)
#define DT_N_S_keymap_S_4_P_bindings_LEN 36
#define DT_N_S_keymap_S_4_P_bindings_EXISTS 1

/*
 * Devicetree node: /keymap/5
 *
 * Node identifier: DT_N_S_keymap_S_5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_5_PATH "/keymap/5"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_5_FULL_NAME "5"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_5_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_5_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_5_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_5_ORD 103
#define DT_N_S_keymap_S_5_ORD_STR_SORTABLE 00103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_5_REQUIRES_ORDS \
	30, /* /behaviors/key_press */ \
	80, /* /keymap */ \
	93, /* /behaviors/lalt_tap_dance */ \
	94, /* /behaviors/lctrl_tap_dance */ \
	95, /* /behaviors/lgui_tap_dance */ \
	96, /* /behaviors/lshft_tap_dance */ \
	97, /* /behaviors/transparent */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_5_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_5_REG_NUM 0
#define DT_N_S_keymap_S_5_RANGES_NUM 0
#define DT_N_S_keymap_S_5_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_5_IRQ_NUM 0
#define DT_N_S_keymap_S_5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_5_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_0_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_1_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_2_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_3_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_4_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_5_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_6_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_7_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_8_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_9_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_10_PH DT_N_S_behaviors_S_lshft_tap_dance
#define DT_N_S_keymap_S_5_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_11_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_12_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_13_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_14_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_15_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_15_VAL_param1 17236048
#define DT_N_S_keymap_S_5_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_16_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_16_VAL_param1 17236049
#define DT_N_S_keymap_S_5_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_17_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_17_VAL_param1 17236050
#define DT_N_S_keymap_S_5_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_18_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_18_VAL_param1 17236047
#define DT_N_S_keymap_S_5_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_19_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_20_PH DT_N_S_behaviors_S_lctrl_tap_dance
#define DT_N_S_keymap_S_5_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_21_PH DT_N_S_behaviors_S_lgui_tap_dance
#define DT_N_S_keymap_S_5_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_22_PH DT_N_S_behaviors_S_lalt_tap_dance
#define DT_N_S_keymap_S_5_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_23_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_24_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_25_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_25_VAL_param1 17236042
#define DT_N_S_keymap_S_5_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_26_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_26_VAL_param1 17236046
#define DT_N_S_keymap_S_5_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_27_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_27_VAL_param1 17236043
#define DT_N_S_keymap_S_5_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_28_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_28_VAL_param1 17236045
#define DT_N_S_keymap_S_5_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_29_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_30_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_31_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_32_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_33_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_34_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_35_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_5_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_5, bindings, 0) \
	fn(DT_N_S_keymap_S_5, bindings, 1) \
	fn(DT_N_S_keymap_S_5, bindings, 2) \
	fn(DT_N_S_keymap_S_5, bindings, 3) \
	fn(DT_N_S_keymap_S_5, bindings, 4) \
	fn(DT_N_S_keymap_S_5, bindings, 5) \
	fn(DT_N_S_keymap_S_5, bindings, 6) \
	fn(DT_N_S_keymap_S_5, bindings, 7) \
	fn(DT_N_S_keymap_S_5, bindings, 8) \
	fn(DT_N_S_keymap_S_5, bindings, 9) \
	fn(DT_N_S_keymap_S_5, bindings, 10) \
	fn(DT_N_S_keymap_S_5, bindings, 11) \
	fn(DT_N_S_keymap_S_5, bindings, 12) \
	fn(DT_N_S_keymap_S_5, bindings, 13) \
	fn(DT_N_S_keymap_S_5, bindings, 14) \
	fn(DT_N_S_keymap_S_5, bindings, 15) \
	fn(DT_N_S_keymap_S_5, bindings, 16) \
	fn(DT_N_S_keymap_S_5, bindings, 17) \
	fn(DT_N_S_keymap_S_5, bindings, 18) \
	fn(DT_N_S_keymap_S_5, bindings, 19) \
	fn(DT_N_S_keymap_S_5, bindings, 20) \
	fn(DT_N_S_keymap_S_5, bindings, 21) \
	fn(DT_N_S_keymap_S_5, bindings, 22) \
	fn(DT_N_S_keymap_S_5, bindings, 23) \
	fn(DT_N_S_keymap_S_5, bindings, 24) \
	fn(DT_N_S_keymap_S_5, bindings, 25) \
	fn(DT_N_S_keymap_S_5, bindings, 26) \
	fn(DT_N_S_keymap_S_5, bindings, 27) \
	fn(DT_N_S_keymap_S_5, bindings, 28) \
	fn(DT_N_S_keymap_S_5, bindings, 29) \
	fn(DT_N_S_keymap_S_5, bindings, 30) \
	fn(DT_N_S_keymap_S_5, bindings, 31) \
	fn(DT_N_S_keymap_S_5, bindings, 32) \
	fn(DT_N_S_keymap_S_5, bindings, 33) \
	fn(DT_N_S_keymap_S_5, bindings, 34) \
	fn(DT_N_S_keymap_S_5, bindings, 35)
#define DT_N_S_keymap_S_5_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_5, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 35)
#define DT_N_S_keymap_S_5_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_5, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 35, __VA_ARGS__)
#define DT_N_S_keymap_S_5_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_5, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_5, bindings, 35, __VA_ARGS__)
#define DT_N_S_keymap_S_5_P_bindings_LEN 36
#define DT_N_S_keymap_S_5_P_bindings_EXISTS 1

/*
 * Devicetree node: /keymap/6
 *
 * Node identifier: DT_N_S_keymap_S_6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_6_PATH "/keymap/6"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_6_FULL_NAME "6"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_6_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_6_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_6_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_6_ORD 104
#define DT_N_S_keymap_S_6_ORD_STR_SORTABLE 00104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_6_REQUIRES_ORDS \
	30, /* /behaviors/key_press */ \
	80, /* /keymap */ \
	93, /* /behaviors/lalt_tap_dance */ \
	94, /* /behaviors/lctrl_tap_dance */ \
	95, /* /behaviors/lgui_tap_dance */ \
	96, /* /behaviors/lshft_tap_dance */ \
	97, /* /behaviors/transparent */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_6_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_6_REG_NUM 0
#define DT_N_S_keymap_S_6_RANGES_NUM 0
#define DT_N_S_keymap_S_6_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_6_IRQ_NUM 0
#define DT_N_S_keymap_S_6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_6_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_0_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_1_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_2_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_3_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_4_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_5_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_6_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_7_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_8_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_9_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_10_PH DT_N_S_behaviors_S_lshft_tap_dance
#define DT_N_S_keymap_S_6_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_11_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_12_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_13_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_14_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_15_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_15_VAL_param1 50790480
#define DT_N_S_keymap_S_6_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_16_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_16_VAL_param1 50790481
#define DT_N_S_keymap_S_6_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_17_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_17_VAL_param1 50790482
#define DT_N_S_keymap_S_6_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_18_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_18_VAL_param1 50790479
#define DT_N_S_keymap_S_6_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_19_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_20_PH DT_N_S_behaviors_S_lctrl_tap_dance
#define DT_N_S_keymap_S_6_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_21_PH DT_N_S_behaviors_S_lgui_tap_dance
#define DT_N_S_keymap_S_6_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_22_PH DT_N_S_behaviors_S_lalt_tap_dance
#define DT_N_S_keymap_S_6_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_23_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_24_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_25_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_25_VAL_param1 50790474
#define DT_N_S_keymap_S_6_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_26_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_26_VAL_param1 50790478
#define DT_N_S_keymap_S_6_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_27_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_27_VAL_param1 50790475
#define DT_N_S_keymap_S_6_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_28_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_28_VAL_param1 50790477
#define DT_N_S_keymap_S_6_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_29_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_30_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_31_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_32_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_33_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_34_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_35_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_6_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_6, bindings, 0) \
	fn(DT_N_S_keymap_S_6, bindings, 1) \
	fn(DT_N_S_keymap_S_6, bindings, 2) \
	fn(DT_N_S_keymap_S_6, bindings, 3) \
	fn(DT_N_S_keymap_S_6, bindings, 4) \
	fn(DT_N_S_keymap_S_6, bindings, 5) \
	fn(DT_N_S_keymap_S_6, bindings, 6) \
	fn(DT_N_S_keymap_S_6, bindings, 7) \
	fn(DT_N_S_keymap_S_6, bindings, 8) \
	fn(DT_N_S_keymap_S_6, bindings, 9) \
	fn(DT_N_S_keymap_S_6, bindings, 10) \
	fn(DT_N_S_keymap_S_6, bindings, 11) \
	fn(DT_N_S_keymap_S_6, bindings, 12) \
	fn(DT_N_S_keymap_S_6, bindings, 13) \
	fn(DT_N_S_keymap_S_6, bindings, 14) \
	fn(DT_N_S_keymap_S_6, bindings, 15) \
	fn(DT_N_S_keymap_S_6, bindings, 16) \
	fn(DT_N_S_keymap_S_6, bindings, 17) \
	fn(DT_N_S_keymap_S_6, bindings, 18) \
	fn(DT_N_S_keymap_S_6, bindings, 19) \
	fn(DT_N_S_keymap_S_6, bindings, 20) \
	fn(DT_N_S_keymap_S_6, bindings, 21) \
	fn(DT_N_S_keymap_S_6, bindings, 22) \
	fn(DT_N_S_keymap_S_6, bindings, 23) \
	fn(DT_N_S_keymap_S_6, bindings, 24) \
	fn(DT_N_S_keymap_S_6, bindings, 25) \
	fn(DT_N_S_keymap_S_6, bindings, 26) \
	fn(DT_N_S_keymap_S_6, bindings, 27) \
	fn(DT_N_S_keymap_S_6, bindings, 28) \
	fn(DT_N_S_keymap_S_6, bindings, 29) \
	fn(DT_N_S_keymap_S_6, bindings, 30) \
	fn(DT_N_S_keymap_S_6, bindings, 31) \
	fn(DT_N_S_keymap_S_6, bindings, 32) \
	fn(DT_N_S_keymap_S_6, bindings, 33) \
	fn(DT_N_S_keymap_S_6, bindings, 34) \
	fn(DT_N_S_keymap_S_6, bindings, 35)
#define DT_N_S_keymap_S_6_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_6, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 35)
#define DT_N_S_keymap_S_6_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_6, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 35, __VA_ARGS__)
#define DT_N_S_keymap_S_6_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_6, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_6, bindings, 35, __VA_ARGS__)
#define DT_N_S_keymap_S_6_P_bindings_LEN 36
#define DT_N_S_keymap_S_6_P_bindings_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 105
#define DT_N_S_leds_ORD_STR_SORTABLE 00105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	106, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_0
 *
 * Node identifier: DT_N_S_leds_S_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_0_PATH "/leds/led_0"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_0_FULL_NAME "led_0"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_0_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_0_ORD 106
#define DT_N_S_leds_S_led_0_ORD_STR_SORTABLE 00106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_0_REQUIRES_ORDS \
	2, /* /soc/gpio@50000000 */ \
	105, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_0_EXISTS 1
#define DT_N_NODELABEL_blue_led DT_N_S_leds_S_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_0_REG_NUM 0
#define DT_N_S_leds_S_led_0_RANGES_NUM 0
#define DT_N_S_leds_S_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin 15
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_led_0_P_gpios_EXISTS 1

/*
 * Devicetree node: /pin-controller
 *
 * Node identifier: DT_N_S_pin_controller
 *
 * Binding (compatible = nordic,nrf-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/nordic,nrf-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_PATH "/pin-controller"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_FULL_NAME "pin-controller"

/* Node parent (/) identifier: */
#define DT_N_S_pin_controller_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_sleep)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_sleep)
#define DT_N_S_pin_controller_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_sleep)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_sleep)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_ORD 107
#define DT_N_S_pin_controller_ORD_STR_SORTABLE 00107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_SUPPORTS_ORDS \
	108, /* /pin-controller/i2c0_default */ \
	110, /* /pin-controller/i2c0_sleep */ \
	112, /* /pin-controller/uart0_default */ \
	115, /* /pin-controller/uart0_sleep */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_EXISTS 1
#define DT_N_INST_0_nordic_nrf_pinctrl DT_N_S_pin_controller
#define DT_N_NODELABEL_pinctrl         DT_N_S_pin_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_REG_NUM 0
#define DT_N_S_pin_controller_RANGES_NUM 0
#define DT_N_S_pin_controller_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_IRQ_NUM 0
#define DT_N_S_pin_controller_COMPAT_MATCHES_nordic_nrf_pinctrl 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0 "nrf-pinctrl"
#define DT_N_S_pin_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_P_compatible {"nordic,nrf-pinctrl"}
#define DT_N_S_pin_controller_P_compatible_IDX_0 "nordic,nrf-pinctrl"
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PINCTRL
#define DT_N_S_pin_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_LEN 1
#define DT_N_S_pin_controller_P_compatible_EXISTS 1
#define DT_N_S_pin_controller_P_wakeup_source 0
#define DT_N_S_pin_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2c0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_default_PATH "/pin-controller/i2c0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_default_FULL_NAME "i2c0_default"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2c0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_default_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_default_ORD 108
#define DT_N_S_pin_controller_S_i2c0_default_ORD_STR_SORTABLE 00108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_default_REQUIRES_ORDS \
	107, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_default_SUPPORTS_ORDS \
	109, /* /pin-controller/i2c0_default/group1 */ \
	132, /* /soc/i2c@40003000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_default_EXISTS 1
#define DT_N_NODELABEL_i2c0_default DT_N_S_pin_controller_S_i2c0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/i2c0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PATH "/pin-controller/i2c0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/i2c0_default) identifier: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PARENT DT_N_S_pin_controller_S_i2c0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_ORD 109
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_ORD_STR_SORTABLE 00109

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_REQUIRES_ORDS \
	108, /* /pin-controller/i2c0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels {786449 /* 0xc0011 */, 720916 /* 0xb0014 */}
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_IDX_0 786449
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_IDX_1 720916
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_LEN 2
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_low_power_enable 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2c0_sleep
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_sleep_PATH "/pin-controller/i2c0_sleep"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_sleep_FULL_NAME "i2c0_sleep"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2c0_sleep_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_sleep_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_sleep_ORD 110
#define DT_N_S_pin_controller_S_i2c0_sleep_ORD_STR_SORTABLE 00110

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_sleep_REQUIRES_ORDS \
	107, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_sleep_SUPPORTS_ORDS \
	111, /* /pin-controller/i2c0_sleep/group1 */ \
	132, /* /soc/i2c@40003000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_sleep_EXISTS 1
#define DT_N_NODELABEL_i2c0_sleep DT_N_S_pin_controller_S_i2c0_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_sleep_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_sleep_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_sleep_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/i2c0_sleep/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_sleep_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_PATH "/pin-controller/i2c0_sleep/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/i2c0_sleep) identifier: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_PARENT DT_N_S_pin_controller_S_i2c0_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_ORD 111
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_ORD_STR_SORTABLE 00111

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_REQUIRES_ORDS \
	110, /* /pin-controller/i2c0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels {786449 /* 0xc0011 */, 720916 /* 0xb0014 */}
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_IDX_0 786449
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_IDX_1 720916
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_LEN 2
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_low_power_enable 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_PATH "/pin-controller/uart0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME "uart0_default"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_ORD 112
#define DT_N_S_pin_controller_S_uart0_default_ORD_STR_SORTABLE 00112

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_REQUIRES_ORDS \
	107, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_SUPPORTS_ORDS \
	113, /* /pin-controller/uart0_default/group1 */ \
	114, /* /pin-controller/uart0_default/group2 */ \
	160, /* /soc/uart@40002000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_EXISTS 1
#define DT_N_NODELABEL_uart0_default DT_N_S_pin_controller_S_uart0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PATH "/pin-controller/uart0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/uart0_default) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PARENT DT_N_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_ORD 113
#define DT_N_S_pin_controller_S_uart0_default_S_group1_ORD_STR_SORTABLE 00113

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_REQUIRES_ORDS \
	112, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels {65544 /* 0x10008 */}
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_IDX_0 65544
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_LEN 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_low_power_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PATH "/pin-controller/uart0_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FULL_NAME "group2"

/* Node parent (/pin-controller/uart0_default) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PARENT DT_N_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_ORD 114
#define DT_N_S_pin_controller_S_uart0_default_S_group2_ORD_STR_SORTABLE 00114

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_REQUIRES_ORDS \
	112, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels {6 /* 0x6 */}
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_IDX_0 6
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, psels, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, psels, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_LEN 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_nordic_invert 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_low_power_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_sleep
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_sleep_PATH "/pin-controller/uart0_sleep"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_sleep_FULL_NAME "uart0_sleep"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart0_sleep_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_sleep_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_sleep_ORD 115
#define DT_N_S_pin_controller_S_uart0_sleep_ORD_STR_SORTABLE 00115

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_sleep_REQUIRES_ORDS \
	107, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_sleep_SUPPORTS_ORDS \
	116, /* /pin-controller/uart0_sleep/group1 */ \
	160, /* /soc/uart@40002000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_sleep_EXISTS 1
#define DT_N_NODELABEL_uart0_sleep DT_N_S_pin_controller_S_uart0_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_sleep_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_sleep_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart0_sleep/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_sleep_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_PATH "/pin-controller/uart0_sleep/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/uart0_sleep) identifier: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_PARENT DT_N_S_pin_controller_S_uart0_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_ORD 116
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_ORD_STR_SORTABLE 00116

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_REQUIRES_ORDS \
	115, /* /pin-controller/uart0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels {65544 /* 0x10008 */, 6 /* 0x6 */}
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_0 65544
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_1 6
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_LEN 2
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_low_power_enable 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /soc/acl@4001e000
 *
 * Node identifier: DT_N_S_soc_S_acl_4001e000
 *
 * Binding (compatible = nordic,nrf-acl):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-acl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_acl_4001e000_PATH "/soc/acl@4001e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_acl_4001e000_FULL_NAME "acl@4001e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_acl_4001e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_acl_4001e000_CHILD_IDX 38

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_acl_4001e000_ORD 117
#define DT_N_S_soc_S_acl_4001e000_ORD_STR_SORTABLE 00117

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_acl_4001e000_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_acl_4001e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_acl_4001e000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_acl DT_N_S_soc_S_acl_4001e000
#define DT_N_NODELABEL_acl         DT_N_S_soc_S_acl_4001e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_acl_4001e000_REG_NUM 1
#define DT_N_S_soc_S_acl_4001e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_REG_IDX_0_VAL_ADDRESS 1073864704 /* 0x4001e000 */
#define DT_N_S_soc_S_acl_4001e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_acl_4001e000_RANGES_NUM 0
#define DT_N_S_soc_S_acl_4001e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_acl_4001e000_IRQ_NUM 0
#define DT_N_S_soc_S_acl_4001e000_COMPAT_MATCHES_nordic_nrf_acl 1
#define DT_N_S_soc_S_acl_4001e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_acl_4001e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_COMPAT_MODEL_IDX_0 "nrf-acl"
#define DT_N_S_soc_S_acl_4001e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_acl_4001e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_acl_4001e000_P_reg {1073864704 /* 0x4001e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_acl_4001e000_P_reg_IDX_0 1073864704
#define DT_N_S_soc_S_acl_4001e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_acl_4001e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_status "okay"
#define DT_N_S_soc_S_acl_4001e000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_acl_4001e000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_acl_4001e000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_acl_4001e000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_acl_4001e000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_acl_4001e000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_acl_4001e000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_acl_4001e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_acl_4001e000, status, 0)
#define DT_N_S_soc_S_acl_4001e000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_acl_4001e000, status, 0)
#define DT_N_S_soc_S_acl_4001e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_acl_4001e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_acl_4001e000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_acl_4001e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_acl_4001e000_P_status_LEN 1
#define DT_N_S_soc_S_acl_4001e000_P_status_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_compatible {"nordic,nrf-acl"}
#define DT_N_S_soc_S_acl_4001e000_P_compatible_IDX_0 "nordic,nrf-acl"
#define DT_N_S_soc_S_acl_4001e000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-acl
#define DT_N_S_soc_S_acl_4001e000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_acl
#define DT_N_S_soc_S_acl_4001e000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_ACL
#define DT_N_S_soc_S_acl_4001e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_acl_4001e000, compatible, 0)
#define DT_N_S_soc_S_acl_4001e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_acl_4001e000, compatible, 0)
#define DT_N_S_soc_S_acl_4001e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_acl_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_acl_4001e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_acl_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_acl_4001e000_P_compatible_LEN 1
#define DT_N_S_soc_S_acl_4001e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_wakeup_source 0
#define DT_N_S_soc_S_acl_4001e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_acl_4001e000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/adc@40007000
 *
 * Node identifier: DT_N_S_soc_S_adc_40007000
 *
 * Binding (compatible = nordic,nrf-saadc):
 *   $ZEPHYR_BASE/dts/bindings/adc/nordic,nrf-saadc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_40007000_PATH "/soc/adc@40007000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_40007000_FULL_NAME "adc@40007000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_40007000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_40007000_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_40007000_ORD 118
#define DT_N_S_soc_S_adc_40007000_ORD_STR_SORTABLE 00118

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_40007000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_40007000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_40007000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_saadc DT_N_S_soc_S_adc_40007000
#define DT_N_NODELABEL_adc           DT_N_S_soc_S_adc_40007000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_40007000_REG_NUM 1
#define DT_N_S_soc_S_adc_40007000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_REG_IDX_0_VAL_ADDRESS 1073770496 /* 0x40007000 */
#define DT_N_S_soc_S_adc_40007000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_adc_40007000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_40007000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_40007000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_irq 7
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_COMPAT_MATCHES_nordic_nrf_saadc 1
#define DT_N_S_soc_S_adc_40007000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_adc_40007000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_COMPAT_MODEL_IDX_0 "nrf-saadc"
#define DT_N_S_soc_S_adc_40007000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_40007000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_40007000_P_reg {1073770496 /* 0x40007000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_0 1073770496
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts {7 /* 0x7 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_0 7
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_status "okay"
#define DT_N_S_soc_S_adc_40007000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_adc_40007000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_40007000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_40007000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_adc_40007000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_40007000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007000, status, 0)
#define DT_N_S_soc_S_adc_40007000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40007000, status, 0)
#define DT_N_S_soc_S_adc_40007000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40007000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_status_LEN 1
#define DT_N_S_soc_S_adc_40007000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_compatible {"nordic,nrf-saadc"}
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0 "nordic,nrf-saadc"
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-saadc
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_saadc
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SAADC
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007000, compatible, 0)
#define DT_N_S_soc_S_adc_40007000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40007000, compatible, 0)
#define DT_N_S_soc_S_adc_40007000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40007000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_40007000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_40007000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_40007000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ccm@4000f000
 *
 * Node identifier: DT_N_S_soc_S_ccm_4000f000
 *
 * Binding (compatible = nordic,nrf-ccm):
 *   $ZEPHYR_BASE/dts/bindings/crypto/nordic,nrf-ccm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ccm_4000f000_PATH "/soc/ccm@4000f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ccm_4000f000_FULL_NAME "ccm@4000f000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ccm_4000f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ccm_4000f000_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ccm_4000f000_ORD 119
#define DT_N_S_soc_S_ccm_4000f000_ORD_STR_SORTABLE 00119

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ccm_4000f000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ccm_4000f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ccm_4000f000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ccm DT_N_S_soc_S_ccm_4000f000
#define DT_N_NODELABEL_ccm         DT_N_S_soc_S_ccm_4000f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ccm_4000f000_REG_NUM 1
#define DT_N_S_soc_S_ccm_4000f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_REG_IDX_0_VAL_ADDRESS 1073803264 /* 0x4000f000 */
#define DT_N_S_soc_S_ccm_4000f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ccm_4000f000_RANGES_NUM 0
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ccm_4000f000_IRQ_NUM 1
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_VAL_irq 15
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_COMPAT_MATCHES_nordic_nrf_ccm 1
#define DT_N_S_soc_S_ccm_4000f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_ccm_4000f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_COMPAT_MODEL_IDX_0 "nrf-ccm"
#define DT_N_S_soc_S_ccm_4000f000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ccm_4000f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ccm_4000f000_P_reg {1073803264 /* 0x4000f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ccm_4000f000_P_reg_IDX_0 1073803264
#define DT_N_S_soc_S_ccm_4000f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ccm_4000f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts {15 /* 0xf */, 1 /* 0x1 */}
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts_IDX_0 15
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_length_field_length_8_bits 1
#define DT_N_S_soc_S_ccm_4000f000_P_length_field_length_8_bits_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_headermask_supported 0
#define DT_N_S_soc_S_ccm_4000f000_P_headermask_supported_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_status "okay"
#define DT_N_S_soc_S_ccm_4000f000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ccm_4000f000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ccm_4000f000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ccm_4000f000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ccm_4000f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ccm_4000f000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ccm_4000f000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ccm_4000f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ccm_4000f000, status, 0)
#define DT_N_S_soc_S_ccm_4000f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ccm_4000f000, status, 0)
#define DT_N_S_soc_S_ccm_4000f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ccm_4000f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4000f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ccm_4000f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4000f000_P_status_LEN 1
#define DT_N_S_soc_S_ccm_4000f000_P_status_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_compatible {"nordic,nrf-ccm"}
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_IDX_0 "nordic,nrf-ccm"
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ccm
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ccm
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_CCM
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ccm_4000f000, compatible, 0)
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ccm_4000f000, compatible, 0)
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ccm_4000f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ccm_4000f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_LEN 1
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_wakeup_source 0
#define DT_N_S_soc_S_ccm_4000f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ccm_4000f000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/clock@40000000
 *
 * Node identifier: DT_N_S_soc_S_clock_40000000
 *
 * Binding (compatible = nordic,nrf-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/nordic,nrf-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_clock_40000000_PATH "/soc/clock@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_clock_40000000_FULL_NAME "clock@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_clock_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_clock_40000000_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_clock_40000000_ORD 120
#define DT_N_S_soc_S_clock_40000000_ORD_STR_SORTABLE 00120

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_clock_40000000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_clock_40000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_clock_40000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_clock DT_N_S_soc_S_clock_40000000
#define DT_N_NODELABEL_clock         DT_N_S_soc_S_clock_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_clock_40000000_REG_NUM 1
#define DT_N_S_soc_S_clock_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_clock_40000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_clock_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_clock_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_clock_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_COMPAT_MATCHES_nordic_nrf_clock 1
#define DT_N_S_soc_S_clock_40000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_clock_40000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_COMPAT_MODEL_IDX_0 "nrf-clock"
#define DT_N_S_soc_S_clock_40000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_clock_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_clock_40000000_P_reg {1073741824 /* 0x40000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts {0 /* 0x0 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_status "okay"
#define DT_N_S_soc_S_clock_40000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_clock_40000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_clock_40000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_40000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_clock_40000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_40000000, status, 0)
#define DT_N_S_soc_S_clock_40000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_40000000, status, 0)
#define DT_N_S_soc_S_clock_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_status_LEN 1
#define DT_N_S_soc_S_clock_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_compatible {"nordic,nrf-clock"}
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0 "nordic,nrf-clock"
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-clock
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_clock
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_CLOCK
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_40000000, compatible, 0)
#define DT_N_S_soc_S_clock_40000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_40000000, compatible, 0)
#define DT_N_S_soc_S_clock_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_clock_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_clock_40000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_clock_40000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/comparator@40013000
 *
 * Node identifier: DT_N_S_soc_S_comparator_40013000
 *
 * Binding (compatible = nordic,nrf-comp):
 *   $ZEPHYR_BASE/dts/bindings/adc/nordic,nrf-comp.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_comparator_40013000_PATH "/soc/comparator@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_comparator_40013000_FULL_NAME "comparator@40013000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_comparator_40013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_comparator_40013000_CHILD_IDX 27

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_comparator_40013000_ORD 121
#define DT_N_S_soc_S_comparator_40013000_ORD_STR_SORTABLE 00121

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_comparator_40013000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_comparator_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_comparator_40013000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_comp DT_N_S_soc_S_comparator_40013000
#define DT_N_NODELABEL_comp         DT_N_S_soc_S_comparator_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_comparator_40013000_REG_NUM 1
#define DT_N_S_soc_S_comparator_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_comparator_40013000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_comparator_40013000_RANGES_NUM 0
#define DT_N_S_soc_S_comparator_40013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_comparator_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_COMPAT_MATCHES_nordic_nrf_comp 1
#define DT_N_S_soc_S_comparator_40013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_comparator_40013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_COMPAT_MODEL_IDX_0 "nrf-comp"
#define DT_N_S_soc_S_comparator_40013000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_comparator_40013000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_comparator_40013000_P_reg {1073819648 /* 0x40013000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_comparator_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_comparator_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_comparator_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_interrupts {19 /* 0x13 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_comparator_40013000_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_comparator_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_comparator_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_status "disabled"
#define DT_N_S_soc_S_comparator_40013000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_comparator_40013000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_comparator_40013000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_comparator_40013000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_comparator_40013000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_comparator_40013000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_comparator_40013000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_comparator_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_comparator_40013000, status, 0)
#define DT_N_S_soc_S_comparator_40013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_comparator_40013000, status, 0)
#define DT_N_S_soc_S_comparator_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_comparator_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_comparator_40013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_comparator_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_comparator_40013000_P_status_LEN 1
#define DT_N_S_soc_S_comparator_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_compatible {"nordic,nrf-comp"}
#define DT_N_S_soc_S_comparator_40013000_P_compatible_IDX_0 "nordic,nrf-comp"
#define DT_N_S_soc_S_comparator_40013000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-comp
#define DT_N_S_soc_S_comparator_40013000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_comp
#define DT_N_S_soc_S_comparator_40013000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_COMP
#define DT_N_S_soc_S_comparator_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_comparator_40013000, compatible, 0)
#define DT_N_S_soc_S_comparator_40013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_comparator_40013000, compatible, 0)
#define DT_N_S_soc_S_comparator_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_comparator_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_comparator_40013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_comparator_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_comparator_40013000_P_compatible_LEN 1
#define DT_N_S_soc_S_comparator_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_comparator_40013000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_comparator_40013000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/crypto@5002a000
 *
 * Node identifier: DT_N_S_soc_S_crypto_5002a000
 *
 * Binding (compatible = arm,cryptocell-310):
 *   $ZEPHYR_BASE/dts/bindings/crypto/arm,cryptocell-310.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_crypto_5002a000_PATH "/soc/crypto@5002a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_crypto_5002a000_FULL_NAME "crypto@5002a000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_crypto_5002a000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_crypto_5002a000_CHILD_IDX 54

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_crypto_5002a000_ORD 122
#define DT_N_S_soc_S_crypto_5002a000_ORD_STR_SORTABLE 00122

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_crypto_5002a000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_crypto_5002a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_crypto_5002a000_EXISTS 1
#define DT_N_INST_0_nordic_cryptocell  DT_N_S_soc_S_crypto_5002a000
#define DT_N_INST_0_arm_cryptocell_310 DT_N_S_soc_S_crypto_5002a000
#define DT_N_NODELABEL_cryptocell      DT_N_S_soc_S_crypto_5002a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_crypto_5002a000_REG_NUM 2
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_VAL_ADDRESS 1342349312 /* 0x5002a000 */
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_1_VAL_ADDRESS 1342353408 /* 0x5002b000 */
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_1_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_crypto_5002a000_REG_NAME_wrapper_VAL_ADDRESS DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_crypto_5002a000_REG_NAME_wrapper_VAL_SIZE DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_crypto_5002a000_REG_NAME_core_VAL_ADDRESS DT_N_S_soc_S_crypto_5002a000_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_crypto_5002a000_REG_NAME_core_VAL_SIZE DT_N_S_soc_S_crypto_5002a000_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_crypto_5002a000_RANGES_NUM 0
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_crypto_5002a000_IRQ_NUM 1
#define DT_N_S_soc_S_crypto_5002a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_IRQ_IDX_0_VAL_irq 42
#define DT_N_S_soc_S_crypto_5002a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_crypto_5002a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MATCHES_nordic_cryptocell 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MODEL_IDX_0 "cryptocell"
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MATCHES_arm_cryptocell_310 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_VENDOR_IDX_1 "ARM Ltd."
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MODEL_IDX_1 "cryptocell-310"
#define DT_N_S_soc_S_crypto_5002a000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_crypto_5002a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_crypto_5002a000_P_reg {1342349312 /* 0x5002a000 */, 4096 /* 0x1000 */, 1342353408 /* 0x5002b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_0 1342349312
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_2 1342353408
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_3 4096
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_interrupts {42 /* 0x2a */, 1 /* 0x1 */}
#define DT_N_S_soc_S_crypto_5002a000_P_interrupts_IDX_0 42
#define DT_N_S_soc_S_crypto_5002a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_crypto_5002a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_status "disabled"
#define DT_N_S_soc_S_crypto_5002a000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_crypto_5002a000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_crypto_5002a000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_crypto_5002a000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_crypto_5002a000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_crypto_5002a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000, status, 0)
#define DT_N_S_soc_S_crypto_5002a000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_crypto_5002a000, status, 0)
#define DT_N_S_soc_S_crypto_5002a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_crypto_5002a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_status_LEN 1
#define DT_N_S_soc_S_crypto_5002a000_P_status_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_compatible {"nordic,cryptocell", "arm,cryptocell-310"}
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0 "nordic,cryptocell"
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0_STRING_UNQUOTED nordic,cryptocell
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0_STRING_TOKEN nordic_cryptocell
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_CRYPTOCELL
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_1 "arm,cryptocell-310"
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_1_STRING_UNQUOTED arm,cryptocell-310
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_1_STRING_TOKEN arm_cryptocell_310
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_1_STRING_UPPER_TOKEN ARM_CRYPTOCELL_310
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000, compatible, 0) \
	fn(DT_N_S_soc_S_crypto_5002a000, compatible, 1)
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_crypto_5002a000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_crypto_5002a000, compatible, 1)
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_crypto_5002a000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_crypto_5002a000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_LEN 2
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names {"wrapper", "core"}
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_0 "wrapper"
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_0_STRING_UNQUOTED wrapper
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_0_STRING_TOKEN wrapper
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_0_STRING_UPPER_TOKEN WRAPPER
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_1 "core"
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_1_STRING_UNQUOTED core
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_1_STRING_TOKEN core
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_1_STRING_UPPER_TOKEN CORE
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000, reg_names, 0) \
	fn(DT_N_S_soc_S_crypto_5002a000, reg_names, 1)
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_crypto_5002a000, reg_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_crypto_5002a000, reg_names, 1)
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000, reg_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_crypto_5002a000, reg_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_crypto_5002a000, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_LEN 2
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_wakeup_source 0
#define DT_N_S_soc_S_crypto_5002a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_crypto_5002a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ecb@4000e000
 *
 * Node identifier: DT_N_S_soc_S_ecb_4000e000
 *
 * Binding (compatible = nordic,nrf-ecb):
 *   $ZEPHYR_BASE/dts/bindings/crypto/nordic,nrf-ecb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ecb_4000e000_PATH "/soc/ecb@4000e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ecb_4000e000_FULL_NAME "ecb@4000e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ecb_4000e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ecb_4000e000_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ecb_4000e000_ORD 123
#define DT_N_S_soc_S_ecb_4000e000_ORD_STR_SORTABLE 00123

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ecb_4000e000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ecb_4000e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ecb_4000e000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ecb DT_N_S_soc_S_ecb_4000e000
#define DT_N_NODELABEL_ecb         DT_N_S_soc_S_ecb_4000e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ecb_4000e000_REG_NUM 1
#define DT_N_S_soc_S_ecb_4000e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_REG_IDX_0_VAL_ADDRESS 1073799168 /* 0x4000e000 */
#define DT_N_S_soc_S_ecb_4000e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ecb_4000e000_RANGES_NUM 0
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ecb_4000e000_IRQ_NUM 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_MATCHES_nordic_nrf_ecb 1
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_MODEL_IDX_0 "nrf-ecb"
#define DT_N_S_soc_S_ecb_4000e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ecb_4000e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ecb_4000e000_P_reg {1073799168 /* 0x4000e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_0 1073799168
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts {14 /* 0xe */, 1 /* 0x1 */}
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_status "okay"
#define DT_N_S_soc_S_ecb_4000e000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ecb_4000e000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ecb_4000e000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ecb_4000e000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ecb_4000e000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ecb_4000e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ecb_4000e000, status, 0)
#define DT_N_S_soc_S_ecb_4000e000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ecb_4000e000, status, 0)
#define DT_N_S_soc_S_ecb_4000e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ecb_4000e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ecb_4000e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_status_LEN 1
#define DT_N_S_soc_S_ecb_4000e000_P_status_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_compatible {"nordic,nrf-ecb"}
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0 "nordic,nrf-ecb"
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ecb
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ecb
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_ECB
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ecb_4000e000, compatible, 0)
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ecb_4000e000, compatible, 0)
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ecb_4000e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ecb_4000e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_LEN 1
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_wakeup_source 0
#define DT_N_S_soc_S_ecb_4000e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ecb_4000e000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40014000
 *
 * Node identifier: DT_N_S_soc_S_egu_40014000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40014000_PATH "/soc/egu@40014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40014000_FULL_NAME "egu@40014000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40014000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40014000_CHILD_IDX 28

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40014000_ORD 124
#define DT_N_S_soc_S_egu_40014000_ORD_STR_SORTABLE 00124

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40014000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40014000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40014000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_egu DT_N_S_soc_S_egu_40014000
#define DT_N_INST_0_nordic_nrf_swi DT_N_S_soc_S_egu_40014000
#define DT_N_NODELABEL_egu0        DT_N_S_soc_S_egu_40014000
#define DT_N_NODELABEL_swi0        DT_N_S_soc_S_egu_40014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40014000_REG_NUM 1
#define DT_N_S_soc_S_egu_40014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_REG_IDX_0_VAL_ADDRESS 1073823744 /* 0x40014000 */
#define DT_N_S_soc_S_egu_40014000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40014000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40014000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40014000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_VAL_irq 20
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40014000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40014000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40014000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40014000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40014000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40014000_P_reg {1073823744 /* 0x40014000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40014000_P_reg_IDX_0 1073823744
#define DT_N_S_soc_S_egu_40014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_interrupts {20 /* 0x14 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40014000_P_interrupts_IDX_0 20
#define DT_N_S_soc_S_egu_40014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_status "okay"
#define DT_N_S_soc_S_egu_40014000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40014000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40014000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40014000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40014000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40014000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40014000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40014000, status, 0)
#define DT_N_S_soc_S_egu_40014000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40014000, status, 0)
#define DT_N_S_soc_S_egu_40014000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40014000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40014000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40014000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40014000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40014000, compatible, 1)
#define DT_N_S_soc_S_egu_40014000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40014000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40014000, compatible, 1)
#define DT_N_S_soc_S_egu_40014000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40014000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40014000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40014000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40014000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40014000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40014000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40014000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40014000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40015000
 *
 * Node identifier: DT_N_S_soc_S_egu_40015000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40015000_PATH "/soc/egu@40015000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40015000_FULL_NAME "egu@40015000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40015000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40015000_CHILD_IDX 29

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40015000_ORD 125
#define DT_N_S_soc_S_egu_40015000_ORD_STR_SORTABLE 00125

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40015000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40015000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40015000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_egu DT_N_S_soc_S_egu_40015000
#define DT_N_INST_1_nordic_nrf_swi DT_N_S_soc_S_egu_40015000
#define DT_N_NODELABEL_egu1        DT_N_S_soc_S_egu_40015000
#define DT_N_NODELABEL_swi1        DT_N_S_soc_S_egu_40015000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40015000_REG_NUM 1
#define DT_N_S_soc_S_egu_40015000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_REG_IDX_0_VAL_ADDRESS 1073827840 /* 0x40015000 */
#define DT_N_S_soc_S_egu_40015000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40015000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40015000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40015000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_VAL_irq 21
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40015000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40015000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40015000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40015000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40015000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40015000_P_reg {1073827840 /* 0x40015000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40015000_P_reg_IDX_0 1073827840
#define DT_N_S_soc_S_egu_40015000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40015000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_interrupts {21 /* 0x15 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40015000_P_interrupts_IDX_0 21
#define DT_N_S_soc_S_egu_40015000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40015000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_status "okay"
#define DT_N_S_soc_S_egu_40015000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40015000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40015000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40015000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40015000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40015000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40015000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40015000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40015000, status, 0)
#define DT_N_S_soc_S_egu_40015000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40015000, status, 0)
#define DT_N_S_soc_S_egu_40015000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40015000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40015000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40015000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40015000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40015000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40015000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40015000, compatible, 1)
#define DT_N_S_soc_S_egu_40015000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40015000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40015000, compatible, 1)
#define DT_N_S_soc_S_egu_40015000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40015000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40015000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40015000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40015000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40015000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40015000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40015000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40015000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40015000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40016000
 *
 * Node identifier: DT_N_S_soc_S_egu_40016000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40016000_PATH "/soc/egu@40016000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40016000_FULL_NAME "egu@40016000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40016000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40016000_CHILD_IDX 30

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40016000_ORD 126
#define DT_N_S_soc_S_egu_40016000_ORD_STR_SORTABLE 00126

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40016000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40016000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40016000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_egu DT_N_S_soc_S_egu_40016000
#define DT_N_INST_2_nordic_nrf_swi DT_N_S_soc_S_egu_40016000
#define DT_N_NODELABEL_egu2        DT_N_S_soc_S_egu_40016000
#define DT_N_NODELABEL_swi2        DT_N_S_soc_S_egu_40016000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40016000_REG_NUM 1
#define DT_N_S_soc_S_egu_40016000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_REG_IDX_0_VAL_ADDRESS 1073831936 /* 0x40016000 */
#define DT_N_S_soc_S_egu_40016000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40016000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40016000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40016000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40016000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40016000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40016000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40016000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40016000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40016000_P_reg {1073831936 /* 0x40016000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40016000_P_reg_IDX_0 1073831936
#define DT_N_S_soc_S_egu_40016000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40016000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_interrupts {22 /* 0x16 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40016000_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_egu_40016000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40016000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_status "okay"
#define DT_N_S_soc_S_egu_40016000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40016000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40016000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40016000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40016000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40016000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40016000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40016000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40016000, status, 0)
#define DT_N_S_soc_S_egu_40016000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40016000, status, 0)
#define DT_N_S_soc_S_egu_40016000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40016000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40016000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40016000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40016000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40016000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40016000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40016000, compatible, 1)
#define DT_N_S_soc_S_egu_40016000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40016000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40016000, compatible, 1)
#define DT_N_S_soc_S_egu_40016000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40016000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40016000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40016000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40016000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40016000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40016000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40016000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40016000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40016000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40017000
 *
 * Node identifier: DT_N_S_soc_S_egu_40017000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40017000_PATH "/soc/egu@40017000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40017000_FULL_NAME "egu@40017000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40017000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40017000_CHILD_IDX 31

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40017000_ORD 127
#define DT_N_S_soc_S_egu_40017000_ORD_STR_SORTABLE 00127

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40017000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40017000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40017000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_egu DT_N_S_soc_S_egu_40017000
#define DT_N_INST_3_nordic_nrf_swi DT_N_S_soc_S_egu_40017000
#define DT_N_NODELABEL_egu3        DT_N_S_soc_S_egu_40017000
#define DT_N_NODELABEL_swi3        DT_N_S_soc_S_egu_40017000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40017000_REG_NUM 1
#define DT_N_S_soc_S_egu_40017000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_REG_IDX_0_VAL_ADDRESS 1073836032 /* 0x40017000 */
#define DT_N_S_soc_S_egu_40017000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40017000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40017000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40017000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_VAL_irq 23
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40017000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40017000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40017000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40017000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40017000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40017000_P_reg {1073836032 /* 0x40017000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40017000_P_reg_IDX_0 1073836032
#define DT_N_S_soc_S_egu_40017000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40017000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_interrupts {23 /* 0x17 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40017000_P_interrupts_IDX_0 23
#define DT_N_S_soc_S_egu_40017000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40017000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_status "okay"
#define DT_N_S_soc_S_egu_40017000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40017000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40017000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40017000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40017000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40017000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40017000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40017000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40017000, status, 0)
#define DT_N_S_soc_S_egu_40017000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40017000, status, 0)
#define DT_N_S_soc_S_egu_40017000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40017000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40017000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40017000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40017000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40017000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40017000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40017000, compatible, 1)
#define DT_N_S_soc_S_egu_40017000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40017000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40017000, compatible, 1)
#define DT_N_S_soc_S_egu_40017000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40017000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40017000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40017000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40017000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40017000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40017000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40017000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40017000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40017000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40018000
 *
 * Node identifier: DT_N_S_soc_S_egu_40018000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40018000_PATH "/soc/egu@40018000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40018000_FULL_NAME "egu@40018000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40018000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40018000_CHILD_IDX 32

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40018000_ORD 128
#define DT_N_S_soc_S_egu_40018000_ORD_STR_SORTABLE 00128

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40018000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40018000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40018000_EXISTS 1
#define DT_N_INST_4_nordic_nrf_egu DT_N_S_soc_S_egu_40018000
#define DT_N_INST_4_nordic_nrf_swi DT_N_S_soc_S_egu_40018000
#define DT_N_NODELABEL_egu4        DT_N_S_soc_S_egu_40018000
#define DT_N_NODELABEL_swi4        DT_N_S_soc_S_egu_40018000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40018000_REG_NUM 1
#define DT_N_S_soc_S_egu_40018000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_REG_IDX_0_VAL_ADDRESS 1073840128 /* 0x40018000 */
#define DT_N_S_soc_S_egu_40018000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40018000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40018000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40018000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40018000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40018000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40018000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40018000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40018000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40018000_P_reg {1073840128 /* 0x40018000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40018000_P_reg_IDX_0 1073840128
#define DT_N_S_soc_S_egu_40018000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40018000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_interrupts {24 /* 0x18 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40018000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_egu_40018000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40018000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_status "okay"
#define DT_N_S_soc_S_egu_40018000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40018000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40018000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40018000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40018000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40018000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40018000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40018000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40018000, status, 0)
#define DT_N_S_soc_S_egu_40018000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40018000, status, 0)
#define DT_N_S_soc_S_egu_40018000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40018000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40018000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40018000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40018000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40018000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40018000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40018000, compatible, 1)
#define DT_N_S_soc_S_egu_40018000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40018000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40018000, compatible, 1)
#define DT_N_S_soc_S_egu_40018000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40018000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40018000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40018000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40018000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40018000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40018000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40018000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40018000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40018000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40019000
 *
 * Node identifier: DT_N_S_soc_S_egu_40019000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40019000_PATH "/soc/egu@40019000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40019000_FULL_NAME "egu@40019000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40019000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40019000_CHILD_IDX 33

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40019000_ORD 129
#define DT_N_S_soc_S_egu_40019000_ORD_STR_SORTABLE 00129

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40019000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40019000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40019000_EXISTS 1
#define DT_N_INST_5_nordic_nrf_egu DT_N_S_soc_S_egu_40019000
#define DT_N_INST_5_nordic_nrf_swi DT_N_S_soc_S_egu_40019000
#define DT_N_NODELABEL_egu5        DT_N_S_soc_S_egu_40019000
#define DT_N_NODELABEL_swi5        DT_N_S_soc_S_egu_40019000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40019000_REG_NUM 1
#define DT_N_S_soc_S_egu_40019000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_REG_IDX_0_VAL_ADDRESS 1073844224 /* 0x40019000 */
#define DT_N_S_soc_S_egu_40019000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40019000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40019000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40019000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40019000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40019000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40019000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40019000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40019000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40019000_P_reg {1073844224 /* 0x40019000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40019000_P_reg_IDX_0 1073844224
#define DT_N_S_soc_S_egu_40019000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40019000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_interrupts {25 /* 0x19 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40019000_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_egu_40019000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40019000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_status "okay"
#define DT_N_S_soc_S_egu_40019000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40019000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40019000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40019000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40019000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40019000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40019000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40019000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40019000, status, 0)
#define DT_N_S_soc_S_egu_40019000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40019000, status, 0)
#define DT_N_S_soc_S_egu_40019000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40019000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40019000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40019000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40019000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40019000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40019000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40019000, compatible, 1)
#define DT_N_S_soc_S_egu_40019000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40019000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40019000, compatible, 1)
#define DT_N_S_soc_S_egu_40019000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40019000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40019000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40019000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40019000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40019000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40019000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40019000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40019000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40019000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ficr@10000000
 *
 * Node identifier: DT_N_S_soc_S_ficr_10000000
 *
 * Binding (compatible = nordic,nrf-ficr):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-ficr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ficr_10000000_PATH "/soc/ficr@10000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ficr_10000000_FULL_NAME "ficr@10000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ficr_10000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ficr_10000000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ficr_10000000_ORD 130
#define DT_N_S_soc_S_ficr_10000000_ORD_STR_SORTABLE 00130

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ficr_10000000_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ficr_10000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ficr_10000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ficr DT_N_S_soc_S_ficr_10000000
#define DT_N_NODELABEL_ficr         DT_N_S_soc_S_ficr_10000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ficr_10000000_REG_NUM 1
#define DT_N_S_soc_S_ficr_10000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_REG_IDX_0_VAL_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_soc_S_ficr_10000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ficr_10000000_RANGES_NUM 0
#define DT_N_S_soc_S_ficr_10000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ficr_10000000_IRQ_NUM 0
#define DT_N_S_soc_S_ficr_10000000_COMPAT_MATCHES_nordic_nrf_ficr 1
#define DT_N_S_soc_S_ficr_10000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_ficr_10000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_COMPAT_MODEL_IDX_0 "nrf-ficr"
#define DT_N_S_soc_S_ficr_10000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ficr_10000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ficr_10000000_P_reg {268435456 /* 0x10000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_0 268435456
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_status "okay"
#define DT_N_S_soc_S_ficr_10000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ficr_10000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ficr_10000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ficr_10000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ficr_10000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ficr_10000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ficr_10000000, status, 0)
#define DT_N_S_soc_S_ficr_10000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ficr_10000000, status, 0)
#define DT_N_S_soc_S_ficr_10000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ficr_10000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_10000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ficr_10000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_10000000_P_status_LEN 1
#define DT_N_S_soc_S_ficr_10000000_P_status_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_compatible {"nordic,nrf-ficr"}
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0 "nordic,nrf-ficr"
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ficr
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ficr
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_FICR
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ficr_10000000, compatible, 0)
#define DT_N_S_soc_S_ficr_10000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ficr_10000000, compatible, 0)
#define DT_N_S_soc_S_ficr_10000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ficr_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_10000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ficr_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_10000000_P_compatible_LEN 1
#define DT_N_S_soc_S_ficr_10000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_wakeup_source 0
#define DT_N_S_soc_S_ficr_10000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ficr_10000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpiote@40006000
 *
 * Node identifier: DT_N_S_soc_S_gpiote_40006000
 *
 * Binding (compatible = nordic,nrf-gpiote):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpiote.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpiote_40006000_PATH "/soc/gpiote@40006000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpiote_40006000_FULL_NAME "gpiote@40006000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpiote_40006000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpiote_40006000_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpiote_40006000_ORD 131
#define DT_N_S_soc_S_gpiote_40006000_ORD_STR_SORTABLE 00131

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpiote_40006000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpiote_40006000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpiote_40006000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpiote DT_N_S_soc_S_gpiote_40006000
#define DT_N_NODELABEL_gpiote         DT_N_S_soc_S_gpiote_40006000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpiote_40006000_REG_NUM 1
#define DT_N_S_soc_S_gpiote_40006000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_REG_IDX_0_VAL_ADDRESS 1073766400 /* 0x40006000 */
#define DT_N_S_soc_S_gpiote_40006000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_gpiote_40006000_RANGES_NUM 0
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpiote_40006000_IRQ_NUM 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_irq 6
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_MATCHES_nordic_nrf_gpiote 1
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_MODEL_IDX_0 "nrf-gpiote"
#define DT_N_S_soc_S_gpiote_40006000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpiote_40006000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpiote_40006000_P_reg {1073766400 /* 0x40006000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_0 1073766400
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts {6 /* 0x6 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_0 6
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_status "okay"
#define DT_N_S_soc_S_gpiote_40006000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpiote_40006000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpiote_40006000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpiote_40006000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpiote_40006000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpiote_40006000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_40006000, status, 0)
#define DT_N_S_soc_S_gpiote_40006000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpiote_40006000, status, 0)
#define DT_N_S_soc_S_gpiote_40006000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_40006000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpiote_40006000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_status_LEN 1
#define DT_N_S_soc_S_gpiote_40006000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_compatible {"nordic,nrf-gpiote"}
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0 "nordic,nrf-gpiote"
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpiote
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpiote
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPIOTE
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_40006000, compatible, 0)
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpiote_40006000, compatible, 0)
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_40006000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpiote_40006000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_wakeup_source 0
#define DT_N_S_soc_S_gpiote_40006000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpiote_40006000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000
 *
 * Binding (compatible = nordic,nrf-twi):
 *   $ZEPHYR_BASE/dts/bindings/i2c/nordic,nrf-twi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_PATH "/soc/i2c@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_FULL_NAME "i2c@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_ORD 132
#define DT_N_S_soc_S_i2c_40003000_ORD_STR_SORTABLE 00132

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	108, /* /pin-controller/i2c0_default */ \
	110, /* /pin-controller/i2c0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_twi   DT_N_S_soc_S_i2c_40003000
#define DT_N_NODELABEL_i2c0          DT_N_S_soc_S_i2c_40003000
#define DT_N_NODELABEL_pro_micro_i2c DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_i2c_40003000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_COMPAT_MATCHES_nordic_nrf_twi 1
#define DT_N_S_soc_S_i2c_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_i2c_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_COMPAT_MODEL_IDX_0 "nrf-twi"
#define DT_N_S_soc_S_i2c_40003000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NUM 2
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_pin_controller_S_i2c0_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_P_reg {1073754112 /* 0x40003000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts {3 /* 0x3 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_i2c_40003000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40003000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40003000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, status, 0)
#define DT_N_S_soc_S_i2c_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000, status, 0)
#define DT_N_S_soc_S_i2c_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_compatible {"nordic,nrf-twi"}
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0 "nordic,nrf-twi"
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-twi
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_twi
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TWI
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_IDX_0 DT_N_S_pin_controller_S_i2c0_sleep
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_IDX_0_PH DT_N_S_pin_controller_S_i2c0_sleep
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_1, 0)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_1, 0)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_LEN 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 1)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 1)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40004000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40004000
 *
 * Binding (compatible = nordic,nrf-twim):
 *   $ZEPHYR_BASE/dts/bindings/i2c/nordic,nrf-twim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40004000_PATH "/soc/i2c@40004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40004000_FULL_NAME "i2c@40004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40004000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40004000_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40004000_ORD 133
#define DT_N_S_soc_S_i2c_40004000_ORD_STR_SORTABLE 00133

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40004000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40004000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_twim DT_N_S_soc_S_i2c_40004000
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_i2c_40004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40004000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_VAL_ADDRESS 1073758208 /* 0x40004000 */
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40004000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40004000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_MATCHES_nordic_nrf_twim 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_i2c_40004000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_MODEL_IDX_0 "nrf-twim"
#define DT_N_S_soc_S_i2c_40004000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_concat_buf_size 16
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_concat_buf_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_flash_buf_max_size 16
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_flash_buf_max_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg {1073758208 /* 0x40004000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_0 1073758208
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts {4 /* 0x4 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_i2c_40004000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40004000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_status "disabled"
#define DT_N_S_soc_S_i2c_40004000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40004000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40004000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40004000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40004000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, status, 0)
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004000, status, 0)
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40004000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_compatible {"nordic,nrf-twim"}
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0 "nordic,nrf-twim"
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-twim
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_twim
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TWIM
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40004000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40025000
 *
 * Node identifier: DT_N_S_soc_S_i2s_40025000
 *
 * Binding (compatible = nordic,nrf-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/nordic,nrf-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40025000_PATH "/soc/i2s@40025000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40025000_FULL_NAME "i2s@40025000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40025000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_40025000_CHILD_IDX 46

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40025000_ORD 134
#define DT_N_S_soc_S_i2s_40025000_ORD_STR_SORTABLE 00134

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40025000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40025000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40025000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_i2s DT_N_S_soc_S_i2s_40025000
#define DT_N_NODELABEL_i2s0        DT_N_S_soc_S_i2s_40025000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40025000_REG_NUM 1
#define DT_N_S_soc_S_i2s_40025000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_REG_IDX_0_VAL_ADDRESS 1073893376 /* 0x40025000 */
#define DT_N_S_soc_S_i2s_40025000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2s_40025000_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_40025000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_40025000_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_COMPAT_MATCHES_nordic_nrf_i2s 1
#define DT_N_S_soc_S_i2s_40025000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_i2s_40025000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_COMPAT_MODEL_IDX_0 "nrf-i2s"
#define DT_N_S_soc_S_i2s_40025000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40025000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40025000_P_reg {1073893376 /* 0x40025000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2s_40025000_P_reg_IDX_0 1073893376
#define DT_N_S_soc_S_i2s_40025000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2s_40025000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_interrupts {37 /* 0x25 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source "PCLK32M_HFXO"
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_STRING_UNQUOTED PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_STRING_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_STRING_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_IDX_0 "PCLK32M_HFXO"
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_ENUM_IDX 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_ENUM_VAL_PCLK32M_HFXO_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_ENUM_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_ENUM_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40025000, clock_source, 0)
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40025000, clock_source, 0)
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40025000, clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40025000, clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_LEN 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_status "disabled"
#define DT_N_S_soc_S_i2s_40025000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2s_40025000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40025000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40025000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2s_40025000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40025000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40025000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40025000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40025000, status, 0)
#define DT_N_S_soc_S_i2s_40025000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40025000, status, 0)
#define DT_N_S_soc_S_i2s_40025000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40025000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40025000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_status_LEN 1
#define DT_N_S_soc_S_i2s_40025000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_compatible {"nordic,nrf-i2s"}
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0 "nordic,nrf-i2s"
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-i2s
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_i2s
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_I2S
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40025000, compatible, 0)
#define DT_N_S_soc_S_i2s_40025000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40025000, compatible, 0)
#define DT_N_S_soc_S_i2s_40025000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40025000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40025000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40025000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40025000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2s_40025000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@20000000
 *
 * Node identifier: DT_N_S_soc_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20000000_PATH "/soc/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20000000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20000000_ORD 135
#define DT_N_S_soc_S_memory_20000000_ORD_STR_SORTABLE 00135

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20000000_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_soc_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_soc_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20000000_REG_NUM 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/mwu@40020000
 *
 * Node identifier: DT_N_S_soc_S_mwu_40020000
 *
 * Binding (compatible = nordic,nrf-mwu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-mwu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mwu_40020000_PATH "/soc/mwu@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mwu_40020000_FULL_NAME "mwu@40020000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mwu_40020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mwu_40020000_CHILD_IDX 41

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mwu_40020000_ORD 136
#define DT_N_S_soc_S_mwu_40020000_ORD_STR_SORTABLE 00136

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mwu_40020000_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mwu_40020000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mwu_40020000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_mwu DT_N_S_soc_S_mwu_40020000
#define DT_N_NODELABEL_mwu         DT_N_S_soc_S_mwu_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mwu_40020000_REG_NUM 1
#define DT_N_S_soc_S_mwu_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_mwu_40020000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_mwu_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_mwu_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mwu_40020000_IRQ_NUM 0
#define DT_N_S_soc_S_mwu_40020000_COMPAT_MATCHES_nordic_nrf_mwu 1
#define DT_N_S_soc_S_mwu_40020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_mwu_40020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_COMPAT_MODEL_IDX_0 "nrf-mwu"
#define DT_N_S_soc_S_mwu_40020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mwu_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_mwu_40020000_P_reg {1073872896 /* 0x40020000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_mwu_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_mwu_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_mwu_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_status "okay"
#define DT_N_S_soc_S_mwu_40020000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_mwu_40020000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_mwu_40020000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_mwu_40020000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_mwu_40020000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_mwu_40020000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_mwu_40020000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_mwu_40020000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mwu_40020000, status, 0)
#define DT_N_S_soc_S_mwu_40020000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mwu_40020000, status, 0)
#define DT_N_S_soc_S_mwu_40020000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mwu_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mwu_40020000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mwu_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mwu_40020000_P_status_LEN 1
#define DT_N_S_soc_S_mwu_40020000_P_status_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_compatible {"nordic,nrf-mwu"}
#define DT_N_S_soc_S_mwu_40020000_P_compatible_IDX_0 "nordic,nrf-mwu"
#define DT_N_S_soc_S_mwu_40020000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-mwu
#define DT_N_S_soc_S_mwu_40020000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_mwu
#define DT_N_S_soc_S_mwu_40020000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_MWU
#define DT_N_S_soc_S_mwu_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mwu_40020000, compatible, 0)
#define DT_N_S_soc_S_mwu_40020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mwu_40020000, compatible, 0)
#define DT_N_S_soc_S_mwu_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mwu_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mwu_40020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mwu_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mwu_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_mwu_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_mwu_40020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mwu_40020000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/nfct@40005000
 *
 * Node identifier: DT_N_S_soc_S_nfct_40005000
 *
 * Binding (compatible = nordic,nrf-nfct):
 *   $ZEPHYR_BASE/dts/bindings/net/wireless/nordic,nrf-nfct.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_nfct_40005000_PATH "/soc/nfct@40005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_nfct_40005000_FULL_NAME "nfct@40005000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_nfct_40005000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_nfct_40005000_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_nfct_40005000_ORD 137
#define DT_N_S_soc_S_nfct_40005000_ORD_STR_SORTABLE 00137

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_nfct_40005000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_nfct_40005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_nfct_40005000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_nfct DT_N_S_soc_S_nfct_40005000
#define DT_N_NODELABEL_nfct         DT_N_S_soc_S_nfct_40005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_nfct_40005000_REG_NUM 1
#define DT_N_S_soc_S_nfct_40005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_REG_IDX_0_VAL_ADDRESS 1073762304 /* 0x40005000 */
#define DT_N_S_soc_S_nfct_40005000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_nfct_40005000_RANGES_NUM 0
#define DT_N_S_soc_S_nfct_40005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_nfct_40005000_IRQ_NUM 1
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_VAL_irq 5
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_COMPAT_MATCHES_nordic_nrf_nfct 1
#define DT_N_S_soc_S_nfct_40005000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_nfct_40005000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_COMPAT_MODEL_IDX_0 "nrf-nfct"
#define DT_N_S_soc_S_nfct_40005000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_nfct_40005000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_nfct_40005000_P_reg {1073762304 /* 0x40005000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_nfct_40005000_P_reg_IDX_0 1073762304
#define DT_N_S_soc_S_nfct_40005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_nfct_40005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_interrupts {5 /* 0x5 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_nfct_40005000_P_interrupts_IDX_0 5
#define DT_N_S_soc_S_nfct_40005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_nfct_40005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_status "okay"
#define DT_N_S_soc_S_nfct_40005000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_nfct_40005000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_nfct_40005000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_nfct_40005000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_nfct_40005000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_nfct_40005000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_nfct_40005000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_nfct_40005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_nfct_40005000, status, 0)
#define DT_N_S_soc_S_nfct_40005000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_nfct_40005000, status, 0)
#define DT_N_S_soc_S_nfct_40005000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_nfct_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nfct_40005000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nfct_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nfct_40005000_P_status_LEN 1
#define DT_N_S_soc_S_nfct_40005000_P_status_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_compatible {"nordic,nrf-nfct"}
#define DT_N_S_soc_S_nfct_40005000_P_compatible_IDX_0 "nordic,nrf-nfct"
#define DT_N_S_soc_S_nfct_40005000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-nfct
#define DT_N_S_soc_S_nfct_40005000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_nfct
#define DT_N_S_soc_S_nfct_40005000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_NFCT
#define DT_N_S_soc_S_nfct_40005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_nfct_40005000, compatible, 0)
#define DT_N_S_soc_S_nfct_40005000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_nfct_40005000, compatible, 0)
#define DT_N_S_soc_S_nfct_40005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_nfct_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nfct_40005000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nfct_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nfct_40005000_P_compatible_LEN 1
#define DT_N_S_soc_S_nfct_40005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_wakeup_source 0
#define DT_N_S_soc_S_nfct_40005000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_nfct_40005000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pdm@4001d000
 *
 * Node identifier: DT_N_S_soc_S_pdm_4001d000
 *
 * Binding (compatible = nordic,nrf-pdm):
 *   $ZEPHYR_BASE/dts/bindings/audio/nordic,nrf-pdm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pdm_4001d000_PATH "/soc/pdm@4001d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pdm_4001d000_FULL_NAME "pdm@4001d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pdm_4001d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pdm_4001d000_CHILD_IDX 37

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pdm_4001d000_ORD 138
#define DT_N_S_soc_S_pdm_4001d000_ORD_STR_SORTABLE 00138

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pdm_4001d000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pdm_4001d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pdm_4001d000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_pdm DT_N_S_soc_S_pdm_4001d000
#define DT_N_NODELABEL_pdm0        DT_N_S_soc_S_pdm_4001d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pdm_4001d000_REG_NUM 1
#define DT_N_S_soc_S_pdm_4001d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_REG_IDX_0_VAL_ADDRESS 1073860608 /* 0x4001d000 */
#define DT_N_S_soc_S_pdm_4001d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pdm_4001d000_RANGES_NUM 0
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pdm_4001d000_IRQ_NUM 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_COMPAT_MATCHES_nordic_nrf_pdm 1
#define DT_N_S_soc_S_pdm_4001d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_pdm_4001d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_COMPAT_MODEL_IDX_0 "nrf-pdm"
#define DT_N_S_soc_S_pdm_4001d000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pdm_4001d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pdm_4001d000_P_reg {1073860608 /* 0x4001d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pdm_4001d000_P_reg_IDX_0 1073860608
#define DT_N_S_soc_S_pdm_4001d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pdm_4001d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts {29 /* 0x1d */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source "PCLK32M_HFXO"
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_STRING_UNQUOTED PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_STRING_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_STRING_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_IDX_0 "PCLK32M_HFXO"
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_ENUM_IDX 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_ENUM_VAL_PCLK32M_HFXO_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_ENUM_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_ENUM_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_LEN 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_queue_size 4
#define DT_N_S_soc_S_pdm_4001d000_P_queue_size_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_status "disabled"
#define DT_N_S_soc_S_pdm_4001d000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pdm_4001d000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pdm_4001d000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pdm_4001d000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pdm_4001d000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pdm_4001d000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pdm_4001d000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pdm_4001d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pdm_4001d000, status, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pdm_4001d000, status, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pdm_4001d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pdm_4001d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_status_LEN 1
#define DT_N_S_soc_S_pdm_4001d000_P_status_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_compatible {"nordic,nrf-pdm"}
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0 "nordic,nrf-pdm"
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pdm
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pdm
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PDM
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pdm_4001d000, compatible, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pdm_4001d000, compatible, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pdm_4001d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pdm_4001d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_LEN 1
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_wakeup_source 0
#define DT_N_S_soc_S_pdm_4001d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pdm_4001d000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ppi@4001f000
 *
 * Node identifier: DT_N_S_soc_S_ppi_4001f000
 *
 * Binding (compatible = nordic,nrf-ppi):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-ppi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ppi_4001f000_PATH "/soc/ppi@4001f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ppi_4001f000_FULL_NAME "ppi@4001f000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ppi_4001f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ppi_4001f000_CHILD_IDX 40

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ppi_4001f000_ORD 139
#define DT_N_S_soc_S_ppi_4001f000_ORD_STR_SORTABLE 00139

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ppi_4001f000_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ppi_4001f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ppi_4001f000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ppi DT_N_S_soc_S_ppi_4001f000
#define DT_N_NODELABEL_ppi         DT_N_S_soc_S_ppi_4001f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ppi_4001f000_REG_NUM 1
#define DT_N_S_soc_S_ppi_4001f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_REG_IDX_0_VAL_ADDRESS 1073868800 /* 0x4001f000 */
#define DT_N_S_soc_S_ppi_4001f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ppi_4001f000_RANGES_NUM 0
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ppi_4001f000_IRQ_NUM 0
#define DT_N_S_soc_S_ppi_4001f000_COMPAT_MATCHES_nordic_nrf_ppi 1
#define DT_N_S_soc_S_ppi_4001f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_ppi_4001f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_COMPAT_MODEL_IDX_0 "nrf-ppi"
#define DT_N_S_soc_S_ppi_4001f000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ppi_4001f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ppi_4001f000_P_reg {1073868800 /* 0x4001f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ppi_4001f000_P_reg_IDX_0 1073868800
#define DT_N_S_soc_S_ppi_4001f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ppi_4001f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_status "okay"
#define DT_N_S_soc_S_ppi_4001f000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ppi_4001f000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ppi_4001f000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ppi_4001f000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ppi_4001f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ppi_4001f000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ppi_4001f000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ppi_4001f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ppi_4001f000, status, 0)
#define DT_N_S_soc_S_ppi_4001f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ppi_4001f000, status, 0)
#define DT_N_S_soc_S_ppi_4001f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ppi_4001f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ppi_4001f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ppi_4001f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ppi_4001f000_P_status_LEN 1
#define DT_N_S_soc_S_ppi_4001f000_P_status_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_compatible {"nordic,nrf-ppi"}
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_IDX_0 "nordic,nrf-ppi"
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ppi
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ppi
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PPI
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ppi_4001f000, compatible, 0)
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ppi_4001f000, compatible, 0)
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ppi_4001f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ppi_4001f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_LEN 1
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_wakeup_source 0
#define DT_N_S_soc_S_ppi_4001f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ppi_4001f000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pwm@4001c000
 *
 * Node identifier: DT_N_S_soc_S_pwm_4001c000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_4001c000_PATH "/soc/pwm@4001c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_4001c000_FULL_NAME "pwm@4001c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_4001c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_4001c000_CHILD_IDX 36

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_4001c000_ORD 140
#define DT_N_S_soc_S_pwm_4001c000_ORD_STR_SORTABLE 00140

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_4001c000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_4001c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_4001c000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_pwm DT_N_S_soc_S_pwm_4001c000
#define DT_N_NODELABEL_pwm0        DT_N_S_soc_S_pwm_4001c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_4001c000_REG_NUM 1
#define DT_N_S_soc_S_pwm_4001c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_REG_IDX_0_VAL_ADDRESS 1073856512 /* 0x4001c000 */
#define DT_N_S_soc_S_pwm_4001c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_4001c000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_4001c000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_MODEL_IDX_0 "nrf-pwm"
#define DT_N_S_soc_S_pwm_4001c000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_4001c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_4001c000_P_reg {1073856512 /* 0x4001c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_0 1073856512
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_4001c000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_status "disabled"
#define DT_N_S_soc_S_pwm_4001c000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_4001c000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_4001c000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4001c000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_4001c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4001c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4001c000, status, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4001c000, status, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4001c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4001c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_4001c000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pwm
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pwm
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PWM
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4001c000, compatible, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4001c000, compatible, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4001c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4001c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts {28 /* 0x1c */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_4001c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_4001c000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40021000
 *
 * Node identifier: DT_N_S_soc_S_pwm_40021000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40021000_PATH "/soc/pwm@40021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40021000_FULL_NAME "pwm@40021000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40021000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40021000_CHILD_IDX 42

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40021000_ORD 141
#define DT_N_S_soc_S_pwm_40021000_ORD_STR_SORTABLE 00141

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40021000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40021000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40021000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_pwm DT_N_S_soc_S_pwm_40021000
#define DT_N_NODELABEL_pwm1        DT_N_S_soc_S_pwm_40021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40021000_REG_NUM 1
#define DT_N_S_soc_S_pwm_40021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_REG_IDX_0_VAL_ADDRESS 1073876992 /* 0x40021000 */
#define DT_N_S_soc_S_pwm_40021000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_40021000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40021000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_40021000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_pwm_40021000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_COMPAT_MODEL_IDX_0 "nrf-pwm"
#define DT_N_S_soc_S_pwm_40021000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40021000_P_reg {1073876992 /* 0x40021000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_0 1073876992
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_40021000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_status "disabled"
#define DT_N_S_soc_S_pwm_40021000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_40021000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40021000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40021000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_40021000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40021000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40021000, status, 0)
#define DT_N_S_soc_S_pwm_40021000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40021000, status, 0)
#define DT_N_S_soc_S_pwm_40021000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40021000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40021000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40021000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pwm
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pwm
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PWM
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40021000, compatible, 0)
#define DT_N_S_soc_S_pwm_40021000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40021000, compatible, 0)
#define DT_N_S_soc_S_pwm_40021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts {33 /* 0x21 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40021000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40021000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40022000
 *
 * Node identifier: DT_N_S_soc_S_pwm_40022000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40022000_PATH "/soc/pwm@40022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40022000_FULL_NAME "pwm@40022000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40022000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40022000_CHILD_IDX 43

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40022000_ORD 142
#define DT_N_S_soc_S_pwm_40022000_ORD_STR_SORTABLE 00142

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40022000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40022000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40022000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_pwm DT_N_S_soc_S_pwm_40022000
#define DT_N_NODELABEL_pwm2        DT_N_S_soc_S_pwm_40022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40022000_REG_NUM 1
#define DT_N_S_soc_S_pwm_40022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_REG_IDX_0_VAL_ADDRESS 1073881088 /* 0x40022000 */
#define DT_N_S_soc_S_pwm_40022000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_40022000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40022000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_irq 34
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_40022000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_pwm_40022000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_COMPAT_MODEL_IDX_0 "nrf-pwm"
#define DT_N_S_soc_S_pwm_40022000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40022000_P_reg {1073881088 /* 0x40022000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_0 1073881088
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_40022000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_status "disabled"
#define DT_N_S_soc_S_pwm_40022000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_40022000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40022000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40022000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_40022000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40022000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40022000, status, 0)
#define DT_N_S_soc_S_pwm_40022000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40022000, status, 0)
#define DT_N_S_soc_S_pwm_40022000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40022000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40022000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40022000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pwm
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pwm
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PWM
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40022000, compatible, 0)
#define DT_N_S_soc_S_pwm_40022000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40022000, compatible, 0)
#define DT_N_S_soc_S_pwm_40022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts {34 /* 0x22 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_0 34
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40022000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40022000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pwm@4002d000
 *
 * Node identifier: DT_N_S_soc_S_pwm_4002d000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_4002d000_PATH "/soc/pwm@4002d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_4002d000_FULL_NAME "pwm@4002d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_4002d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_4002d000_CHILD_IDX 50

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_4002d000_ORD 143
#define DT_N_S_soc_S_pwm_4002d000_ORD_STR_SORTABLE 00143

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_4002d000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_4002d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_4002d000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_pwm DT_N_S_soc_S_pwm_4002d000
#define DT_N_NODELABEL_pwm3        DT_N_S_soc_S_pwm_4002d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_4002d000_REG_NUM 1
#define DT_N_S_soc_S_pwm_4002d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_REG_IDX_0_VAL_ADDRESS 1073926144 /* 0x4002d000 */
#define DT_N_S_soc_S_pwm_4002d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_4002d000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_4002d000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_irq 45
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_MODEL_IDX_0 "nrf-pwm"
#define DT_N_S_soc_S_pwm_4002d000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_4002d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_4002d000_P_reg {1073926144 /* 0x4002d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_0 1073926144
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_4002d000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_status "disabled"
#define DT_N_S_soc_S_pwm_4002d000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_4002d000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_4002d000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4002d000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_4002d000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4002d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4002d000, status, 0)
#define DT_N_S_soc_S_pwm_4002d000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4002d000, status, 0)
#define DT_N_S_soc_S_pwm_4002d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4002d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4002d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_4002d000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pwm
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pwm
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PWM
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4002d000, compatible, 0)
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4002d000, compatible, 0)
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4002d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4002d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts {45 /* 0x2d */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_0 45
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_4002d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_4002d000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/qdec@40012000
 *
 * Node identifier: DT_N_S_soc_S_qdec_40012000
 *
 * Binding (compatible = nordic,nrf-qdec):
 *   $ZEPHYR_BASE/dts/bindings/sensor/nordic,nrf-qdec.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qdec_40012000_PATH "/soc/qdec@40012000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qdec_40012000_FULL_NAME "qdec@40012000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qdec_40012000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qdec_40012000_CHILD_IDX 26

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qdec_40012000_ORD 144
#define DT_N_S_soc_S_qdec_40012000_ORD_STR_SORTABLE 00144

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qdec_40012000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qdec_40012000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qdec_40012000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_qdec DT_N_S_soc_S_qdec_40012000
#define DT_N_NODELABEL_qdec         DT_N_S_soc_S_qdec_40012000
#define DT_N_NODELABEL_qdec0        DT_N_S_soc_S_qdec_40012000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qdec_40012000_REG_NUM 1
#define DT_N_S_soc_S_qdec_40012000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_REG_IDX_0_VAL_ADDRESS 1073815552 /* 0x40012000 */
#define DT_N_S_soc_S_qdec_40012000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_qdec_40012000_RANGES_NUM 0
#define DT_N_S_soc_S_qdec_40012000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qdec_40012000_IRQ_NUM 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_COMPAT_MATCHES_nordic_nrf_qdec 1
#define DT_N_S_soc_S_qdec_40012000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_qdec_40012000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_COMPAT_MODEL_IDX_0 "nrf-qdec"
#define DT_N_S_soc_S_qdec_40012000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qdec_40012000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qdec_40012000_P_reg {1073815552 /* 0x40012000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_0 1073815552
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts {18 /* 0x12 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_status "disabled"
#define DT_N_S_soc_S_qdec_40012000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qdec_40012000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qdec_40012000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_40012000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_qdec_40012000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_40012000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_40012000, status, 0)
#define DT_N_S_soc_S_qdec_40012000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_40012000, status, 0)
#define DT_N_S_soc_S_qdec_40012000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_40012000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_40012000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_status_LEN 1
#define DT_N_S_soc_S_qdec_40012000_P_status_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_compatible {"nordic,nrf-qdec"}
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0 "nordic,nrf-qdec"
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-qdec
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_qdec
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_QDEC
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_40012000, compatible, 0)
#define DT_N_S_soc_S_qdec_40012000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_40012000, compatible, 0)
#define DT_N_S_soc_S_qdec_40012000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_40012000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_40012000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_compatible_LEN 1
#define DT_N_S_soc_S_qdec_40012000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_wakeup_source 0
#define DT_N_S_soc_S_qdec_40012000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_qdec_40012000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/qspi@40029000
 *
 * Node identifier: DT_N_S_soc_S_qspi_40029000
 *
 * Binding (compatible = nordic,nrf-qspi):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/nordic,nrf-qspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qspi_40029000_PATH "/soc/qspi@40029000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qspi_40029000_FULL_NAME "qspi@40029000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qspi_40029000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qspi_40029000_CHILD_IDX 49

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qspi_40029000_ORD 145
#define DT_N_S_soc_S_qspi_40029000_ORD_STR_SORTABLE 00145

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qspi_40029000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qspi_40029000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qspi_40029000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_qspi DT_N_S_soc_S_qspi_40029000
#define DT_N_NODELABEL_qspi         DT_N_S_soc_S_qspi_40029000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qspi_40029000_REG_NUM 2
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_ADDRESS 1073909760 /* 0x40029000 */
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_1_VAL_ADDRESS 301989888 /* 0x12000000 */
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_1_VAL_SIZE 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_qspi_40029000_REG_NAME_qspi_VAL_ADDRESS DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_qspi_40029000_REG_NAME_qspi_VAL_SIZE DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_qspi_40029000_REG_NAME_qspi_mm_VAL_ADDRESS DT_N_S_soc_S_qspi_40029000_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_qspi_40029000_REG_NAME_qspi_mm_VAL_SIZE DT_N_S_soc_S_qspi_40029000_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_qspi_40029000_RANGES_NUM 0
#define DT_N_S_soc_S_qspi_40029000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qspi_40029000_IRQ_NUM 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_COMPAT_MATCHES_nordic_nrf_qspi 1
#define DT_N_S_soc_S_qspi_40029000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_qspi_40029000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_COMPAT_MODEL_IDX_0 "nrf-qspi"
#define DT_N_S_soc_S_qspi_40029000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qspi_40029000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qspi_40029000_P_interrupts {41 /* 0x29 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg {1073909760 /* 0x40029000 */, 4096 /* 0x1000 */, 301989888 /* 0x12000000 */, 134217728 /* 0x8000000 */}
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_0 1073909760
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_2 301989888
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_3 134217728
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_status "disabled"
#define DT_N_S_soc_S_qspi_40029000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qspi_40029000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qspi_40029000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qspi_40029000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_qspi_40029000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qspi_40029000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, status, 0)
#define DT_N_S_soc_S_qspi_40029000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000, status, 0)
#define DT_N_S_soc_S_qspi_40029000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_status_LEN 1
#define DT_N_S_soc_S_qspi_40029000_P_status_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_compatible {"nordic,nrf-qspi"}
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0 "nordic,nrf-qspi"
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-qspi
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_qspi
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_QSPI
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, compatible, 0)
#define DT_N_S_soc_S_qspi_40029000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000, compatible, 0)
#define DT_N_S_soc_S_qspi_40029000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_compatible_LEN 1
#define DT_N_S_soc_S_qspi_40029000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_names {"qspi", "qspi_mm"}
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0 "qspi"
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0_STRING_UNQUOTED qspi
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0_STRING_TOKEN qspi
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0_STRING_UPPER_TOKEN QSPI
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1 "qspi_mm"
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1_STRING_UNQUOTED qspi_mm
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1_STRING_TOKEN qspi_mm
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1_STRING_UPPER_TOKEN QSPI_MM
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, reg_names, 0) \
	fn(DT_N_S_soc_S_qspi_40029000, reg_names, 1)
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000, reg_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000, reg_names, 1)
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, reg_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000, reg_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_LEN 2
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_wakeup_source 0
#define DT_N_S_soc_S_qspi_40029000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_qspi_40029000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/random@4000d000
 *
 * Node identifier: DT_N_S_soc_S_random_4000d000
 *
 * Binding (compatible = nordic,nrf-rng):
 *   $ZEPHYR_BASE/dts/bindings/rng/nordic,nrf-rng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_random_4000d000_PATH "/soc/random@4000d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_random_4000d000_FULL_NAME "random@4000d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_random_4000d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_random_4000d000_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_random_4000d000_ORD 146
#define DT_N_S_soc_S_random_4000d000_ORD_STR_SORTABLE 00146

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_random_4000d000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_random_4000d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_random_4000d000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_rng DT_N_S_soc_S_random_4000d000
#define DT_N_NODELABEL_rng         DT_N_S_soc_S_random_4000d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_random_4000d000_REG_NUM 1
#define DT_N_S_soc_S_random_4000d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_REG_IDX_0_VAL_ADDRESS 1073795072 /* 0x4000d000 */
#define DT_N_S_soc_S_random_4000d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_random_4000d000_RANGES_NUM 0
#define DT_N_S_soc_S_random_4000d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_random_4000d000_IRQ_NUM 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_irq 13
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_COMPAT_MATCHES_nordic_nrf_rng 1
#define DT_N_S_soc_S_random_4000d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_random_4000d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_COMPAT_MODEL_IDX_0 "nrf-rng"
#define DT_N_S_soc_S_random_4000d000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_random_4000d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_random_4000d000_P_reg {1073795072 /* 0x4000d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_0 1073795072
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts {13 /* 0xd */, 1 /* 0x1 */}
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_0 13
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_status "okay"
#define DT_N_S_soc_S_random_4000d000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_random_4000d000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_random_4000d000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_random_4000d000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_random_4000d000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_random_4000d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_4000d000, status, 0)
#define DT_N_S_soc_S_random_4000d000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_random_4000d000, status, 0)
#define DT_N_S_soc_S_random_4000d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_4000d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_random_4000d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_status_LEN 1
#define DT_N_S_soc_S_random_4000d000_P_status_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_compatible {"nordic,nrf-rng"}
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0 "nordic,nrf-rng"
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-rng
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_rng
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RNG
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_4000d000, compatible, 0)
#define DT_N_S_soc_S_random_4000d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_random_4000d000, compatible, 0)
#define DT_N_S_soc_S_random_4000d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_4000d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_random_4000d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_compatible_LEN 1
#define DT_N_S_soc_S_random_4000d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_wakeup_source 0
#define DT_N_S_soc_S_random_4000d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_random_4000d000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@4000b000
 *
 * Node identifier: DT_N_S_soc_S_rtc_4000b000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_4000b000_PATH "/soc/rtc@4000b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_4000b000_FULL_NAME "rtc@4000b000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_4000b000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_4000b000_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_4000b000_ORD 147
#define DT_N_S_soc_S_rtc_4000b000_ORD_STR_SORTABLE 00147

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_4000b000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_4000b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_4000b000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_rtc DT_N_S_soc_S_rtc_4000b000
#define DT_N_NODELABEL_rtc0        DT_N_S_soc_S_rtc_4000b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_4000b000_REG_NUM 1
#define DT_N_S_soc_S_rtc_4000b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_REG_IDX_0_VAL_ADDRESS 1073786880 /* 0x4000b000 */
#define DT_N_S_soc_S_rtc_4000b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_4000b000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_4000b000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_MODEL_IDX_0 "nrf-rtc"
#define DT_N_S_soc_S_rtc_4000b000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_4000b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_4000b000_P_reg {1073786880 /* 0x4000b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_0 1073786880
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_cc_num 3
#define DT_N_S_soc_S_rtc_4000b000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_4000b000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_4000b000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_zli 0
#define DT_N_S_soc_S_rtc_4000b000_P_zli_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_4000b000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts {11 /* 0xb */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_prescaler 1
#define DT_N_S_soc_S_rtc_4000b000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_status "disabled"
#define DT_N_S_soc_S_rtc_4000b000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_4000b000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_4000b000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_4000b000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_4000b000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_4000b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_4000b000, status, 0)
#define DT_N_S_soc_S_rtc_4000b000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_4000b000, status, 0)
#define DT_N_S_soc_S_rtc_4000b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_4000b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_4000b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_status_LEN 1
#define DT_N_S_soc_S_rtc_4000b000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-rtc
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_rtc
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RTC
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_4000b000, compatible, 0)
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_4000b000, compatible, 0)
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_4000b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_4000b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_4000b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_4000b000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40011000
 *
 * Node identifier: DT_N_S_soc_S_rtc_40011000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40011000_PATH "/soc/rtc@40011000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40011000_FULL_NAME "rtc@40011000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40011000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40011000_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40011000_ORD 148
#define DT_N_S_soc_S_rtc_40011000_ORD_STR_SORTABLE 00148

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40011000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40011000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40011000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_rtc DT_N_S_soc_S_rtc_40011000
#define DT_N_NODELABEL_rtc1        DT_N_S_soc_S_rtc_40011000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40011000_REG_NUM 1
#define DT_N_S_soc_S_rtc_40011000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_REG_IDX_0_VAL_ADDRESS 1073811456 /* 0x40011000 */
#define DT_N_S_soc_S_rtc_40011000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_40011000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40011000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40011000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_irq 17
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_40011000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_rtc_40011000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_COMPAT_MODEL_IDX_0 "nrf-rtc"
#define DT_N_S_soc_S_rtc_40011000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40011000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40011000_P_reg {1073811456 /* 0x40011000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_0 1073811456
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_cc_num 4
#define DT_N_S_soc_S_rtc_40011000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_40011000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_40011000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_zli 0
#define DT_N_S_soc_S_rtc_40011000_P_zli_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_40011000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts {17 /* 0x11 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_0 17
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_prescaler 1
#define DT_N_S_soc_S_rtc_40011000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_status "disabled"
#define DT_N_S_soc_S_rtc_40011000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_40011000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_40011000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40011000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_40011000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40011000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40011000, status, 0)
#define DT_N_S_soc_S_rtc_40011000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40011000, status, 0)
#define DT_N_S_soc_S_rtc_40011000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40011000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40011000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_status_LEN 1
#define DT_N_S_soc_S_rtc_40011000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-rtc
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_rtc
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RTC
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40011000, compatible, 0)
#define DT_N_S_soc_S_rtc_40011000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40011000, compatible, 0)
#define DT_N_S_soc_S_rtc_40011000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40011000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40011000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40011000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40011000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_40011000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40024000
 *
 * Node identifier: DT_N_S_soc_S_rtc_40024000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40024000_PATH "/soc/rtc@40024000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40024000_FULL_NAME "rtc@40024000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40024000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40024000_CHILD_IDX 45

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40024000_ORD 149
#define DT_N_S_soc_S_rtc_40024000_ORD_STR_SORTABLE 00149

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40024000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40024000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40024000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_rtc DT_N_S_soc_S_rtc_40024000
#define DT_N_NODELABEL_rtc2        DT_N_S_soc_S_rtc_40024000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40024000_REG_NUM 1
#define DT_N_S_soc_S_rtc_40024000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_REG_IDX_0_VAL_ADDRESS 1073889280 /* 0x40024000 */
#define DT_N_S_soc_S_rtc_40024000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_40024000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40024000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40024000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_40024000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_rtc_40024000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_COMPAT_MODEL_IDX_0 "nrf-rtc"
#define DT_N_S_soc_S_rtc_40024000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40024000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40024000_P_reg {1073889280 /* 0x40024000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_0 1073889280
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_cc_num 4
#define DT_N_S_soc_S_rtc_40024000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_40024000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_40024000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_zli 0
#define DT_N_S_soc_S_rtc_40024000_P_zli_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_40024000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts {36 /* 0x24 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_prescaler 1
#define DT_N_S_soc_S_rtc_40024000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_status "disabled"
#define DT_N_S_soc_S_rtc_40024000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_40024000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_40024000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40024000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_40024000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40024000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40024000, status, 0)
#define DT_N_S_soc_S_rtc_40024000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40024000, status, 0)
#define DT_N_S_soc_S_rtc_40024000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40024000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40024000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_status_LEN 1
#define DT_N_S_soc_S_rtc_40024000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-rtc
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_rtc
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RTC
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40024000, compatible, 0)
#define DT_N_S_soc_S_rtc_40024000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40024000, compatible, 0)
#define DT_N_S_soc_S_rtc_40024000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40024000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40024000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40024000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40024000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_40024000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003000
 *
 * Node identifier: DT_N_S_soc_S_spi_40003000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003000_PATH "/soc/spi@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003000_FULL_NAME "spi@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003000_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003000_ORD 150
#define DT_N_S_soc_S_spi_40003000_ORD_STR_SORTABLE 00150

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_spim  DT_N_S_soc_S_spi_40003000
#define DT_N_NODELABEL_spi0          DT_N_S_soc_S_spi_40003000
#define DT_N_NODELABEL_pro_micro_spi DT_N_S_soc_S_spi_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003000_REG_NUM 1
#define DT_N_S_soc_S_spi_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_spi_40003000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_spi_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_COMPAT_MODEL_IDX_0 "nrf-spim"
#define DT_N_S_soc_S_spi_40003000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_spi_40003000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_rx_delay_supported 0
#define DT_N_S_soc_S_spi_40003000_P_rx_delay_supported_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_reg {1073754112 /* 0x40003000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts {3 /* 0x3 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_max_frequency 8000000
#define DT_N_S_soc_S_spi_40003000_P_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_overrun_character 255
#define DT_N_S_soc_S_spi_40003000_P_overrun_character_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_spi_40003000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_status "disabled"
#define DT_N_S_soc_S_spi_40003000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40003000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003000, status, 0)
#define DT_N_S_soc_S_spi_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003000, status, 0)
#define DT_N_S_soc_S_spi_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-spim
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_spim
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SPIM
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003000, compatible, 0)
#define DT_N_S_soc_S_spi_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003000, compatible, 0)
#define DT_N_S_soc_S_spi_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40004000
 *
 * Node identifier: DT_N_S_soc_S_spi_40004000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40004000_PATH "/soc/spi@40004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40004000_FULL_NAME "spi@40004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40004000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40004000_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40004000_ORD 151
#define DT_N_S_soc_S_spi_40004000_ORD_STR_SORTABLE 00151

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40004000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40004000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_spim DT_N_S_soc_S_spi_40004000
#define DT_N_NODELABEL_spi1         DT_N_S_soc_S_spi_40004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40004000_REG_NUM 1
#define DT_N_S_soc_S_spi_40004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_REG_IDX_0_VAL_ADDRESS 1073758208 /* 0x40004000 */
#define DT_N_S_soc_S_spi_40004000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40004000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40004000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_40004000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_spi_40004000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_COMPAT_MODEL_IDX_0 "nrf-spim"
#define DT_N_S_soc_S_spi_40004000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40004000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_spi_40004000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_rx_delay_supported 0
#define DT_N_S_soc_S_spi_40004000_P_rx_delay_supported_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_reg {1073758208 /* 0x40004000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_0 1073758208
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts {4 /* 0x4 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_max_frequency 8000000
#define DT_N_S_soc_S_spi_40004000_P_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_overrun_character 255
#define DT_N_S_soc_S_spi_40004000_P_overrun_character_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_spi_40004000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_status "disabled"
#define DT_N_S_soc_S_spi_40004000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40004000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40004000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40004000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40004000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40004000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000, status, 0)
#define DT_N_S_soc_S_spi_40004000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40004000, status, 0)
#define DT_N_S_soc_S_spi_40004000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40004000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-spim
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_spim
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SPIM
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000, compatible, 0)
#define DT_N_S_soc_S_spi_40004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40004000, compatible, 0)
#define DT_N_S_soc_S_spi_40004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40004000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40004000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40023000
 *
 * Node identifier: DT_N_S_soc_S_spi_40023000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40023000_PATH "/soc/spi@40023000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40023000_FULL_NAME "spi@40023000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40023000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40023000_CHILD_IDX 44

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40023000_ORD 152
#define DT_N_S_soc_S_spi_40023000_ORD_STR_SORTABLE 00152

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40023000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40023000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40023000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_spim DT_N_S_soc_S_spi_40023000
#define DT_N_NODELABEL_spi2         DT_N_S_soc_S_spi_40023000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40023000_REG_NUM 1
#define DT_N_S_soc_S_spi_40023000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_REG_IDX_0_VAL_ADDRESS 1073885184 /* 0x40023000 */
#define DT_N_S_soc_S_spi_40023000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40023000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40023000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40023000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_40023000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_spi_40023000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_COMPAT_MODEL_IDX_0 "nrf-spim"
#define DT_N_S_soc_S_spi_40023000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40023000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40023000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_spi_40023000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_rx_delay_supported 0
#define DT_N_S_soc_S_spi_40023000_P_rx_delay_supported_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_reg {1073885184 /* 0x40023000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_0 1073885184
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts {35 /* 0x23 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_max_frequency 8000000
#define DT_N_S_soc_S_spi_40023000_P_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_overrun_character 255
#define DT_N_S_soc_S_spi_40023000_P_overrun_character_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_spi_40023000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_status "disabled"
#define DT_N_S_soc_S_spi_40023000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40023000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40023000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40023000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40023000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40023000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40023000, status, 0)
#define DT_N_S_soc_S_spi_40023000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40023000, status, 0)
#define DT_N_S_soc_S_spi_40023000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40023000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40023000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40023000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-spim
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_spim
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SPIM
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40023000, compatible, 0)
#define DT_N_S_soc_S_spi_40023000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40023000, compatible, 0)
#define DT_N_S_soc_S_spi_40023000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40023000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40023000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40023000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40023000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40023000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@4002f000
 *
 * Node identifier: DT_N_S_soc_S_spi_4002f000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_4002f000_PATH "/soc/spi@4002f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_4002f000_FULL_NAME "spi@4002f000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_4002f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_4002f000_CHILD_IDX 51

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_4002f000_ORD 153
#define DT_N_S_soc_S_spi_4002f000_ORD_STR_SORTABLE 00153

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_4002f000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_4002f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_4002f000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_spim DT_N_S_soc_S_spi_4002f000
#define DT_N_NODELABEL_spi3         DT_N_S_soc_S_spi_4002f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_4002f000_REG_NUM 1
#define DT_N_S_soc_S_spi_4002f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_REG_IDX_0_VAL_ADDRESS 1073934336 /* 0x4002f000 */
#define DT_N_S_soc_S_spi_4002f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_4002f000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_4002f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_4002f000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_irq 47
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_4002f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_spi_4002f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_COMPAT_MODEL_IDX_0 "nrf-spim"
#define DT_N_S_soc_S_spi_4002f000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_4002f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_4002f000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_spi_4002f000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay_supported 1
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay_supported_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay 2
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay_ENUM_IDX 2
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_reg {1073934336 /* 0x4002f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_0 1073934336
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts {47 /* 0x2f */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_0 47
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_max_frequency 32000000
#define DT_N_S_soc_S_spi_4002f000_P_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_overrun_character 255
#define DT_N_S_soc_S_spi_4002f000_P_overrun_character_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_spi_4002f000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_status "disabled"
#define DT_N_S_soc_S_spi_4002f000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_4002f000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_4002f000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_4002f000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_4002f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_4002f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4002f000, status, 0)
#define DT_N_S_soc_S_spi_4002f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4002f000, status, 0)
#define DT_N_S_soc_S_spi_4002f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4002f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4002f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_status_LEN 1
#define DT_N_S_soc_S_spi_4002f000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-spim
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_spim
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SPIM
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4002f000, compatible, 0)
#define DT_N_S_soc_S_spi_4002f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4002f000, compatible, 0)
#define DT_N_S_soc_S_spi_4002f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4002f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4002f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_4002f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_4002f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_4002f000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/temp@4000c000
 *
 * Node identifier: DT_N_S_soc_S_temp_4000c000
 *
 * Binding (compatible = nordic,nrf-temp):
 *   $ZEPHYR_BASE/dts/bindings/sensor/nordic,nrf-temp.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_temp_4000c000_PATH "/soc/temp@4000c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_temp_4000c000_FULL_NAME "temp@4000c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_temp_4000c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_temp_4000c000_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_temp_4000c000_ORD 154
#define DT_N_S_soc_S_temp_4000c000_ORD_STR_SORTABLE 00154

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_temp_4000c000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_temp_4000c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_temp_4000c000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_temp DT_N_S_soc_S_temp_4000c000
#define DT_N_NODELABEL_temp         DT_N_S_soc_S_temp_4000c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_temp_4000c000_REG_NUM 1
#define DT_N_S_soc_S_temp_4000c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_REG_IDX_0_VAL_ADDRESS 1073790976 /* 0x4000c000 */
#define DT_N_S_soc_S_temp_4000c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_temp_4000c000_RANGES_NUM 0
#define DT_N_S_soc_S_temp_4000c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_temp_4000c000_IRQ_NUM 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_irq 12
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_COMPAT_MATCHES_nordic_nrf_temp 1
#define DT_N_S_soc_S_temp_4000c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_temp_4000c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_COMPAT_MODEL_IDX_0 "nrf-temp"
#define DT_N_S_soc_S_temp_4000c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_temp_4000c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_temp_4000c000_P_reg {1073790976 /* 0x4000c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_0 1073790976
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts {12 /* 0xc */, 1 /* 0x1 */}
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_0 12
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_status "okay"
#define DT_N_S_soc_S_temp_4000c000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_temp_4000c000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_temp_4000c000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_temp_4000c000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_temp_4000c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_temp_4000c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_temp_4000c000, status, 0)
#define DT_N_S_soc_S_temp_4000c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_temp_4000c000, status, 0)
#define DT_N_S_soc_S_temp_4000c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_temp_4000c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_temp_4000c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_status_LEN 1
#define DT_N_S_soc_S_temp_4000c000_P_status_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_compatible {"nordic,nrf-temp"}
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0 "nordic,nrf-temp"
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-temp
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_temp
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TEMP
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_temp_4000c000, compatible, 0)
#define DT_N_S_soc_S_temp_4000c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_temp_4000c000, compatible, 0)
#define DT_N_S_soc_S_temp_4000c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_temp_4000c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_temp_4000c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_compatible_LEN 1
#define DT_N_S_soc_S_temp_4000c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_wakeup_source 0
#define DT_N_S_soc_S_temp_4000c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_temp_4000c000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40008000
 *
 * Node identifier: DT_N_S_soc_S_timer_40008000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40008000_PATH "/soc/timer@40008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40008000_FULL_NAME "timer@40008000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40008000_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40008000_ORD 155
#define DT_N_S_soc_S_timer_40008000_ORD_STR_SORTABLE 00155

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40008000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40008000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_timer DT_N_S_soc_S_timer_40008000
#define DT_N_NODELABEL_timer0        DT_N_S_soc_S_timer_40008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40008000_REG_NUM 1
#define DT_N_S_soc_S_timer_40008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_REG_IDX_0_VAL_ADDRESS 1073774592 /* 0x40008000 */
#define DT_N_S_soc_S_timer_40008000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_40008000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40008000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_irq 8
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_40008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_40008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_40008000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40008000_P_reg {1073774592 /* 0x40008000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_0 1073774592
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_cc_num 4
#define DT_N_S_soc_S_timer_40008000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_40008000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts {8 /* 0x8 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_0 8
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_prescaler 0
#define DT_N_S_soc_S_timer_40008000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_zli 0
#define DT_N_S_soc_S_timer_40008000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_status "disabled"
#define DT_N_S_soc_S_timer_40008000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40008000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40008000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40008000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40008000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40008000, status, 0)
#define DT_N_S_soc_S_timer_40008000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40008000, status, 0)
#define DT_N_S_soc_S_timer_40008000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_status_LEN 1
#define DT_N_S_soc_S_timer_40008000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40008000, compatible, 0)
#define DT_N_S_soc_S_timer_40008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40008000, compatible, 0)
#define DT_N_S_soc_S_timer_40008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40008000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@4000a000
 *
 * Node identifier: DT_N_S_soc_S_timer_4000a000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_4000a000_PATH "/soc/timer@4000a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_4000a000_FULL_NAME "timer@4000a000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_4000a000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_4000a000_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_4000a000_ORD 156
#define DT_N_S_soc_S_timer_4000a000_ORD_STR_SORTABLE 00156

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_4000a000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_4000a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_4000a000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_timer DT_N_S_soc_S_timer_4000a000
#define DT_N_NODELABEL_timer2        DT_N_S_soc_S_timer_4000a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_4000a000_REG_NUM 1
#define DT_N_S_soc_S_timer_4000a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_REG_IDX_0_VAL_ADDRESS 1073782784 /* 0x4000a000 */
#define DT_N_S_soc_S_timer_4000a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_4000a000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_4000a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_4000a000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_irq 10
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_4000a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_4000a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_4000a000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_4000a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_4000a000_P_reg {1073782784 /* 0x4000a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_0 1073782784
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_cc_num 4
#define DT_N_S_soc_S_timer_4000a000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_4000a000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts {10 /* 0xa */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_0 10
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_prescaler 0
#define DT_N_S_soc_S_timer_4000a000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_zli 0
#define DT_N_S_soc_S_timer_4000a000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_status "disabled"
#define DT_N_S_soc_S_timer_4000a000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_4000a000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_4000a000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4000a000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_4000a000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4000a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4000a000, status, 0)
#define DT_N_S_soc_S_timer_4000a000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4000a000, status, 0)
#define DT_N_S_soc_S_timer_4000a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4000a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4000a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_status_LEN 1
#define DT_N_S_soc_S_timer_4000a000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4000a000, compatible, 0)
#define DT_N_S_soc_S_timer_4000a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4000a000, compatible, 0)
#define DT_N_S_soc_S_timer_4000a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4000a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4000a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_4000a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_4000a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_4000a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@4001a000
 *
 * Node identifier: DT_N_S_soc_S_timer_4001a000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_4001a000_PATH "/soc/timer@4001a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_4001a000_FULL_NAME "timer@4001a000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_4001a000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_4001a000_CHILD_IDX 34

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_4001a000_ORD 157
#define DT_N_S_soc_S_timer_4001a000_ORD_STR_SORTABLE 00157

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_4001a000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_4001a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_4001a000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_timer DT_N_S_soc_S_timer_4001a000
#define DT_N_NODELABEL_timer3        DT_N_S_soc_S_timer_4001a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_4001a000_REG_NUM 1
#define DT_N_S_soc_S_timer_4001a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_REG_IDX_0_VAL_ADDRESS 1073848320 /* 0x4001a000 */
#define DT_N_S_soc_S_timer_4001a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_4001a000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_4001a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_4001a000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_4001a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_4001a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_4001a000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_4001a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_4001a000_P_reg {1073848320 /* 0x4001a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_0 1073848320
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_cc_num 6
#define DT_N_S_soc_S_timer_4001a000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_4001a000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts {26 /* 0x1a */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_prescaler 0
#define DT_N_S_soc_S_timer_4001a000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_zli 0
#define DT_N_S_soc_S_timer_4001a000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_status "disabled"
#define DT_N_S_soc_S_timer_4001a000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_4001a000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_4001a000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4001a000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_4001a000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4001a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001a000, status, 0)
#define DT_N_S_soc_S_timer_4001a000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4001a000, status, 0)
#define DT_N_S_soc_S_timer_4001a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4001a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_status_LEN 1
#define DT_N_S_soc_S_timer_4001a000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001a000, compatible, 0)
#define DT_N_S_soc_S_timer_4001a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4001a000, compatible, 0)
#define DT_N_S_soc_S_timer_4001a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4001a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_4001a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_4001a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_4001a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@4001b000
 *
 * Node identifier: DT_N_S_soc_S_timer_4001b000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_4001b000_PATH "/soc/timer@4001b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_4001b000_FULL_NAME "timer@4001b000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_4001b000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_4001b000_CHILD_IDX 35

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_4001b000_ORD 158
#define DT_N_S_soc_S_timer_4001b000_ORD_STR_SORTABLE 00158

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_4001b000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_4001b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_4001b000_EXISTS 1
#define DT_N_INST_4_nordic_nrf_timer DT_N_S_soc_S_timer_4001b000
#define DT_N_NODELABEL_timer4        DT_N_S_soc_S_timer_4001b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_4001b000_REG_NUM 1
#define DT_N_S_soc_S_timer_4001b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_REG_IDX_0_VAL_ADDRESS 1073852416 /* 0x4001b000 */
#define DT_N_S_soc_S_timer_4001b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_4001b000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_4001b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_4001b000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_irq 27
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_4001b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_4001b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_4001b000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_4001b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_4001b000_P_reg {1073852416 /* 0x4001b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_0 1073852416
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_cc_num 6
#define DT_N_S_soc_S_timer_4001b000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_4001b000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts {27 /* 0x1b */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_0 27
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_prescaler 0
#define DT_N_S_soc_S_timer_4001b000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_zli 0
#define DT_N_S_soc_S_timer_4001b000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_status "disabled"
#define DT_N_S_soc_S_timer_4001b000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_4001b000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_4001b000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4001b000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_4001b000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4001b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001b000, status, 0)
#define DT_N_S_soc_S_timer_4001b000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4001b000, status, 0)
#define DT_N_S_soc_S_timer_4001b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4001b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_status_LEN 1
#define DT_N_S_soc_S_timer_4001b000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001b000, compatible, 0)
#define DT_N_S_soc_S_timer_4001b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4001b000, compatible, 0)
#define DT_N_S_soc_S_timer_4001b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4001b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_4001b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_4001b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_4001b000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv7m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv7m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 159
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00159

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status "disabled"
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, status, 0)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, status, 0)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/uart@40002000
 *
 * Node identifier: DT_N_S_soc_S_uart_40002000
 *
 * Binding (compatible = nordic,nrf-uarte):
 *   $ZEPHYR_BASE/dts/bindings/serial/nordic,nrf-uarte.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40002000_PATH "/soc/uart@40002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40002000_FULL_NAME "uart@40002000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40002000_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40002000_ORD 160
#define DT_N_S_soc_S_uart_40002000_ORD_STR_SORTABLE 00160

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40002000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	112, /* /pin-controller/uart0_default */ \
	115, /* /pin-controller/uart0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40002000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40002000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_uarte    DT_N_S_soc_S_uart_40002000
#define DT_N_NODELABEL_uart0            DT_N_S_soc_S_uart_40002000
#define DT_N_NODELABEL_pro_micro_serial DT_N_S_soc_S_uart_40002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40002000_REG_NUM 1
#define DT_N_S_soc_S_uart_40002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_REG_IDX_0_VAL_ADDRESS 1073750016 /* 0x40002000 */
#define DT_N_S_soc_S_uart_40002000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40002000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40002000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_irq 2
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_COMPAT_MATCHES_nordic_nrf_uarte 1
#define DT_N_S_soc_S_uart_40002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_uart_40002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_COMPAT_MODEL_IDX_0 "nrf-uarte"
#define DT_N_S_soc_S_uart_40002000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NUM 2
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_pin_controller_S_uart0_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40002000_P_reg {1073750016 /* 0x40002000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_0 1073750016
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts {2 /* 0x2 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_0 2
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_disable_rx 0
#define DT_N_S_soc_S_uart_40002000_P_disable_rx_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_current_speed 115200
#define DT_N_S_soc_S_uart_40002000_P_current_speed_ENUM_IDX 12
#define DT_N_S_soc_S_uart_40002000_P_current_speed_ENUM_VAL_115200_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40002000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_status "disabled"
#define DT_N_S_soc_S_uart_40002000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_40002000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_40002000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40002000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_40002000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40002000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, status, 0)
#define DT_N_S_soc_S_uart_40002000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000, status, 0)
#define DT_N_S_soc_S_uart_40002000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_status_LEN 1
#define DT_N_S_soc_S_uart_40002000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_compatible {"nordic,nrf-uarte"}
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0 "nordic,nrf-uarte"
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-uarte
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_uarte
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_UARTE
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, compatible, 0)
#define DT_N_S_soc_S_uart_40002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000, compatible, 0)
#define DT_N_S_soc_S_uart_40002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40002000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_IDX_0 DT_N_S_pin_controller_S_uart0_sleep
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_IDX_0_PH DT_N_S_pin_controller_S_uart0_sleep
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, pinctrl_1, 0)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000, pinctrl_1, 0)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_LEN 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 1)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 1)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/uart@40028000
 *
 * Node identifier: DT_N_S_soc_S_uart_40028000
 *
 * Binding (compatible = nordic,nrf-uarte):
 *   $ZEPHYR_BASE/dts/bindings/serial/nordic,nrf-uarte.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40028000_PATH "/soc/uart@40028000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40028000_FULL_NAME "uart@40028000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40028000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40028000_CHILD_IDX 48

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40028000_ORD 161
#define DT_N_S_soc_S_uart_40028000_ORD_STR_SORTABLE 00161

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40028000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40028000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40028000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_uarte DT_N_S_soc_S_uart_40028000
#define DT_N_NODELABEL_uart1         DT_N_S_soc_S_uart_40028000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40028000_REG_NUM 1
#define DT_N_S_soc_S_uart_40028000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_REG_IDX_0_VAL_ADDRESS 1073905664 /* 0x40028000 */
#define DT_N_S_soc_S_uart_40028000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40028000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40028000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40028000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_irq 40
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_COMPAT_MATCHES_nordic_nrf_uarte 1
#define DT_N_S_soc_S_uart_40028000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_uart_40028000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_COMPAT_MODEL_IDX_0 "nrf-uarte"
#define DT_N_S_soc_S_uart_40028000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40028000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40028000_P_reg {1073905664 /* 0x40028000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_0 1073905664
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts {40 /* 0x28 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_0 40
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_disable_rx 0
#define DT_N_S_soc_S_uart_40028000_P_disable_rx_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40028000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_status "disabled"
#define DT_N_S_soc_S_uart_40028000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_40028000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_40028000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40028000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_40028000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40028000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000, status, 0)
#define DT_N_S_soc_S_uart_40028000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40028000, status, 0)
#define DT_N_S_soc_S_uart_40028000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_status_LEN 1
#define DT_N_S_soc_S_uart_40028000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_compatible {"nordic,nrf-uarte"}
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0 "nordic,nrf-uarte"
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-uarte
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_uarte
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_UARTE
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000, compatible, 0)
#define DT_N_S_soc_S_uart_40028000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40028000, compatible, 0)
#define DT_N_S_soc_S_uart_40028000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40028000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40028000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40028000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/uicr@10001000
 *
 * Node identifier: DT_N_S_soc_S_uicr_10001000
 *
 * Binding (compatible = nordic,nrf-uicr):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-uicr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uicr_10001000_PATH "/soc/uicr@10001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uicr_10001000_FULL_NAME "uicr@10001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uicr_10001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uicr_10001000_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uicr_10001000_ORD 162
#define DT_N_S_soc_S_uicr_10001000_ORD_STR_SORTABLE 00162

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uicr_10001000_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uicr_10001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uicr_10001000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_uicr DT_N_S_soc_S_uicr_10001000
#define DT_N_NODELABEL_uicr         DT_N_S_soc_S_uicr_10001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uicr_10001000_REG_NUM 1
#define DT_N_S_soc_S_uicr_10001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_REG_IDX_0_VAL_ADDRESS 268439552 /* 0x10001000 */
#define DT_N_S_soc_S_uicr_10001000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uicr_10001000_RANGES_NUM 0
#define DT_N_S_soc_S_uicr_10001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uicr_10001000_IRQ_NUM 0
#define DT_N_S_soc_S_uicr_10001000_COMPAT_MATCHES_nordic_nrf_uicr 1
#define DT_N_S_soc_S_uicr_10001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_uicr_10001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_COMPAT_MODEL_IDX_0 "nrf-uicr"
#define DT_N_S_soc_S_uicr_10001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uicr_10001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uicr_10001000_P_reg {268439552 /* 0x10001000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_0 268439552
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_nfct_pins_as_gpios 0
#define DT_N_S_soc_S_uicr_10001000_P_nfct_pins_as_gpios_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_gpio_as_nreset 0
#define DT_N_S_soc_S_uicr_10001000_P_gpio_as_nreset_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_status "okay"
#define DT_N_S_soc_S_uicr_10001000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uicr_10001000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uicr_10001000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uicr_10001000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uicr_10001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uicr_10001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uicr_10001000, status, 0)
#define DT_N_S_soc_S_uicr_10001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uicr_10001000, status, 0)
#define DT_N_S_soc_S_uicr_10001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uicr_10001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_10001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uicr_10001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_10001000_P_status_LEN 1
#define DT_N_S_soc_S_uicr_10001000_P_status_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_compatible {"nordic,nrf-uicr"}
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0 "nordic,nrf-uicr"
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-uicr
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_uicr
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_UICR
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uicr_10001000, compatible, 0)
#define DT_N_S_soc_S_uicr_10001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uicr_10001000, compatible, 0)
#define DT_N_S_soc_S_uicr_10001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uicr_10001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_10001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uicr_10001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_10001000_P_compatible_LEN 1
#define DT_N_S_soc_S_uicr_10001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_wakeup_source 0
#define DT_N_S_soc_S_uicr_10001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uicr_10001000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40010000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40010000
 *
 * Binding (compatible = nordic,nrf-wdt):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/nordic,nrf-wdt.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40010000_PATH "/soc/watchdog@40010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40010000_FULL_NAME "watchdog@40010000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40010000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40010000_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40010000_ORD 163
#define DT_N_S_soc_S_watchdog_40010000_ORD_STR_SORTABLE 00163

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40010000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40010000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40010000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_wdt DT_N_S_soc_S_watchdog_40010000
#define DT_N_NODELABEL_wdt         DT_N_S_soc_S_watchdog_40010000
#define DT_N_NODELABEL_wdt0        DT_N_S_soc_S_watchdog_40010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40010000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_REG_IDX_0_VAL_ADDRESS 1073807360 /* 0x40010000 */
#define DT_N_S_soc_S_watchdog_40010000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_watchdog_40010000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40010000_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_irq 16
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_MATCHES_nordic_nrf_wdt 1
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_MODEL_IDX_0 "nrf-wdt"
#define DT_N_S_soc_S_watchdog_40010000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40010000_P_reg {1073807360 /* 0x40010000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_0 1073807360
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts {16 /* 0x10 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_0 16
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_status "okay"
#define DT_N_S_soc_S_watchdog_40010000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_watchdog_40010000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_watchdog_40010000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40010000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_watchdog_40010000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40010000, status, 0)
#define DT_N_S_soc_S_watchdog_40010000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40010000, status, 0)
#define DT_N_S_soc_S_watchdog_40010000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40010000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_compatible {"nordic,nrf-wdt"}
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0 "nordic,nrf-wdt"
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-wdt
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_wdt
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_WDT
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40010000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40010000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40010000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40010000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000
 *
 * Binding (compatible = nordic,nrf52-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/nordic,nrf52-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_PATH "/soc/flash-controller@4001e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_FULL_NAME "flash-controller@4001e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_CHILD_IDX 39

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_ORD 164
#define DT_N_S_soc_S_flash_controller_4001e000_ORD_STR_SORTABLE 00164

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_SUPPORTS_ORDS \
	165, /* /soc/flash-controller@4001e000/flash@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_EXISTS 1
#define DT_N_INST_0_nordic_nrf52_flash_controller DT_N_S_soc_S_flash_controller_4001e000
#define DT_N_NODELABEL_flash_controller           DT_N_S_soc_S_flash_controller_4001e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_REG_IDX_0_VAL_ADDRESS 1073864704 /* 0x4001e000 */
#define DT_N_S_soc_S_flash_controller_4001e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_flash_controller_4001e000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_MATCHES_nordic_nrf52_flash_controller 1
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_MODEL_IDX_0 "nrf52-flash-controller"
#define DT_N_S_soc_S_flash_controller_4001e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_P_partial_erase 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_partial_erase_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg {1073864704 /* 0x4001e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_0 1073864704
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible {"nordic,nrf52-flash-controller"}
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0 "nordic,nrf52-flash-controller"
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf52-flash-controller
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf52_flash_controller
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF52_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_4001e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_4001e000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_PATH "/soc/flash-controller@4001e000/flash@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FULL_NAME "flash@0"

/* Node parent (/soc/flash-controller@4001e000) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_PARENT DT_N_S_soc_S_flash_controller_4001e000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_ORD 165
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_ORD_STR_SORTABLE 00165

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REQUIRES_ORDS \
	164, /* /soc/flash-controller@4001e000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_SUPPORTS_ORDS \
	166, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_4001e000_S_flash_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_IDX_0_VAL_SIZE 1048576 /* 0x100000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_erase_block_size 4096
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_write_block_size 4
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg {0 /* 0x0 */, 1048576 /* 0x100000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_1 1048576
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_PATH "/soc/flash-controller@4001e000/flash@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/flash-controller@4001e000/flash@0) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_ORD 166
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_ORD_STR_SORTABLE 00166

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_REQUIRES_ORDS \
	165, /* /soc/flash-controller@4001e000/flash@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_SUPPORTS_ORDS \
	167, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@0 */ \
	168, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@26000 */ \
	169, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@ec000 */ \
	170, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@f4000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_ORD 167
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_ORD_STR_SORTABLE 00167

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REQUIRES_ORDS \
	166, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_sd_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 155648 /* 0x26000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 155648 /* 0x26000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1 155648
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@26000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@26000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FULL_NAME "partition@26000"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_ORD 168
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_ORD_STR_SORTABLE 00168

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_REQUIRES_ORDS \
	166, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_EXISTS 1
#define DT_N_NODELABEL_code_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_REG_IDX_0_VAL_ADDRESS 155648 /* 0x26000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_REG_IDX_0_VAL_SIZE 811008 /* 0xc6000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg {155648 /* 0x26000 */, 811008 /* 0xc6000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_IDX_0 155648
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_IDX_1 811008
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@ec000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@ec000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FULL_NAME "partition@ec000"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_ORD 169
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_ORD_STR_SORTABLE 00169

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REQUIRES_ORDS \
	166, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REG_IDX_0_VAL_ADDRESS 966656 /* 0xec000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg {966656 /* 0xec000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_IDX_0 966656
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_IDX_1 32768
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@f4000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@f4000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FULL_NAME "partition@f4000"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_ORD 170
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_ORD_STR_SORTABLE 00170

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REQUIRES_ORDS \
	166, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REG_IDX_0_VAL_ADDRESS 999424 /* 0xf4000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REG_IDX_0_VAL_SIZE 49152 /* 0xc000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg {999424 /* 0xf4000 */, 49152 /* 0xc000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_IDX_0 999424
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_IDX_1 49152
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/power@40000000
 *
 * Node identifier: DT_N_S_soc_S_power_40000000
 *
 * Binding (compatible = nordic,nrf-power):
 *   $ZEPHYR_BASE/dts/bindings/power/nordic,nrf-power.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_power_40000000_PATH "/soc/power@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_power_40000000_FULL_NAME "power@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_power_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_power_40000000_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_power_40000000_ORD 171
#define DT_N_S_soc_S_power_40000000_ORD_STR_SORTABLE 00171

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_power_40000000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_power_40000000_SUPPORTS_ORDS \
	172, /* /soc/power@40000000/gpregret1@4000051c */ \
	173, /* /soc/power@40000000/gpregret2@40000520 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_power_40000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_power DT_N_S_soc_S_power_40000000
#define DT_N_NODELABEL_power         DT_N_S_soc_S_power_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_power_40000000_REG_NUM 1
#define DT_N_S_soc_S_power_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_power_40000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_power_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_power_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_power_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_power_40000000_COMPAT_MATCHES_nordic_nrf_power 1
#define DT_N_S_soc_S_power_40000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_power_40000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_COMPAT_MODEL_IDX_0 "nrf-power"
#define DT_N_S_soc_S_power_40000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_power_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_power_40000000_P_reg {1073741824 /* 0x40000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_power_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_power_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_power_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_interrupts {0 /* 0x0 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_power_40000000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_power_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_power_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_status "okay"
#define DT_N_S_soc_S_power_40000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_power_40000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_power_40000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_power_40000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_power_40000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_power_40000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000, status, 0)
#define DT_N_S_soc_S_power_40000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000, status, 0)
#define DT_N_S_soc_S_power_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_P_status_LEN 1
#define DT_N_S_soc_S_power_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_compatible {"nordic,nrf-power"}
#define DT_N_S_soc_S_power_40000000_P_compatible_IDX_0 "nordic,nrf-power"
#define DT_N_S_soc_S_power_40000000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-power
#define DT_N_S_soc_S_power_40000000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_power
#define DT_N_S_soc_S_power_40000000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_POWER
#define DT_N_S_soc_S_power_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000, compatible, 0)
#define DT_N_S_soc_S_power_40000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000, compatible, 0)
#define DT_N_S_soc_S_power_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_power_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_power_40000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_power_40000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/power@40000000/gpregret1@4000051c
 *
 * Node identifier: DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c
 *
 * Binding (compatible = nordic,nrf-gpregret):
 *   $ZEPHYR_BASE/dts/bindings/retained_mem/nordic,nrf-gpreget.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_PATH "/soc/power@40000000/gpregret1@4000051c"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FULL_NAME "gpregret1@4000051c"

/* Node parent (/soc/power@40000000) identifier: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_PARENT DT_N_S_soc_S_power_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_ORD 172
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_ORD_STR_SORTABLE 00172

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_REQUIRES_ORDS \
	171, /* /soc/power@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpregret DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c
#define DT_N_NODELABEL_gpregret1        DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_REG_NUM 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_REG_IDX_0_VAL_ADDRESS 1073743132 /* 0x4000051c */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_REG_IDX_0_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_RANGES_NUM 0
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_IRQ_NUM 0
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_COMPAT_MATCHES_nordic_nrf_gpregret 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_COMPAT_MODEL_IDX_0 "nrf-gpregret"
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg {1073743132 /* 0x4000051c */, 1 /* 0x1 */}
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg_IDX_0 1073743132
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg_IDX_1 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status "okay"
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, status, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, status, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_LEN 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible {"nordic,nrf-gpregret"}
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_IDX_0 "nordic,nrf-gpregret"
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpregret
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpregret
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPREGRET
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, compatible, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, compatible, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_LEN 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_wakeup_source 0
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/power@40000000/gpregret2@40000520
 *
 * Node identifier: DT_N_S_soc_S_power_40000000_S_gpregret2_40000520
 *
 * Binding (compatible = nordic,nrf-gpregret):
 *   $ZEPHYR_BASE/dts/bindings/retained_mem/nordic,nrf-gpreget.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_PATH "/soc/power@40000000/gpregret2@40000520"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FULL_NAME "gpregret2@40000520"

/* Node parent (/soc/power@40000000) identifier: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_PARENT DT_N_S_soc_S_power_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_ORD 173
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_ORD_STR_SORTABLE 00173

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_REQUIRES_ORDS \
	171, /* /soc/power@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_EXISTS 1
#define DT_N_INST_1_nordic_nrf_gpregret DT_N_S_soc_S_power_40000000_S_gpregret2_40000520
#define DT_N_NODELABEL_gpregret2        DT_N_S_soc_S_power_40000000_S_gpregret2_40000520

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_REG_NUM 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_REG_IDX_0_VAL_ADDRESS 1073743136 /* 0x40000520 */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_REG_IDX_0_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_RANGES_NUM 0
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_IRQ_NUM 0
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_COMPAT_MATCHES_nordic_nrf_gpregret 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_COMPAT_MODEL_IDX_0 "nrf-gpregret"
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg {1073743136 /* 0x40000520 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg_IDX_0 1073743136
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg_IDX_1 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status "okay"
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, status, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, status, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_LEN 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible {"nordic,nrf-gpregret"}
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_IDX_0 "nordic,nrf-gpregret"
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpregret
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpregret
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPREGRET
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, compatible, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, compatible, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_LEN 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_wakeup_source 0
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/radio@40001000
 *
 * Node identifier: DT_N_S_soc_S_radio_40001000
 *
 * Binding (compatible = nordic,nrf-radio):
 *   $ZEPHYR_BASE/dts/bindings/net/wireless/nordic,nrf-radio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_radio_40001000_PATH "/soc/radio@40001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_radio_40001000_FULL_NAME "radio@40001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_radio_40001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_radio_40001000_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154)
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154)
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_radio_40001000_ORD 174
#define DT_N_S_soc_S_radio_40001000_ORD_STR_SORTABLE 00174

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_radio_40001000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_radio_40001000_SUPPORTS_ORDS \
	175, /* /soc/radio@40001000/ieee802154 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_radio_40001000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_radio DT_N_S_soc_S_radio_40001000
#define DT_N_NODELABEL_radio         DT_N_S_soc_S_radio_40001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_radio_40001000_REG_NUM 1
#define DT_N_S_soc_S_radio_40001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_REG_IDX_0_VAL_ADDRESS 1073745920 /* 0x40001000 */
#define DT_N_S_soc_S_radio_40001000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_radio_40001000_RANGES_NUM 0
#define DT_N_S_soc_S_radio_40001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_radio_40001000_IRQ_NUM 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_VAL_irq 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_COMPAT_MATCHES_nordic_nrf_radio 1
#define DT_N_S_soc_S_radio_40001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_radio_40001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_COMPAT_MODEL_IDX_0 "nrf-radio"
#define DT_N_S_soc_S_radio_40001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_radio_40001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_radio_40001000_P_reg {1073745920 /* 0x40001000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_radio_40001000_P_reg_IDX_0 1073745920
#define DT_N_S_soc_S_radio_40001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_radio_40001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts {1 /* 0x1 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_radio_40001000_P_interrupts_IDX_0 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_dfe_supported 0
#define DT_N_S_soc_S_radio_40001000_P_dfe_supported_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_ieee802154_supported 1
#define DT_N_S_soc_S_radio_40001000_P_ieee802154_supported_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_ble_2mbps_supported 1
#define DT_N_S_soc_S_radio_40001000_P_ble_2mbps_supported_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_ble_coded_phy_supported 1
#define DT_N_S_soc_S_radio_40001000_P_ble_coded_phy_supported_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_tx_high_power_supported 1
#define DT_N_S_soc_S_radio_40001000_P_tx_high_power_supported_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_status "okay"
#define DT_N_S_soc_S_radio_40001000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_radio_40001000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_radio_40001000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_radio_40001000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_radio_40001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_radio_40001000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_radio_40001000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_radio_40001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40001000, status, 0)
#define DT_N_S_soc_S_radio_40001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40001000, status, 0)
#define DT_N_S_soc_S_radio_40001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_P_status_LEN 1
#define DT_N_S_soc_S_radio_40001000_P_status_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_compatible {"nordic,nrf-radio"}
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0 "nordic,nrf-radio"
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-radio
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_radio
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RADIO
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40001000, compatible, 0)
#define DT_N_S_soc_S_radio_40001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40001000, compatible, 0)
#define DT_N_S_soc_S_radio_40001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_P_compatible_LEN 1
#define DT_N_S_soc_S_radio_40001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_wakeup_source 0
#define DT_N_S_soc_S_radio_40001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_radio_40001000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/radio@40001000/ieee802154
 *
 * Node identifier: DT_N_S_soc_S_radio_40001000_S_ieee802154
 *
 * Binding (compatible = nordic,nrf-ieee802154):
 *   $ZEPHYR_BASE/dts/bindings/ieee802154/nordic,nrf-ieee802154.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_PATH "/soc/radio@40001000/ieee802154"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FULL_NAME "ieee802154"

/* Node parent (/soc/radio@40001000) identifier: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_PARENT DT_N_S_soc_S_radio_40001000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_ORD 175
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_ORD_STR_SORTABLE 00175

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_REQUIRES_ORDS \
	174, /* /soc/radio@40001000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ieee802154 DT_N_S_soc_S_radio_40001000_S_ieee802154
#define DT_N_NODELABEL_ieee802154         DT_N_S_soc_S_radio_40001000_S_ieee802154

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_REG_NUM 0
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_RANGES_NUM 0
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_IRQ_NUM 0
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_COMPAT_MATCHES_nordic_nrf_ieee802154 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_COMPAT_MODEL_IDX_0 "nrf-ieee802154"
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status "disabled"
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, status, 0)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, status, 0)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_LEN 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible {"nordic,nrf-ieee802154"}
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_IDX_0 "nordic,nrf-ieee802154"
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ieee802154
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ieee802154
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_IEEE802154
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, compatible, 0)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, compatible, 0)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_LEN 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_wakeup_source 0
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/usbd@40027000
 *
 * Node identifier: DT_N_S_soc_S_usbd_40027000
 *
 * Binding (compatible = nordic,nrf-usbd):
 *   $ZEPHYR_BASE/dts/bindings/usb/nordic,nrf-usbd.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usbd_40027000_PATH "/soc/usbd@40027000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usbd_40027000_FULL_NAME "usbd@40027000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usbd_40027000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usbd_40027000_CHILD_IDX 47

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart)
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart)
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart)
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart)
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usbd_40027000_ORD 176
#define DT_N_S_soc_S_usbd_40027000_ORD_STR_SORTABLE 00176

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usbd_40027000_REQUIRES_ORDS \
	1, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usbd_40027000_SUPPORTS_ORDS \
	177, /* /soc/usbd@40027000/cdc_acm_uart */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usbd_40027000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_usbd DT_N_S_soc_S_usbd_40027000
#define DT_N_NODELABEL_usbd         DT_N_S_soc_S_usbd_40027000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usbd_40027000_REG_NUM 1
#define DT_N_S_soc_S_usbd_40027000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_REG_IDX_0_VAL_ADDRESS 1073901568 /* 0x40027000 */
#define DT_N_S_soc_S_usbd_40027000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_usbd_40027000_RANGES_NUM 0
#define DT_N_S_soc_S_usbd_40027000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usbd_40027000_IRQ_NUM 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_COMPAT_MATCHES_nordic_nrf_usbd 1
#define DT_N_S_soc_S_usbd_40027000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_usbd_40027000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_COMPAT_MODEL_IDX_0 "nrf-usbd"
#define DT_N_S_soc_S_usbd_40027000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usbd_40027000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usbd_40027000_P_reg {1073901568 /* 0x40027000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_0 1073901568
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts {39 /* 0x27 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoin_endpoints 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoin_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoout_endpoints 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoout_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_bidir_endpoints 1
#define DT_N_S_soc_S_usbd_40027000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_in_endpoints 7
#define DT_N_S_soc_S_usbd_40027000_P_num_in_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_out_endpoints 7
#define DT_N_S_soc_S_usbd_40027000_P_num_out_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_status "okay"
#define DT_N_S_soc_S_usbd_40027000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_usbd_40027000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usbd_40027000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usbd_40027000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_usbd_40027000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usbd_40027000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40027000, status, 0)
#define DT_N_S_soc_S_usbd_40027000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_40027000, status, 0)
#define DT_N_S_soc_S_usbd_40027000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_40027000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_status_LEN 1
#define DT_N_S_soc_S_usbd_40027000_P_status_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_compatible {"nordic,nrf-usbd"}
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0 "nordic,nrf-usbd"
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-usbd
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_usbd
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_USBD
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40027000, compatible, 0)
#define DT_N_S_soc_S_usbd_40027000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_40027000, compatible, 0)
#define DT_N_S_soc_S_usbd_40027000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_40027000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_compatible_LEN 1
#define DT_N_S_soc_S_usbd_40027000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_wakeup_source 0
#define DT_N_S_soc_S_usbd_40027000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usbd_40027000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/usbd@40027000/cdc_acm_uart
 *
 * Node identifier: DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart
 *
 * Binding (compatible = zephyr,cdc-acm-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/zephyr,cdc-acm-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_PATH "/soc/usbd@40027000/cdc_acm_uart"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FULL_NAME "cdc_acm_uart"

/* Node parent (/soc/usbd@40027000) identifier: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_PARENT DT_N_S_soc_S_usbd_40027000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_ORD 177
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_ORD_STR_SORTABLE 00177

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_REQUIRES_ORDS \
	176, /* /soc/usbd@40027000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_EXISTS 1
#define DT_N_INST_0_zephyr_cdc_acm_uart DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart
#define DT_N_NODELABEL_cdc_acm_uart     DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart

/* Bus info (controller: '/soc/usbd@40027000', type: '['usb']') */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_BUS_usb 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_BUS DT_N_S_soc_S_usbd_40027000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_REG_NUM 0
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_RANGES_NUM 0
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_IRQ_NUM 0
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_COMPAT_MATCHES_zephyr_cdc_acm_uart 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_COMPAT_MODEL_IDX_0 "cdc-acm-uart"
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_tx_fifo_size 1024
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_tx_fifo_size_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_rx_fifo_size 1024
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_rx_fifo_size_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_hw_flow_control 0
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible {"zephyr,cdc-acm-uart"}
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_IDX_0 "zephyr,cdc-acm-uart"
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_IDX_0_STRING_UNQUOTED zephyr,cdc-acm-uart
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_IDX_0_STRING_TOKEN zephyr_cdc_acm_uart
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_CDC_ACM_UART
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, compatible, 0)
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, compatible, 0)
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_LEN 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_wakeup_source 0
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_random_4000d000
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_4001e000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_soc_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zmk_battery                    DT_N_S_vbatt
#define DT_CHOSEN_zmk_battery_EXISTS             1
#define DT_CHOSEN_zmk_matrix_transform           DT_N_S_keymap_transform_0
#define DT_CHOSEN_zmk_matrix_transform_EXISTS    1
#define DT_CHOSEN_zmk_kscan                      DT_N_S_kscan
#define DT_CHOSEN_zmk_kscan_EXISTS               1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_ficr_10000000) fn(DT_N_S_soc_S_uicr_10001000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_clock_40000000) fn(DT_N_S_soc_S_power_40000000) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520) fn(DT_N_S_soc_S_radio_40001000) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154) fn(DT_N_S_soc_S_uart_40002000) fn(DT_N_S_soc_S_i2c_40003000) fn(DT_N_S_soc_S_spi_40003000) fn(DT_N_S_soc_S_i2c_40004000) fn(DT_N_S_soc_S_spi_40004000) fn(DT_N_S_soc_S_nfct_40005000) fn(DT_N_S_soc_S_gpiote_40006000) fn(DT_N_S_soc_S_adc_40007000) fn(DT_N_S_soc_S_timer_40008000) fn(DT_N_S_soc_S_timer_40009000) fn(DT_N_S_soc_S_timer_4000a000) fn(DT_N_S_soc_S_rtc_4000b000) fn(DT_N_S_soc_S_temp_4000c000) fn(DT_N_S_soc_S_random_4000d000) fn(DT_N_S_soc_S_ecb_4000e000) fn(DT_N_S_soc_S_ccm_4000f000) fn(DT_N_S_soc_S_watchdog_40010000) fn(DT_N_S_soc_S_rtc_40011000) fn(DT_N_S_soc_S_qdec_40012000) fn(DT_N_S_soc_S_comparator_40013000) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000) fn(DT_N_S_soc_S_timer_4001a000) fn(DT_N_S_soc_S_timer_4001b000) fn(DT_N_S_soc_S_pwm_4001c000) fn(DT_N_S_soc_S_pdm_4001d000) fn(DT_N_S_soc_S_acl_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000) fn(DT_N_S_soc_S_ppi_4001f000) fn(DT_N_S_soc_S_mwu_40020000) fn(DT_N_S_soc_S_pwm_40021000) fn(DT_N_S_soc_S_pwm_40022000) fn(DT_N_S_soc_S_spi_40023000) fn(DT_N_S_soc_S_rtc_40024000) fn(DT_N_S_soc_S_i2s_40025000) fn(DT_N_S_soc_S_usbd_40027000) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart) fn(DT_N_S_soc_S_uart_40028000) fn(DT_N_S_soc_S_qspi_40029000) fn(DT_N_S_soc_S_pwm_4002d000) fn(DT_N_S_soc_S_spi_4002f000) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300) fn(DT_N_S_soc_S_crypto_5002a000) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1) fn(DT_N_S_pin_controller_S_i2c0_sleep) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1) fn(DT_N_S_entropy_bt_hci) fn(DT_N_S_sw_pwm) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000) fn(DT_N_S_connector) fn(DT_N_S_connector_a) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_ext_power) fn(DT_N_S_vbatt) fn(DT_N_S_keymap_transform_0) fn(DT_N_S_kscan) fn(DT_N_S_behaviors) fn(DT_N_S_behaviors_S_key_press) fn(DT_N_S_behaviors_S_key_toggle) fn(DT_N_S_behaviors_S_transparent) fn(DT_N_S_behaviors_S_sticky_key) fn(DT_N_S_behaviors_S_momentary_layer) fn(DT_N_S_behaviors_S_toggle_layer) fn(DT_N_S_behaviors_S_sysreset) fn(DT_N_S_behaviors_S_bootload) fn(DT_N_S_behaviors_S_rgb_ug) fn(DT_N_S_behaviors_S_bluetooth) fn(DT_N_S_behaviors_S_extpower) fn(DT_N_S_behaviors_S_outputs) fn(DT_N_S_behaviors_S_macro_tap) fn(DT_N_S_behaviors_S_macro_press) fn(DT_N_S_behaviors_S_macro_release) fn(DT_N_S_behaviors_S_macro_tap_time) fn(DT_N_S_behaviors_S_macro_wait_time) fn(DT_N_S_behaviors_S_macro_pause_for_release) fn(DT_N_S_behaviors_S_macro_param_1to1) fn(DT_N_S_behaviors_S_macro_param_1to2) fn(DT_N_S_behaviors_S_macro_param_2to1) fn(DT_N_S_behaviors_S_macro_param_2to2) fn(DT_N_S_behaviors_S_mouse_key_press) fn(DT_N_S_behaviors_S_lshft_tap_dance) fn(DT_N_S_behaviors_S_lctrl_tap_dance) fn(DT_N_S_behaviors_S_lgui_tap_dance) fn(DT_N_S_behaviors_S_lalt_tap_dance) fn(DT_N_S_behaviors_S_navmod_layer_tap_dance) fn(DT_N_S_behaviors_S_seminav_tap_dance) fn(DT_N_S_behaviors_S_r_shifted_tap_dance) fn(DT_N_S_behaviors_S_e_shifted_tap_dance) fn(DT_N_S_behaviors_S_i_shifted_tap_dance) fn(DT_N_S_behaviors_S_u_shifted_tap_dance) fn(DT_N_S_behaviors_S_j_shifted_tap_dance) fn(DT_N_S_combos) fn(DT_N_S_combos_S_combo_grave) fn(DT_N_S_combos_S_combo_one) fn(DT_N_S_combos_S_combo_two) fn(DT_N_S_combos_S_combo_three) fn(DT_N_S_combos_S_combo_four) fn(DT_N_S_combos_S_combo_five) fn(DT_N_S_combos_S_combo_six) fn(DT_N_S_combos_S_combo_seven) fn(DT_N_S_combos_S_combo_eight) fn(DT_N_S_combos_S_combo_nine) fn(DT_N_S_combos_S_combo_zero) fn(DT_N_S_combos_S_combo_minus) fn(DT_N_S_combos_S_combo_equal) fn(DT_N_S_combos_S_combo_singe_quote) fn(DT_N_S_combos_S_combo_backslash) fn(DT_N_S_combos_S_combo_left_bracket) fn(DT_N_S_combos_S_combo_right_bracket) fn(DT_N_S_combos_S_combo_left) fn(DT_N_S_combos_S_combo_down) fn(DT_N_S_combos_S_combo_up) fn(DT_N_S_combos_S_combo_right) fn(DT_N_S_combos_S_combo_home) fn(DT_N_S_combos_S_combo_page_down) fn(DT_N_S_combos_S_combo_page_up) fn(DT_N_S_combos_S_combo_end) fn(DT_N_S_combos_S_combo_escape) fn(DT_N_S_combos_S_combo_tab) fn(DT_N_S_combos_S_combo_delete) fn(DT_N_S_combos_S_combo_lctrldelete) fn(DT_N_S_combos_S_combo_backspace) fn(DT_N_S_combos_S_combo_lctrlbackspace) fn(DT_N_S_combos_S_combo_enter) fn(DT_N_S_combos_S_combo_printscreen) fn(DT_N_S_combos_S_combo_left_click) fn(DT_N_S_combos_S_combo_right_click) fn(DT_N_S_combos_S_combo_middle_click) fn(DT_N_S_combos_S_combo_external_power_on) fn(DT_N_S_combos_S_combo_external_power_off) fn(DT_N_S_combos_S_combo_output_bluetooth) fn(DT_N_S_combos_S_combo_output_usb) fn(DT_N_S_combos_S_combo_sys_reset_left) fn(DT_N_S_combos_S_combo_sys_reset_right) fn(DT_N_S_keymap) fn(DT_N_S_keymap_S_0) fn(DT_N_S_keymap_S_1) fn(DT_N_S_keymap_S_2) fn(DT_N_S_keymap_S_3) fn(DT_N_S_keymap_S_4) fn(DT_N_S_keymap_S_5) fn(DT_N_S_keymap_S_6)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_ficr_10000000) fn(DT_N_S_soc_S_uicr_10001000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_clock_40000000) fn(DT_N_S_soc_S_power_40000000) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520) fn(DT_N_S_soc_S_radio_40001000) fn(DT_N_S_soc_S_nfct_40005000) fn(DT_N_S_soc_S_gpiote_40006000) fn(DT_N_S_soc_S_adc_40007000) fn(DT_N_S_soc_S_temp_4000c000) fn(DT_N_S_soc_S_random_4000d000) fn(DT_N_S_soc_S_ecb_4000e000) fn(DT_N_S_soc_S_ccm_4000f000) fn(DT_N_S_soc_S_watchdog_40010000) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000) fn(DT_N_S_soc_S_acl_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000) fn(DT_N_S_soc_S_ppi_4001f000) fn(DT_N_S_soc_S_mwu_40020000) fn(DT_N_S_soc_S_usbd_40027000) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1) fn(DT_N_S_pin_controller_S_i2c0_sleep) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1) fn(DT_N_S_entropy_bt_hci) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000) fn(DT_N_S_connector) fn(DT_N_S_connector_a) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_ext_power) fn(DT_N_S_vbatt) fn(DT_N_S_keymap_transform_0) fn(DT_N_S_kscan) fn(DT_N_S_behaviors) fn(DT_N_S_behaviors_S_key_press) fn(DT_N_S_behaviors_S_key_toggle) fn(DT_N_S_behaviors_S_transparent) fn(DT_N_S_behaviors_S_sticky_key) fn(DT_N_S_behaviors_S_momentary_layer) fn(DT_N_S_behaviors_S_toggle_layer) fn(DT_N_S_behaviors_S_sysreset) fn(DT_N_S_behaviors_S_bootload) fn(DT_N_S_behaviors_S_rgb_ug) fn(DT_N_S_behaviors_S_bluetooth) fn(DT_N_S_behaviors_S_extpower) fn(DT_N_S_behaviors_S_outputs) fn(DT_N_S_behaviors_S_macro_tap) fn(DT_N_S_behaviors_S_macro_press) fn(DT_N_S_behaviors_S_macro_release) fn(DT_N_S_behaviors_S_macro_tap_time) fn(DT_N_S_behaviors_S_macro_wait_time) fn(DT_N_S_behaviors_S_macro_pause_for_release) fn(DT_N_S_behaviors_S_macro_param_1to1) fn(DT_N_S_behaviors_S_macro_param_1to2) fn(DT_N_S_behaviors_S_macro_param_2to1) fn(DT_N_S_behaviors_S_macro_param_2to2) fn(DT_N_S_behaviors_S_mouse_key_press) fn(DT_N_S_behaviors_S_lshft_tap_dance) fn(DT_N_S_behaviors_S_lctrl_tap_dance) fn(DT_N_S_behaviors_S_lgui_tap_dance) fn(DT_N_S_behaviors_S_lalt_tap_dance) fn(DT_N_S_behaviors_S_navmod_layer_tap_dance) fn(DT_N_S_behaviors_S_seminav_tap_dance) fn(DT_N_S_behaviors_S_r_shifted_tap_dance) fn(DT_N_S_behaviors_S_e_shifted_tap_dance) fn(DT_N_S_behaviors_S_i_shifted_tap_dance) fn(DT_N_S_behaviors_S_u_shifted_tap_dance) fn(DT_N_S_behaviors_S_j_shifted_tap_dance) fn(DT_N_S_combos) fn(DT_N_S_combos_S_combo_grave) fn(DT_N_S_combos_S_combo_one) fn(DT_N_S_combos_S_combo_two) fn(DT_N_S_combos_S_combo_three) fn(DT_N_S_combos_S_combo_four) fn(DT_N_S_combos_S_combo_five) fn(DT_N_S_combos_S_combo_six) fn(DT_N_S_combos_S_combo_seven) fn(DT_N_S_combos_S_combo_eight) fn(DT_N_S_combos_S_combo_nine) fn(DT_N_S_combos_S_combo_zero) fn(DT_N_S_combos_S_combo_minus) fn(DT_N_S_combos_S_combo_equal) fn(DT_N_S_combos_S_combo_singe_quote) fn(DT_N_S_combos_S_combo_backslash) fn(DT_N_S_combos_S_combo_left_bracket) fn(DT_N_S_combos_S_combo_right_bracket) fn(DT_N_S_combos_S_combo_left) fn(DT_N_S_combos_S_combo_down) fn(DT_N_S_combos_S_combo_up) fn(DT_N_S_combos_S_combo_right) fn(DT_N_S_combos_S_combo_home) fn(DT_N_S_combos_S_combo_page_down) fn(DT_N_S_combos_S_combo_page_up) fn(DT_N_S_combos_S_combo_end) fn(DT_N_S_combos_S_combo_escape) fn(DT_N_S_combos_S_combo_tab) fn(DT_N_S_combos_S_combo_delete) fn(DT_N_S_combos_S_combo_lctrldelete) fn(DT_N_S_combos_S_combo_backspace) fn(DT_N_S_combos_S_combo_lctrlbackspace) fn(DT_N_S_combos_S_combo_enter) fn(DT_N_S_combos_S_combo_printscreen) fn(DT_N_S_combos_S_combo_left_click) fn(DT_N_S_combos_S_combo_right_click) fn(DT_N_S_combos_S_combo_middle_click) fn(DT_N_S_combos_S_combo_external_power_on) fn(DT_N_S_combos_S_combo_external_power_off) fn(DT_N_S_combos_S_combo_output_bluetooth) fn(DT_N_S_combos_S_combo_output_usb) fn(DT_N_S_combos_S_combo_sys_reset_left) fn(DT_N_S_combos_S_combo_sys_reset_right) fn(DT_N_S_keymap) fn(DT_N_S_keymap_S_0) fn(DT_N_S_keymap_S_1) fn(DT_N_S_keymap_S_2) fn(DT_N_S_keymap_S_3) fn(DT_N_S_keymap_S_4) fn(DT_N_S_keymap_S_5) fn(DT_N_S_keymap_S_6)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4000a000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_4000b000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_qdec_40012000, __VA_ARGS__) fn(DT_N_S_soc_S_comparator_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001a000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001b000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4001c000, __VA_ARGS__) fn(DT_N_S_soc_S_pdm_4001d000, __VA_ARGS__) fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, __VA_ARGS__) fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40023000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40024000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40025000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_qspi_40029000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4002d000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_4002f000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__) fn(DT_N_S_soc_S_crypto_5002a000, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) fn(DT_N_S_sw_pwm, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_connector_a, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_ext_power, __VA_ARGS__) fn(DT_N_S_vbatt, __VA_ARGS__) fn(DT_N_S_keymap_transform_0, __VA_ARGS__) fn(DT_N_S_kscan, __VA_ARGS__) fn(DT_N_S_behaviors, __VA_ARGS__) fn(DT_N_S_behaviors_S_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_key_toggle, __VA_ARGS__) fn(DT_N_S_behaviors_S_transparent, __VA_ARGS__) fn(DT_N_S_behaviors_S_sticky_key, __VA_ARGS__) fn(DT_N_S_behaviors_S_momentary_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_toggle_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_sysreset, __VA_ARGS__) fn(DT_N_S_behaviors_S_bootload, __VA_ARGS__) fn(DT_N_S_behaviors_S_rgb_ug, __VA_ARGS__) fn(DT_N_S_behaviors_S_bluetooth, __VA_ARGS__) fn(DT_N_S_behaviors_S_extpower, __VA_ARGS__) fn(DT_N_S_behaviors_S_outputs, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_tap, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_tap_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_wait_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_1to1, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_1to2, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_2to1, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_2to2, __VA_ARGS__) fn(DT_N_S_behaviors_S_mouse_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_lshft_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_lctrl_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_lgui_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_lalt_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_navmod_layer_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_seminav_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_r_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_e_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_i_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_j_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_combos, __VA_ARGS__) fn(DT_N_S_combos_S_combo_grave, __VA_ARGS__) fn(DT_N_S_combos_S_combo_one, __VA_ARGS__) fn(DT_N_S_combos_S_combo_two, __VA_ARGS__) fn(DT_N_S_combos_S_combo_three, __VA_ARGS__) fn(DT_N_S_combos_S_combo_four, __VA_ARGS__) fn(DT_N_S_combos_S_combo_five, __VA_ARGS__) fn(DT_N_S_combos_S_combo_six, __VA_ARGS__) fn(DT_N_S_combos_S_combo_seven, __VA_ARGS__) fn(DT_N_S_combos_S_combo_eight, __VA_ARGS__) fn(DT_N_S_combos_S_combo_nine, __VA_ARGS__) fn(DT_N_S_combos_S_combo_zero, __VA_ARGS__) fn(DT_N_S_combos_S_combo_minus, __VA_ARGS__) fn(DT_N_S_combos_S_combo_equal, __VA_ARGS__) fn(DT_N_S_combos_S_combo_singe_quote, __VA_ARGS__) fn(DT_N_S_combos_S_combo_backslash, __VA_ARGS__) fn(DT_N_S_combos_S_combo_left_bracket, __VA_ARGS__) fn(DT_N_S_combos_S_combo_right_bracket, __VA_ARGS__) fn(DT_N_S_combos_S_combo_left, __VA_ARGS__) fn(DT_N_S_combos_S_combo_down, __VA_ARGS__) fn(DT_N_S_combos_S_combo_up, __VA_ARGS__) fn(DT_N_S_combos_S_combo_right, __VA_ARGS__) fn(DT_N_S_combos_S_combo_home, __VA_ARGS__) fn(DT_N_S_combos_S_combo_page_down, __VA_ARGS__) fn(DT_N_S_combos_S_combo_page_up, __VA_ARGS__) fn(DT_N_S_combos_S_combo_end, __VA_ARGS__) fn(DT_N_S_combos_S_combo_escape, __VA_ARGS__) fn(DT_N_S_combos_S_combo_tab, __VA_ARGS__) fn(DT_N_S_combos_S_combo_delete, __VA_ARGS__) fn(DT_N_S_combos_S_combo_lctrldelete, __VA_ARGS__) fn(DT_N_S_combos_S_combo_backspace, __VA_ARGS__) fn(DT_N_S_combos_S_combo_lctrlbackspace, __VA_ARGS__) fn(DT_N_S_combos_S_combo_enter, __VA_ARGS__) fn(DT_N_S_combos_S_combo_printscreen, __VA_ARGS__) fn(DT_N_S_combos_S_combo_left_click, __VA_ARGS__) fn(DT_N_S_combos_S_combo_right_click, __VA_ARGS__) fn(DT_N_S_combos_S_combo_middle_click, __VA_ARGS__) fn(DT_N_S_combos_S_combo_external_power_on, __VA_ARGS__) fn(DT_N_S_combos_S_combo_external_power_off, __VA_ARGS__) fn(DT_N_S_combos_S_combo_output_bluetooth, __VA_ARGS__) fn(DT_N_S_combos_S_combo_output_usb, __VA_ARGS__) fn(DT_N_S_combos_S_combo_sys_reset_left, __VA_ARGS__) fn(DT_N_S_combos_S_combo_sys_reset_right, __VA_ARGS__) fn(DT_N_S_keymap, __VA_ARGS__) fn(DT_N_S_keymap_S_0, __VA_ARGS__) fn(DT_N_S_keymap_S_1, __VA_ARGS__) fn(DT_N_S_keymap_S_2, __VA_ARGS__) fn(DT_N_S_keymap_S_3, __VA_ARGS__) fn(DT_N_S_keymap_S_4, __VA_ARGS__) fn(DT_N_S_keymap_S_5, __VA_ARGS__) fn(DT_N_S_keymap_S_6, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, __VA_ARGS__) fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_connector_a, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_ext_power, __VA_ARGS__) fn(DT_N_S_vbatt, __VA_ARGS__) fn(DT_N_S_keymap_transform_0, __VA_ARGS__) fn(DT_N_S_kscan, __VA_ARGS__) fn(DT_N_S_behaviors, __VA_ARGS__) fn(DT_N_S_behaviors_S_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_key_toggle, __VA_ARGS__) fn(DT_N_S_behaviors_S_transparent, __VA_ARGS__) fn(DT_N_S_behaviors_S_sticky_key, __VA_ARGS__) fn(DT_N_S_behaviors_S_momentary_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_toggle_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_sysreset, __VA_ARGS__) fn(DT_N_S_behaviors_S_bootload, __VA_ARGS__) fn(DT_N_S_behaviors_S_rgb_ug, __VA_ARGS__) fn(DT_N_S_behaviors_S_bluetooth, __VA_ARGS__) fn(DT_N_S_behaviors_S_extpower, __VA_ARGS__) fn(DT_N_S_behaviors_S_outputs, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_tap, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_tap_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_wait_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_1to1, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_1to2, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_2to1, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_2to2, __VA_ARGS__) fn(DT_N_S_behaviors_S_mouse_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_lshft_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_lctrl_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_lgui_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_lalt_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_navmod_layer_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_seminav_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_r_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_e_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_i_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_j_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_combos, __VA_ARGS__) fn(DT_N_S_combos_S_combo_grave, __VA_ARGS__) fn(DT_N_S_combos_S_combo_one, __VA_ARGS__) fn(DT_N_S_combos_S_combo_two, __VA_ARGS__) fn(DT_N_S_combos_S_combo_three, __VA_ARGS__) fn(DT_N_S_combos_S_combo_four, __VA_ARGS__) fn(DT_N_S_combos_S_combo_five, __VA_ARGS__) fn(DT_N_S_combos_S_combo_six, __VA_ARGS__) fn(DT_N_S_combos_S_combo_seven, __VA_ARGS__) fn(DT_N_S_combos_S_combo_eight, __VA_ARGS__) fn(DT_N_S_combos_S_combo_nine, __VA_ARGS__) fn(DT_N_S_combos_S_combo_zero, __VA_ARGS__) fn(DT_N_S_combos_S_combo_minus, __VA_ARGS__) fn(DT_N_S_combos_S_combo_equal, __VA_ARGS__) fn(DT_N_S_combos_S_combo_singe_quote, __VA_ARGS__) fn(DT_N_S_combos_S_combo_backslash, __VA_ARGS__) fn(DT_N_S_combos_S_combo_left_bracket, __VA_ARGS__) fn(DT_N_S_combos_S_combo_right_bracket, __VA_ARGS__) fn(DT_N_S_combos_S_combo_left, __VA_ARGS__) fn(DT_N_S_combos_S_combo_down, __VA_ARGS__) fn(DT_N_S_combos_S_combo_up, __VA_ARGS__) fn(DT_N_S_combos_S_combo_right, __VA_ARGS__) fn(DT_N_S_combos_S_combo_home, __VA_ARGS__) fn(DT_N_S_combos_S_combo_page_down, __VA_ARGS__) fn(DT_N_S_combos_S_combo_page_up, __VA_ARGS__) fn(DT_N_S_combos_S_combo_end, __VA_ARGS__) fn(DT_N_S_combos_S_combo_escape, __VA_ARGS__) fn(DT_N_S_combos_S_combo_tab, __VA_ARGS__) fn(DT_N_S_combos_S_combo_delete, __VA_ARGS__) fn(DT_N_S_combos_S_combo_lctrldelete, __VA_ARGS__) fn(DT_N_S_combos_S_combo_backspace, __VA_ARGS__) fn(DT_N_S_combos_S_combo_lctrlbackspace, __VA_ARGS__) fn(DT_N_S_combos_S_combo_enter, __VA_ARGS__) fn(DT_N_S_combos_S_combo_printscreen, __VA_ARGS__) fn(DT_N_S_combos_S_combo_left_click, __VA_ARGS__) fn(DT_N_S_combos_S_combo_right_click, __VA_ARGS__) fn(DT_N_S_combos_S_combo_middle_click, __VA_ARGS__) fn(DT_N_S_combos_S_combo_external_power_on, __VA_ARGS__) fn(DT_N_S_combos_S_combo_external_power_off, __VA_ARGS__) fn(DT_N_S_combos_S_combo_output_bluetooth, __VA_ARGS__) fn(DT_N_S_combos_S_combo_output_usb, __VA_ARGS__) fn(DT_N_S_combos_S_combo_sys_reset_left, __VA_ARGS__) fn(DT_N_S_combos_S_combo_sys_reset_right, __VA_ARGS__) fn(DT_N_S_keymap, __VA_ARGS__) fn(DT_N_S_keymap_S_0, __VA_ARGS__) fn(DT_N_S_keymap_S_1, __VA_ARGS__) fn(DT_N_S_keymap_S_2, __VA_ARGS__) fn(DT_N_S_keymap_S_3, __VA_ARGS__) fn(DT_N_S_keymap_S_4, __VA_ARGS__) fn(DT_N_S_keymap_S_5, __VA_ARGS__) fn(DT_N_S_keymap_S_6, __VA_ARGS__)

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_nice_nano 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52840_qiaa 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52840 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ficr 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_uicr 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_clock 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_power 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpregret 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_radio 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_nfct 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpiote 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_saadc 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_temp 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_rng 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ecb 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ccm 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_wdt 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_egu 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_swi 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_acl 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ppi 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_mwu 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_usbd 1
#define DT_COMPAT_HAS_OKAY_zephyr_cdc_acm_uart 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpio 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_pinctrl 1
#define DT_COMPAT_HAS_OKAY_zephyr_bt_hci_entropy 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_itm 1
#define DT_COMPAT_HAS_OKAY_arduino_pro_micro 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_zmk_ext_power_generic 1
#define DT_COMPAT_HAS_OKAY_zmk_battery_nrf_vddh 1
#define DT_COMPAT_HAS_OKAY_zmk_matrix_transform 1
#define DT_COMPAT_HAS_OKAY_zmk_kscan_gpio_matrix 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_key_press 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_key_toggle 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_transparent 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_sticky_key 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_momentary_layer 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_toggle_layer 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_reset 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_rgb_underglow 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_bluetooth 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_ext_power 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_outputs 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_mode_tap 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_mode_press 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_mode_release 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_tap_time 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_wait_time 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_pause_for_release 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_param_1to1 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_param_1to2 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_param_2to1 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_param_2to2 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_mouse_key_press 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_tap_dance 1
#define DT_COMPAT_HAS_OKAY_zmk_combos 1
#define DT_COMPAT_HAS_OKAY_zmk_keymap 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_nice_nano_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52840_qiaa_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52840_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ficr_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_uicr_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_clock_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_power_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_gpregret_NUM_OKAY 2
#define DT_N_INST_nordic_nrf_radio_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_nfct_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_gpiote_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_saadc_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_temp_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_rng_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ecb_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ccm_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_wdt_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_egu_NUM_OKAY 6
#define DT_N_INST_nordic_nrf_swi_NUM_OKAY 6
#define DT_N_INST_nordic_nrf_acl_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ppi_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_mwu_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_usbd_NUM_OKAY 1
#define DT_N_INST_zephyr_cdc_acm_uart_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_gpio_NUM_OKAY 2
#define DT_N_INST_nordic_nrf_pinctrl_NUM_OKAY 1
#define DT_N_INST_zephyr_bt_hci_entropy_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_itm_NUM_OKAY 1
#define DT_N_INST_arduino_pro_micro_NUM_OKAY 2
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_zmk_ext_power_generic_NUM_OKAY 1
#define DT_N_INST_zmk_battery_nrf_vddh_NUM_OKAY 1
#define DT_N_INST_zmk_matrix_transform_NUM_OKAY 1
#define DT_N_INST_zmk_kscan_gpio_matrix_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_key_press_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_key_toggle_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_transparent_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_sticky_key_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_momentary_layer_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_toggle_layer_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_reset_NUM_OKAY 2
#define DT_N_INST_zmk_behavior_rgb_underglow_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_bluetooth_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_ext_power_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_outputs_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_mode_tap_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_mode_press_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_mode_release_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_tap_time_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_wait_time_NUM_OKAY 1
#define DT_N_INST_zmk_macro_pause_for_release_NUM_OKAY 1
#define DT_N_INST_zmk_macro_param_1to1_NUM_OKAY 1
#define DT_N_INST_zmk_macro_param_1to2_NUM_OKAY 1
#define DT_N_INST_zmk_macro_param_2to1_NUM_OKAY 1
#define DT_N_INST_zmk_macro_param_2to2_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_mouse_key_press_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_tap_dance_NUM_OKAY 11
#define DT_N_INST_zmk_combos_NUM_OKAY 1
#define DT_N_INST_zmk_keymap_NUM_OKAY 1
#define DT_FOREACH_OKAY_nice_nano(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_nice_nano(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nice_nano(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nice_nano(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf52840_qiaa(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf52840_qiaa(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf52840_qiaa(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf52840_qiaa(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf52840(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf52840(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf52840(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf52840(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf52(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf52(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf52(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf52(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ficr(fn) fn(DT_N_S_soc_S_ficr_10000000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ficr(fn, ...) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ficr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ficr(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_uicr(fn) fn(DT_N_S_soc_S_uicr_10001000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_uicr(fn, ...) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_uicr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_uicr(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_clock(fn) fn(DT_N_S_soc_S_clock_40000000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_clock(fn, ...) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_power(fn) fn(DT_N_S_soc_S_power_40000000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_power(fn, ...) fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_power(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_power(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_gpregret(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_gpregret(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpregret(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_gpregret(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_radio(fn) fn(DT_N_S_soc_S_radio_40001000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_radio(fn, ...) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_radio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_radio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_nfct(fn) fn(DT_N_S_soc_S_nfct_40005000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_nfct(fn, ...) fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_nfct(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_nfct(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_gpiote(fn) fn(DT_N_S_soc_S_gpiote_40006000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_gpiote(fn, ...) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpiote(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_gpiote(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_saadc(fn) fn(DT_N_S_soc_S_adc_40007000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_saadc(fn, ...) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_saadc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_saadc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_temp(fn) fn(DT_N_S_soc_S_temp_4000c000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_temp(fn, ...) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_temp(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_temp(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_rng(fn) fn(DT_N_S_soc_S_random_4000d000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_rng(fn, ...) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_rng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_rng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ecb(fn) fn(DT_N_S_soc_S_ecb_4000e000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ecb(fn, ...) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ecb(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ecb(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ccm(fn) fn(DT_N_S_soc_S_ccm_4000f000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ccm(fn, ...) fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ccm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ccm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_wdt(fn) fn(DT_N_S_soc_S_watchdog_40010000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_wdt(fn, ...) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_wdt(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_wdt(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_egu(fn) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_egu(fn, ...) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_egu(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_egu(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_swi(fn) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_swi(fn, ...) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_swi(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_swi(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_acl(fn) fn(DT_N_S_soc_S_acl_4001e000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_acl(fn, ...) fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_acl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_acl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf52_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_4001e000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf52_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf52_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf52_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ppi(fn) fn(DT_N_S_soc_S_ppi_4001f000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ppi(fn, ...) fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ppi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ppi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_mwu(fn) fn(DT_N_S_soc_S_mwu_40020000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_mwu(fn, ...) fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_mwu(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_mwu(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_usbd(fn) fn(DT_N_S_soc_S_usbd_40027000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_usbd(fn, ...) fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_usbd(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_usbd(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_cdc_acm_uart(fn) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart)
#define DT_FOREACH_OKAY_VARGS_zephyr_cdc_acm_uart(fn, ...) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_cdc_acm_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_cdc_acm_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_gpio(fn) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_gpio(fn, ...) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpio(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_pinctrl(fn) fn(DT_N_S_pin_controller)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_pinctrl(fn, ...) fn(DT_N_S_pin_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_bt_hci_entropy(fn) fn(DT_N_S_entropy_bt_hci)
#define DT_FOREACH_OKAY_VARGS_zephyr_bt_hci_entropy(fn, ...) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_bt_hci_entropy(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_bt_hci_entropy(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4f(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4f(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_itm(fn) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_itm(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_itm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_itm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arduino_pro_micro(fn) fn(DT_N_S_connector) fn(DT_N_S_connector_a)
#define DT_FOREACH_OKAY_VARGS_arduino_pro_micro(fn, ...) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_connector_a, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arduino_pro_micro(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_arduino_pro_micro(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_ext_power_generic(fn) fn(DT_N_S_ext_power)
#define DT_FOREACH_OKAY_VARGS_zmk_ext_power_generic(fn, ...) fn(DT_N_S_ext_power, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_ext_power_generic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_ext_power_generic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_battery_nrf_vddh(fn) fn(DT_N_S_vbatt)
#define DT_FOREACH_OKAY_VARGS_zmk_battery_nrf_vddh(fn, ...) fn(DT_N_S_vbatt, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_battery_nrf_vddh(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_battery_nrf_vddh(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_matrix_transform(fn) fn(DT_N_S_keymap_transform_0)
#define DT_FOREACH_OKAY_VARGS_zmk_matrix_transform(fn, ...) fn(DT_N_S_keymap_transform_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_matrix_transform(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_matrix_transform(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_kscan_gpio_matrix(fn) fn(DT_N_S_kscan)
#define DT_FOREACH_OKAY_VARGS_zmk_kscan_gpio_matrix(fn, ...) fn(DT_N_S_kscan, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_kscan_gpio_matrix(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_kscan_gpio_matrix(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_key_press(fn) fn(DT_N_S_behaviors_S_key_press)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_key_press(fn, ...) fn(DT_N_S_behaviors_S_key_press, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_key_press(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_key_press(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_key_toggle(fn) fn(DT_N_S_behaviors_S_key_toggle)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_key_toggle(fn, ...) fn(DT_N_S_behaviors_S_key_toggle, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_key_toggle(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_key_toggle(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_transparent(fn) fn(DT_N_S_behaviors_S_transparent)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_transparent(fn, ...) fn(DT_N_S_behaviors_S_transparent, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_transparent(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_transparent(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_sticky_key(fn) fn(DT_N_S_behaviors_S_sticky_key)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_sticky_key(fn, ...) fn(DT_N_S_behaviors_S_sticky_key, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_sticky_key(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_sticky_key(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_momentary_layer(fn) fn(DT_N_S_behaviors_S_momentary_layer)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_momentary_layer(fn, ...) fn(DT_N_S_behaviors_S_momentary_layer, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_momentary_layer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_momentary_layer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_toggle_layer(fn) fn(DT_N_S_behaviors_S_toggle_layer)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_toggle_layer(fn, ...) fn(DT_N_S_behaviors_S_toggle_layer, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_toggle_layer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_toggle_layer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_reset(fn) fn(DT_N_S_behaviors_S_sysreset) fn(DT_N_S_behaviors_S_bootload)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_reset(fn, ...) fn(DT_N_S_behaviors_S_sysreset, __VA_ARGS__) fn(DT_N_S_behaviors_S_bootload, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_reset(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_reset(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_rgb_underglow(fn) fn(DT_N_S_behaviors_S_rgb_ug)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_rgb_underglow(fn, ...) fn(DT_N_S_behaviors_S_rgb_ug, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_rgb_underglow(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_rgb_underglow(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_bluetooth(fn) fn(DT_N_S_behaviors_S_bluetooth)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_bluetooth(fn, ...) fn(DT_N_S_behaviors_S_bluetooth, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_bluetooth(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_bluetooth(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_ext_power(fn) fn(DT_N_S_behaviors_S_extpower)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_ext_power(fn, ...) fn(DT_N_S_behaviors_S_extpower, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_ext_power(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_ext_power(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_outputs(fn) fn(DT_N_S_behaviors_S_outputs)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_outputs(fn, ...) fn(DT_N_S_behaviors_S_outputs, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_outputs(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_outputs(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_control_mode_tap(fn) fn(DT_N_S_behaviors_S_macro_tap)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_control_mode_tap(fn, ...) fn(DT_N_S_behaviors_S_macro_tap, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_mode_tap(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_control_mode_tap(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_control_mode_press(fn) fn(DT_N_S_behaviors_S_macro_press)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_control_mode_press(fn, ...) fn(DT_N_S_behaviors_S_macro_press, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_mode_press(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_control_mode_press(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_control_mode_release(fn) fn(DT_N_S_behaviors_S_macro_release)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_control_mode_release(fn, ...) fn(DT_N_S_behaviors_S_macro_release, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_mode_release(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_control_mode_release(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_control_tap_time(fn) fn(DT_N_S_behaviors_S_macro_tap_time)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_control_tap_time(fn, ...) fn(DT_N_S_behaviors_S_macro_tap_time, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_tap_time(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_control_tap_time(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_control_wait_time(fn) fn(DT_N_S_behaviors_S_macro_wait_time)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_control_wait_time(fn, ...) fn(DT_N_S_behaviors_S_macro_wait_time, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_wait_time(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_control_wait_time(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_pause_for_release(fn) fn(DT_N_S_behaviors_S_macro_pause_for_release)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_pause_for_release(fn, ...) fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_pause_for_release(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_pause_for_release(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_param_1to1(fn) fn(DT_N_S_behaviors_S_macro_param_1to1)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_param_1to1(fn, ...) fn(DT_N_S_behaviors_S_macro_param_1to1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_param_1to1(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_param_1to1(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_param_1to2(fn) fn(DT_N_S_behaviors_S_macro_param_1to2)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_param_1to2(fn, ...) fn(DT_N_S_behaviors_S_macro_param_1to2, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_param_1to2(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_param_1to2(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_param_2to1(fn) fn(DT_N_S_behaviors_S_macro_param_2to1)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_param_2to1(fn, ...) fn(DT_N_S_behaviors_S_macro_param_2to1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_param_2to1(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_param_2to1(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_param_2to2(fn) fn(DT_N_S_behaviors_S_macro_param_2to2)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_param_2to2(fn, ...) fn(DT_N_S_behaviors_S_macro_param_2to2, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_param_2to2(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_param_2to2(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_mouse_key_press(fn) fn(DT_N_S_behaviors_S_mouse_key_press)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_mouse_key_press(fn, ...) fn(DT_N_S_behaviors_S_mouse_key_press, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_mouse_key_press(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_mouse_key_press(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_tap_dance(fn) fn(DT_N_S_behaviors_S_lshft_tap_dance) fn(DT_N_S_behaviors_S_lctrl_tap_dance) fn(DT_N_S_behaviors_S_lgui_tap_dance) fn(DT_N_S_behaviors_S_lalt_tap_dance) fn(DT_N_S_behaviors_S_navmod_layer_tap_dance) fn(DT_N_S_behaviors_S_seminav_tap_dance) fn(DT_N_S_behaviors_S_r_shifted_tap_dance) fn(DT_N_S_behaviors_S_e_shifted_tap_dance) fn(DT_N_S_behaviors_S_i_shifted_tap_dance) fn(DT_N_S_behaviors_S_u_shifted_tap_dance) fn(DT_N_S_behaviors_S_j_shifted_tap_dance)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_tap_dance(fn, ...) fn(DT_N_S_behaviors_S_lshft_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_lctrl_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_lgui_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_lalt_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_navmod_layer_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_seminav_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_r_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_e_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_i_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_shifted_tap_dance, __VA_ARGS__) fn(DT_N_S_behaviors_S_j_shifted_tap_dance, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_tap_dance(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7) fn(8) fn(9) fn(10)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_tap_dance(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__) fn(8, __VA_ARGS__) fn(9, __VA_ARGS__) fn(10, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_combos(fn) fn(DT_N_S_combos)
#define DT_FOREACH_OKAY_VARGS_zmk_combos(fn, ...) fn(DT_N_S_combos, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_combos(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_combos(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_keymap(fn) fn(DT_N_S_keymap)
#define DT_FOREACH_OKAY_VARGS_zmk_keymap(fn, ...) fn(DT_N_S_keymap, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_keymap(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_keymap(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_zephyr_cdc_acm_uart_BUS_usb 1
